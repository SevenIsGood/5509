<?xml version="1.0" encoding="UTF-8"?>

<resource.explorer version="1.0" name="SYS/BIOS" dir="" href="http://processors.wiki.ti.com/index.php/Category:SYSBIOS">

    <content name="Getting Started Guide" href="D:/ti/ccs5.5/bios_6_37_03_30/docs/Bios_Getting_Started_Guide.pdf">
	<type>weblink</type>
    </content>
    <content name="Users Guide" href="D:/ti/ccs5.5/bios_6_37_03_30/docs/Bios_User_Guide.pdf">
	<type>weblink</type>
    </content>
    <content name="Legacy Applications note" href="D:/ti/ccs5.5/bios_6_37_03_30/docs/Bios_Legacy_App_Note.pdf">
	<type>weblink</type>
    </content>
	<contents name="ARM" desc="ARM" icon="plugin://icons/obj16/devices.png">
		<contents name="ARM9" desc="ARM9" icon="plugin://icons/obj16/devices.png">
			<contents name="DA830/DA828" desc="DA830/DA828" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_676552043059700">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>DA830/DA828</tag>
					<tag>ARM9</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_15.projectspec">
					<filter.ref ref.id="filter_676552043059700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_DA830DA828_ARM9"/>
							<attribute key="device.variant" value="ARM9.DA830/DA828"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_16.projectspec">
					<filter.ref ref.id="filter_676552043059700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_DA830DA828_ARM9"/>
							<attribute key="device.variant" value="ARM9.DA830/DA828"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_676552047089600">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>DA830/DA828</tag>
					<tag>ARM9</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_29.projectspec">
					<filter.ref ref.id="filter_676552047089600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_DA830DA828_ARM9"/>
							<attribute key="device.variant" value="ARM9.DA830/DA828"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_18.projectspec">
					<filter.ref ref.id="filter_676552047089600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_DA830DA828_ARM9"/>
							<attribute key="device.variant" value="ARM9.DA830/DA828"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_19.projectspec">
					<filter.ref ref.id="filter_676552047089600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_DA830DA828_ARM9"/>
							<attribute key="device.variant" value="ARM9.DA830/DA828"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_20.projectspec">
					<filter.ref ref.id="filter_676552047089600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_DA830DA828_ARM9"/>
							<attribute key="device.variant" value="ARM9.DA830/DA828"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_21.projectspec">
					<filter.ref ref.id="filter_676552047089600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_DA830DA828_ARM9"/>
							<attribute key="device.variant" value="ARM9.DA830/DA828"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_22.projectspec">
					<filter.ref ref.id="filter_676552047089600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_DA830DA828_ARM9"/>
							<attribute key="device.variant" value="ARM9.DA830/DA828"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_23.projectspec">
					<filter.ref ref.id="filter_676552047089600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_DA830DA828_ARM9"/>
							<attribute key="device.variant" value="ARM9.DA830/DA828"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_24.projectspec">
					<filter.ref ref.id="filter_676552047089600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_DA830DA828_ARM9"/>
							<attribute key="device.variant" value="ARM9.DA830/DA828"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_26.projectspec">
					<filter.ref ref.id="filter_676552047089600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_DA830DA828_ARM9"/>
							<attribute key="device.variant" value="ARM9.DA830/DA828"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_27.projectspec">
					<filter.ref ref.id="filter_676552047089600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_DA830DA828_ARM9"/>
							<attribute key="device.variant" value="ARM9.DA830/DA828"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_28.projectspec">
					<filter.ref ref.id="filter_676552047089600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_DA830DA828_ARM9"/>
							<attribute key="device.variant" value="ARM9.DA830/DA828"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_25.projectspec">
					<filter.ref ref.id="filter_676552047089600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_DA830DA828_ARM9"/>
							<attribute key="device.variant" value="ARM9.DA830/DA828"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="DSKDA830" desc="DSKDA830" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_676552048570600">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>DSKDA830</tag>
					<tag>ARM9</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_15.projectspec">
					<filter.ref ref.id="filter_676552048570600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_DSKDA830_ARM9"/>
							<attribute key="device.variant" value="ARM9.DA830/DA828.DSKDA830"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_16.projectspec">
					<filter.ref ref.id="filter_676552048570600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_DSKDA830_ARM9"/>
							<attribute key="device.variant" value="ARM9.DA830/DA828.DSKDA830"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_676552048718300">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>DSKDA830</tag>
					<tag>ARM9</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_29.projectspec">
					<filter.ref ref.id="filter_676552048718300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_DSKDA830_ARM9"/>
							<attribute key="device.variant" value="ARM9.DA830/DA828.DSKDA830"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_18.projectspec">
					<filter.ref ref.id="filter_676552048718300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_DSKDA830_ARM9"/>
							<attribute key="device.variant" value="ARM9.DA830/DA828.DSKDA830"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_19.projectspec">
					<filter.ref ref.id="filter_676552048718300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_DSKDA830_ARM9"/>
							<attribute key="device.variant" value="ARM9.DA830/DA828.DSKDA830"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_20.projectspec">
					<filter.ref ref.id="filter_676552048718300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_DSKDA830_ARM9"/>
							<attribute key="device.variant" value="ARM9.DA830/DA828.DSKDA830"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_21.projectspec">
					<filter.ref ref.id="filter_676552048718300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_DSKDA830_ARM9"/>
							<attribute key="device.variant" value="ARM9.DA830/DA828.DSKDA830"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_22.projectspec">
					<filter.ref ref.id="filter_676552048718300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_DSKDA830_ARM9"/>
							<attribute key="device.variant" value="ARM9.DA830/DA828.DSKDA830"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_23.projectspec">
					<filter.ref ref.id="filter_676552048718300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_DSKDA830_ARM9"/>
							<attribute key="device.variant" value="ARM9.DA830/DA828.DSKDA830"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_24.projectspec">
					<filter.ref ref.id="filter_676552048718300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_DSKDA830_ARM9"/>
							<attribute key="device.variant" value="ARM9.DA830/DA828.DSKDA830"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_26.projectspec">
					<filter.ref ref.id="filter_676552048718300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_DSKDA830_ARM9"/>
							<attribute key="device.variant" value="ARM9.DA830/DA828.DSKDA830"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_27.projectspec">
					<filter.ref ref.id="filter_676552048718300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_DSKDA830_ARM9"/>
							<attribute key="device.variant" value="ARM9.DA830/DA828.DSKDA830"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_28.projectspec">
					<filter.ref ref.id="filter_676552048718300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_DSKDA830_ARM9"/>
							<attribute key="device.variant" value="ARM9.DA830/DA828.DSKDA830"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_25.projectspec">
					<filter.ref ref.id="filter_676552048718300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_DSKDA830_ARM9"/>
							<attribute key="device.variant" value="ARM9.DA830/DA828.DSKDA830"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="OMAP4430 (no STM, ETB only)" desc="OMAP4430 (no STM, ETB only)" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_676552050625800">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>OMAP4430 (no STM, ETB only)</tag>
					<tag>ARM9</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_15.projectspec">
					<filter.ref ref.id="filter_676552050625800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_OMAP4430_noSTM_ETBOnly_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAP4430"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_16.projectspec">
					<filter.ref ref.id="filter_676552050625800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_OMAP4430_noSTM_ETBOnly_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAP4430"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_676552050758800">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>OMAP4430 (no STM, ETB only)</tag>
					<tag>ARM9</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_29.projectspec">
					<filter.ref ref.id="filter_676552050758800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_OMAP4430_noSTM_ETBOnly_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAP4430"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_18.projectspec">
					<filter.ref ref.id="filter_676552050758800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_OMAP4430_noSTM_ETBOnly_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAP4430"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_19.projectspec">
					<filter.ref ref.id="filter_676552050758800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_OMAP4430_noSTM_ETBOnly_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAP4430"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_20.projectspec">
					<filter.ref ref.id="filter_676552050758800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_OMAP4430_noSTM_ETBOnly_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAP4430"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_21.projectspec">
					<filter.ref ref.id="filter_676552050758800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_OMAP4430_noSTM_ETBOnly_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAP4430"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_22.projectspec">
					<filter.ref ref.id="filter_676552050758800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_OMAP4430_noSTM_ETBOnly_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAP4430"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_23.projectspec">
					<filter.ref ref.id="filter_676552050758800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_OMAP4430_noSTM_ETBOnly_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAP4430"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_24.projectspec">
					<filter.ref ref.id="filter_676552050758800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_OMAP4430_noSTM_ETBOnly_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAP4430"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_26.projectspec">
					<filter.ref ref.id="filter_676552050758800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_OMAP4430_noSTM_ETBOnly_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAP4430"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_27.projectspec">
					<filter.ref ref.id="filter_676552050758800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_OMAP4430_noSTM_ETBOnly_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAP4430"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_28.projectspec">
					<filter.ref ref.id="filter_676552050758800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_OMAP4430_noSTM_ETBOnly_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAP4430"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_25.projectspec">
					<filter.ref ref.id="filter_676552050758800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_OMAP4430_noSTM_ETBOnly_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAP4430"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="TI814x" desc="TI814x" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_676552051831500">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>TI814x</tag>
					<tag>ARM9</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_15.projectspec">
					<filter.ref ref.id="filter_676552051831500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_TI814x_ARM9"/>
							<attribute key="device.variant" value="ARM9.TI814x"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_16.projectspec">
					<filter.ref ref.id="filter_676552051831500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_TI814x_ARM9"/>
							<attribute key="device.variant" value="ARM9.TI814x"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_676552051959700">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>TI814x</tag>
					<tag>ARM9</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_29.projectspec">
					<filter.ref ref.id="filter_676552051959700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_TI814x_ARM9"/>
							<attribute key="device.variant" value="ARM9.TI814x"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_18.projectspec">
					<filter.ref ref.id="filter_676552051959700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_TI814x_ARM9"/>
							<attribute key="device.variant" value="ARM9.TI814x"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_19.projectspec">
					<filter.ref ref.id="filter_676552051959700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_TI814x_ARM9"/>
							<attribute key="device.variant" value="ARM9.TI814x"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_20.projectspec">
					<filter.ref ref.id="filter_676552051959700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_TI814x_ARM9"/>
							<attribute key="device.variant" value="ARM9.TI814x"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_21.projectspec">
					<filter.ref ref.id="filter_676552051959700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_TI814x_ARM9"/>
							<attribute key="device.variant" value="ARM9.TI814x"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_22.projectspec">
					<filter.ref ref.id="filter_676552051959700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_TI814x_ARM9"/>
							<attribute key="device.variant" value="ARM9.TI814x"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_23.projectspec">
					<filter.ref ref.id="filter_676552051959700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_TI814x_ARM9"/>
							<attribute key="device.variant" value="ARM9.TI814x"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_24.projectspec">
					<filter.ref ref.id="filter_676552051959700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_TI814x_ARM9"/>
							<attribute key="device.variant" value="ARM9.TI814x"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_26.projectspec">
					<filter.ref ref.id="filter_676552051959700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_TI814x_ARM9"/>
							<attribute key="device.variant" value="ARM9.TI814x"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_27.projectspec">
					<filter.ref ref.id="filter_676552051959700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_TI814x_ARM9"/>
							<attribute key="device.variant" value="ARM9.TI814x"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_28.projectspec">
					<filter.ref ref.id="filter_676552051959700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_TI814x_ARM9"/>
							<attribute key="device.variant" value="ARM9.TI814x"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_25.projectspec">
					<filter.ref ref.id="filter_676552051959700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_TI814x_ARM9"/>
							<attribute key="device.variant" value="ARM9.TI814x"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="TI816x" desc="TI816x" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_676552052808200">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>TI816x</tag>
					<tag>ARM9</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_15.projectspec">
					<filter.ref ref.id="filter_676552052808200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_TI816x_ARM9"/>
							<attribute key="device.variant" value="ARM9.TI816x"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_16.projectspec">
					<filter.ref ref.id="filter_676552052808200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_TI816x_ARM9"/>
							<attribute key="device.variant" value="ARM9.TI816x"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_676552052933700">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>TI816x</tag>
					<tag>ARM9</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_29.projectspec">
					<filter.ref ref.id="filter_676552052933700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_TI816x_ARM9"/>
							<attribute key="device.variant" value="ARM9.TI816x"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_18.projectspec">
					<filter.ref ref.id="filter_676552052933700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_TI816x_ARM9"/>
							<attribute key="device.variant" value="ARM9.TI816x"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_19.projectspec">
					<filter.ref ref.id="filter_676552052933700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_TI816x_ARM9"/>
							<attribute key="device.variant" value="ARM9.TI816x"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_20.projectspec">
					<filter.ref ref.id="filter_676552052933700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_TI816x_ARM9"/>
							<attribute key="device.variant" value="ARM9.TI816x"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_21.projectspec">
					<filter.ref ref.id="filter_676552052933700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_TI816x_ARM9"/>
							<attribute key="device.variant" value="ARM9.TI816x"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_22.projectspec">
					<filter.ref ref.id="filter_676552052933700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_TI816x_ARM9"/>
							<attribute key="device.variant" value="ARM9.TI816x"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_23.projectspec">
					<filter.ref ref.id="filter_676552052933700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_TI816x_ARM9"/>
							<attribute key="device.variant" value="ARM9.TI816x"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_24.projectspec">
					<filter.ref ref.id="filter_676552052933700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_TI816x_ARM9"/>
							<attribute key="device.variant" value="ARM9.TI816x"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_26.projectspec">
					<filter.ref ref.id="filter_676552052933700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_TI816x_ARM9"/>
							<attribute key="device.variant" value="ARM9.TI816x"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_27.projectspec">
					<filter.ref ref.id="filter_676552052933700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_TI816x_ARM9"/>
							<attribute key="device.variant" value="ARM9.TI816x"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_28.projectspec">
					<filter.ref ref.id="filter_676552052933700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_TI816x_ARM9"/>
							<attribute key="device.variant" value="ARM9.TI816x"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_25.projectspec">
					<filter.ref ref.id="filter_676552052933700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_TI816x_ARM9"/>
							<attribute key="device.variant" value="ARM9.TI816x"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
		</contents>
		<contents name="C6-Integra C6A81xx" desc="C6-Integra C6A81xx" icon="plugin://icons/obj16/devices.png">
			<contents name="C6A8167" desc="C6A8167" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_676552055179200">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>C6A8167</tag>
					<tag>C6-Integra C6A81xx</tag>
					</search.tags>
				</filter>
				<contents name="GNU Target Examples" desc="SYS/BIOS Examples for GNU targets." customPageType="genericNote">
				<filter id="filter_676552055832400">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>C6A8167</tag>
					<tag>C6-Integra C6A81xx</tag>
					<tag>GNU Target Examples</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\com_ti_rtsc_sysbios_example_45.projectspec">
					<filter.ref ref.id="filter_676552055832400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_C6A8167_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320C6A8167"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\com_ti_rtsc_sysbios_example_46.projectspec">
					<filter.ref ref.id="filter_676552055832400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_C6A8167_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320C6A8167"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_676552055917700">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>C6A8167</tag>
					<tag>C6-Integra C6A81xx</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_59.projectspec">
					<filter.ref ref.id="filter_676552055917700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_C6A8167_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320C6A8167"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_48.projectspec">
					<filter.ref ref.id="filter_676552055917700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_C6A8167_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320C6A8167"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_49.projectspec">
					<filter.ref ref.id="filter_676552055917700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_C6A8167_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320C6A8167"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_50.projectspec">
					<filter.ref ref.id="filter_676552055917700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_C6A8167_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320C6A8167"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_51.projectspec">
					<filter.ref ref.id="filter_676552055917700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_C6A8167_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320C6A8167"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_52.projectspec">
					<filter.ref ref.id="filter_676552055917700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_C6A8167_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320C6A8167"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_53.projectspec">
					<filter.ref ref.id="filter_676552055917700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_C6A8167_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320C6A8167"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_54.projectspec">
					<filter.ref ref.id="filter_676552055917700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_C6A8167_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320C6A8167"/>
						</attributes>
					</type>
				</content>
				<content name="Semi-Hosting Example" desc="This example leverages Semi-Hosting for printf IO.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_60.projectspec">
					<filter.ref ref.id="filter_676552055917700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="semihost_C6A8167_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320C6A8167"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_56.projectspec">
					<filter.ref ref.id="filter_676552055917700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_C6A8167_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320C6A8167"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_57.projectspec">
					<filter.ref ref.id="filter_676552055917700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_C6A8167_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320C6A8167"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_58.projectspec">
					<filter.ref ref.id="filter_676552055917700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_C6A8167_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320C6A8167"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_55.projectspec">
					<filter.ref ref.id="filter_676552055917700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_C6A8167_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320C6A8167"/>
						</attributes>
					</type>
				</content>
				</contents>
				</contents>
				<contents name="TI Target Examples" desc="SYS/BIOS Examples for TI targets." customPageType="genericNote">
				<filter id="filter_676552056319700">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>C6A8167</tag>
					<tag>C6-Integra C6A81xx</tag>
					<tag>TI Target Examples</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\com_ti_rtsc_sysbios_example_30.projectspec">
					<filter.ref ref.id="filter_676552056319700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_C6A8167_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320C6A8167"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\com_ti_rtsc_sysbios_example_31.projectspec">
					<filter.ref ref.id="filter_676552056319700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_C6A8167_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320C6A8167"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_676552056373400">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>C6A8167</tag>
					<tag>C6-Integra C6A81xx</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_44.projectspec">
					<filter.ref ref.id="filter_676552056373400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_C6A8167_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320C6A8167"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_33.projectspec">
					<filter.ref ref.id="filter_676552056373400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_C6A8167_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320C6A8167"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_34.projectspec">
					<filter.ref ref.id="filter_676552056373400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_C6A8167_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320C6A8167"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_35.projectspec">
					<filter.ref ref.id="filter_676552056373400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_C6A8167_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320C6A8167"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_36.projectspec">
					<filter.ref ref.id="filter_676552056373400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_C6A8167_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320C6A8167"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_37.projectspec">
					<filter.ref ref.id="filter_676552056373400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_C6A8167_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320C6A8167"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_38.projectspec">
					<filter.ref ref.id="filter_676552056373400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_C6A8167_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320C6A8167"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_39.projectspec">
					<filter.ref ref.id="filter_676552056373400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_C6A8167_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320C6A8167"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_41.projectspec">
					<filter.ref ref.id="filter_676552056373400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_C6A8167_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320C6A8167"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_42.projectspec">
					<filter.ref ref.id="filter_676552056373400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_C6A8167_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320C6A8167"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_43.projectspec">
					<filter.ref ref.id="filter_676552056373400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_C6A8167_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320C6A8167"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_40.projectspec">
					<filter.ref ref.id="filter_676552056373400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_C6A8167_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320C6A8167"/>
						</attributes>
					</type>
				</content>
				</contents>
				</contents>
			</contents>
			<contents name="C6A8168" desc="C6A8168" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_676552056700000">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>C6A8168</tag>
					<tag>C6-Integra C6A81xx</tag>
					</search.tags>
				</filter>
				<contents name="GNU Target Examples" desc="SYS/BIOS Examples for GNU targets." customPageType="genericNote">
				<filter id="filter_676552057200300">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>C6A8168</tag>
					<tag>C6-Integra C6A81xx</tag>
					<tag>GNU Target Examples</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\com_ti_rtsc_sysbios_example_45.projectspec">
					<filter.ref ref.id="filter_676552057200300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_C6A8168_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320C6A8168"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\com_ti_rtsc_sysbios_example_46.projectspec">
					<filter.ref ref.id="filter_676552057200300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_C6A8168_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320C6A8168"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_676552057272900">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>C6A8168</tag>
					<tag>C6-Integra C6A81xx</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_59.projectspec">
					<filter.ref ref.id="filter_676552057272900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_C6A8168_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320C6A8168"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_48.projectspec">
					<filter.ref ref.id="filter_676552057272900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_C6A8168_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320C6A8168"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_49.projectspec">
					<filter.ref ref.id="filter_676552057272900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_C6A8168_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320C6A8168"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_50.projectspec">
					<filter.ref ref.id="filter_676552057272900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_C6A8168_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320C6A8168"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_51.projectspec">
					<filter.ref ref.id="filter_676552057272900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_C6A8168_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320C6A8168"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_52.projectspec">
					<filter.ref ref.id="filter_676552057272900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_C6A8168_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320C6A8168"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_53.projectspec">
					<filter.ref ref.id="filter_676552057272900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_C6A8168_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320C6A8168"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_54.projectspec">
					<filter.ref ref.id="filter_676552057272900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_C6A8168_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320C6A8168"/>
						</attributes>
					</type>
				</content>
				<content name="Semi-Hosting Example" desc="This example leverages Semi-Hosting for printf IO.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_60.projectspec">
					<filter.ref ref.id="filter_676552057272900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="semihost_C6A8168_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320C6A8168"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_56.projectspec">
					<filter.ref ref.id="filter_676552057272900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_C6A8168_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320C6A8168"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_57.projectspec">
					<filter.ref ref.id="filter_676552057272900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_C6A8168_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320C6A8168"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_58.projectspec">
					<filter.ref ref.id="filter_676552057272900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_C6A8168_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320C6A8168"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_55.projectspec">
					<filter.ref ref.id="filter_676552057272900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_C6A8168_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320C6A8168"/>
						</attributes>
					</type>
				</content>
				</contents>
				</contents>
				<contents name="TI Target Examples" desc="SYS/BIOS Examples for TI targets." customPageType="genericNote">
				<filter id="filter_676552057644200">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>C6A8168</tag>
					<tag>C6-Integra C6A81xx</tag>
					<tag>TI Target Examples</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\com_ti_rtsc_sysbios_example_30.projectspec">
					<filter.ref ref.id="filter_676552057644200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_C6A8168_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320C6A8168"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\com_ti_rtsc_sysbios_example_31.projectspec">
					<filter.ref ref.id="filter_676552057644200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_C6A8168_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320C6A8168"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_676552057685600">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>C6A8168</tag>
					<tag>C6-Integra C6A81xx</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_44.projectspec">
					<filter.ref ref.id="filter_676552057685600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_C6A8168_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320C6A8168"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_33.projectspec">
					<filter.ref ref.id="filter_676552057685600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_C6A8168_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320C6A8168"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_34.projectspec">
					<filter.ref ref.id="filter_676552057685600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_C6A8168_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320C6A8168"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_35.projectspec">
					<filter.ref ref.id="filter_676552057685600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_C6A8168_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320C6A8168"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_36.projectspec">
					<filter.ref ref.id="filter_676552057685600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_C6A8168_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320C6A8168"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_37.projectspec">
					<filter.ref ref.id="filter_676552057685600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_C6A8168_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320C6A8168"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_38.projectspec">
					<filter.ref ref.id="filter_676552057685600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_C6A8168_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320C6A8168"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_39.projectspec">
					<filter.ref ref.id="filter_676552057685600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_C6A8168_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320C6A8168"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_41.projectspec">
					<filter.ref ref.id="filter_676552057685600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_C6A8168_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320C6A8168"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_42.projectspec">
					<filter.ref ref.id="filter_676552057685600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_C6A8168_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320C6A8168"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_43.projectspec">
					<filter.ref ref.id="filter_676552057685600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_C6A8168_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320C6A8168"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_40.projectspec">
					<filter.ref ref.id="filter_676552057685600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_C6A8168_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320C6A8168"/>
						</attributes>
					</type>
				</content>
				</contents>
				</contents>
			</contents>
		</contents>
		<contents name="C66xx Multicore DSP" desc="C66xx Multicore DSP" icon="plugin://icons/obj16/devices.png">
			<contents name="TCI6614" desc="TCI6614" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_676552058020200">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>TCI6614</tag>
					<tag>C66xx Multicore DSP</tag>
					</search.tags>
				</filter>
				<contents name="GNU Target Examples" desc="SYS/BIOS Examples for GNU targets." customPageType="genericNote">
				<filter id="filter_676552058475200">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>TCI6614</tag>
					<tag>C66xx Multicore DSP</tag>
					<tag>GNU Target Examples</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\com_ti_rtsc_sysbios_example_45.projectspec">
					<filter.ref ref.id="filter_676552058475200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_TCI6614_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TCI6614"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\com_ti_rtsc_sysbios_example_46.projectspec">
					<filter.ref ref.id="filter_676552058475200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_TCI6614_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TCI6614"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_676552058515300">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>TCI6614</tag>
					<tag>C66xx Multicore DSP</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_59.projectspec">
					<filter.ref ref.id="filter_676552058515300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_TCI6614_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TCI6614"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_48.projectspec">
					<filter.ref ref.id="filter_676552058515300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_TCI6614_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TCI6614"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_49.projectspec">
					<filter.ref ref.id="filter_676552058515300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_TCI6614_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TCI6614"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_50.projectspec">
					<filter.ref ref.id="filter_676552058515300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_TCI6614_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TCI6614"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_51.projectspec">
					<filter.ref ref.id="filter_676552058515300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_TCI6614_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TCI6614"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_52.projectspec">
					<filter.ref ref.id="filter_676552058515300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_TCI6614_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TCI6614"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_53.projectspec">
					<filter.ref ref.id="filter_676552058515300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_TCI6614_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TCI6614"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_54.projectspec">
					<filter.ref ref.id="filter_676552058515300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_TCI6614_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TCI6614"/>
						</attributes>
					</type>
				</content>
				<content name="Semi-Hosting Example" desc="This example leverages Semi-Hosting for printf IO.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_60.projectspec">
					<filter.ref ref.id="filter_676552058515300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="semihost_TCI6614_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TCI6614"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_56.projectspec">
					<filter.ref ref.id="filter_676552058515300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_TCI6614_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TCI6614"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_57.projectspec">
					<filter.ref ref.id="filter_676552058515300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_TCI6614_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TCI6614"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_58.projectspec">
					<filter.ref ref.id="filter_676552058515300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_TCI6614_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TCI6614"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_55.projectspec">
					<filter.ref ref.id="filter_676552058515300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_TCI6614_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TCI6614"/>
						</attributes>
					</type>
				</content>
				</contents>
				</contents>
				<contents name="TI Target Examples" desc="SYS/BIOS Examples for TI targets." customPageType="genericNote">
				<filter id="filter_676552058861200">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>TCI6614</tag>
					<tag>C66xx Multicore DSP</tag>
					<tag>TI Target Examples</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\com_ti_rtsc_sysbios_example_30.projectspec">
					<filter.ref ref.id="filter_676552058861200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_TCI6614_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TCI6614"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\com_ti_rtsc_sysbios_example_31.projectspec">
					<filter.ref ref.id="filter_676552058861200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_TCI6614_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TCI6614"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_676552058917300">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>TCI6614</tag>
					<tag>C66xx Multicore DSP</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_44.projectspec">
					<filter.ref ref.id="filter_676552058917300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_TCI6614_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TCI6614"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_33.projectspec">
					<filter.ref ref.id="filter_676552058917300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_TCI6614_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TCI6614"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_34.projectspec">
					<filter.ref ref.id="filter_676552058917300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_TCI6614_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TCI6614"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_35.projectspec">
					<filter.ref ref.id="filter_676552058917300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_TCI6614_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TCI6614"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_36.projectspec">
					<filter.ref ref.id="filter_676552058917300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_TCI6614_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TCI6614"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_37.projectspec">
					<filter.ref ref.id="filter_676552058917300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_TCI6614_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TCI6614"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_38.projectspec">
					<filter.ref ref.id="filter_676552058917300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_TCI6614_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TCI6614"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_39.projectspec">
					<filter.ref ref.id="filter_676552058917300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_TCI6614_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TCI6614"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_41.projectspec">
					<filter.ref ref.id="filter_676552058917300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_TCI6614_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TCI6614"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_42.projectspec">
					<filter.ref ref.id="filter_676552058917300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_TCI6614_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TCI6614"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_43.projectspec">
					<filter.ref ref.id="filter_676552058917300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_TCI6614_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TCI6614"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_40.projectspec">
					<filter.ref ref.id="filter_676552058917300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_TCI6614_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TCI6614"/>
						</attributes>
					</type>
				</content>
				</contents>
				</contents>
			</contents>
		</contents>
		<contents name="Cortex A" desc="Cortex A" icon="plugin://icons/obj16/devices.png">
			<contents name="TI814x" desc="TI814x" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_676552060995100">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>TI814x</tag>
					<tag>Cortex A</tag>
					</search.tags>
				</filter>
				<contents name="GNU Target Examples" desc="SYS/BIOS Examples for GNU targets." customPageType="genericNote">
				<filter id="filter_676552061509500">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>TI814x</tag>
					<tag>Cortex A</tag>
					<tag>GNU Target Examples</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\com_ti_rtsc_sysbios_example_45.projectspec">
					<filter.ref ref.id="filter_676552061509500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_TI814x_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TI814x"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\com_ti_rtsc_sysbios_example_46.projectspec">
					<filter.ref ref.id="filter_676552061509500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_TI814x_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TI814x"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_676552061565000">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>TI814x</tag>
					<tag>Cortex A</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_59.projectspec">
					<filter.ref ref.id="filter_676552061565000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_TI814x_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TI814x"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_48.projectspec">
					<filter.ref ref.id="filter_676552061565000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_TI814x_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TI814x"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_49.projectspec">
					<filter.ref ref.id="filter_676552061565000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_TI814x_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TI814x"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_50.projectspec">
					<filter.ref ref.id="filter_676552061565000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_TI814x_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TI814x"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_51.projectspec">
					<filter.ref ref.id="filter_676552061565000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_TI814x_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TI814x"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_52.projectspec">
					<filter.ref ref.id="filter_676552061565000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_TI814x_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TI814x"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_53.projectspec">
					<filter.ref ref.id="filter_676552061565000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_TI814x_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TI814x"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_54.projectspec">
					<filter.ref ref.id="filter_676552061565000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_TI814x_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TI814x"/>
						</attributes>
					</type>
				</content>
				<content name="Semi-Hosting Example" desc="This example leverages Semi-Hosting for printf IO.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_60.projectspec">
					<filter.ref ref.id="filter_676552061565000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="semihost_TI814x_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TI814x"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_56.projectspec">
					<filter.ref ref.id="filter_676552061565000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_TI814x_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TI814x"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_57.projectspec">
					<filter.ref ref.id="filter_676552061565000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_TI814x_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TI814x"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_58.projectspec">
					<filter.ref ref.id="filter_676552061565000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_TI814x_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TI814x"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_55.projectspec">
					<filter.ref ref.id="filter_676552061565000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_TI814x_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TI814x"/>
						</attributes>
					</type>
				</content>
				</contents>
				</contents>
				<contents name="TI Target Examples" desc="SYS/BIOS Examples for TI targets." customPageType="genericNote">
				<filter id="filter_676552061946700">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>TI814x</tag>
					<tag>Cortex A</tag>
					<tag>TI Target Examples</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\com_ti_rtsc_sysbios_example_30.projectspec">
					<filter.ref ref.id="filter_676552061946700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_TI814x_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TI814x"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\com_ti_rtsc_sysbios_example_31.projectspec">
					<filter.ref ref.id="filter_676552061946700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_TI814x_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TI814x"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_676552061984000">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>TI814x</tag>
					<tag>Cortex A</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_44.projectspec">
					<filter.ref ref.id="filter_676552061984000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_TI814x_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TI814x"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_33.projectspec">
					<filter.ref ref.id="filter_676552061984000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_TI814x_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TI814x"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_34.projectspec">
					<filter.ref ref.id="filter_676552061984000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_TI814x_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TI814x"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_35.projectspec">
					<filter.ref ref.id="filter_676552061984000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_TI814x_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TI814x"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_36.projectspec">
					<filter.ref ref.id="filter_676552061984000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_TI814x_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TI814x"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_37.projectspec">
					<filter.ref ref.id="filter_676552061984000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_TI814x_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TI814x"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_38.projectspec">
					<filter.ref ref.id="filter_676552061984000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_TI814x_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TI814x"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_39.projectspec">
					<filter.ref ref.id="filter_676552061984000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_TI814x_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TI814x"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_41.projectspec">
					<filter.ref ref.id="filter_676552061984000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_TI814x_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TI814x"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_42.projectspec">
					<filter.ref ref.id="filter_676552061984000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_TI814x_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TI814x"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_43.projectspec">
					<filter.ref ref.id="filter_676552061984000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_TI814x_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TI814x"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_40.projectspec">
					<filter.ref ref.id="filter_676552061984000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_TI814x_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TI814x"/>
						</attributes>
					</type>
				</content>
				</contents>
				</contents>
			</contents>
			<contents name="TI816x" desc="TI816x" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_676552062240100">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>TI816x</tag>
					<tag>Cortex A</tag>
					</search.tags>
				</filter>
				<contents name="GNU Target Examples" desc="SYS/BIOS Examples for GNU targets." customPageType="genericNote">
				<filter id="filter_676552062713300">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>TI816x</tag>
					<tag>Cortex A</tag>
					<tag>GNU Target Examples</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\com_ti_rtsc_sysbios_example_45.projectspec">
					<filter.ref ref.id="filter_676552062713300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_TI816x_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TI816x"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\com_ti_rtsc_sysbios_example_46.projectspec">
					<filter.ref ref.id="filter_676552062713300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_TI816x_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TI816x"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_676552062750500">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>TI816x</tag>
					<tag>Cortex A</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_59.projectspec">
					<filter.ref ref.id="filter_676552062750500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_TI816x_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TI816x"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_48.projectspec">
					<filter.ref ref.id="filter_676552062750500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_TI816x_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TI816x"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_49.projectspec">
					<filter.ref ref.id="filter_676552062750500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_TI816x_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TI816x"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_50.projectspec">
					<filter.ref ref.id="filter_676552062750500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_TI816x_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TI816x"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_51.projectspec">
					<filter.ref ref.id="filter_676552062750500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_TI816x_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TI816x"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_52.projectspec">
					<filter.ref ref.id="filter_676552062750500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_TI816x_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TI816x"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_53.projectspec">
					<filter.ref ref.id="filter_676552062750500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_TI816x_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TI816x"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_54.projectspec">
					<filter.ref ref.id="filter_676552062750500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_TI816x_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TI816x"/>
						</attributes>
					</type>
				</content>
				<content name="Semi-Hosting Example" desc="This example leverages Semi-Hosting for printf IO.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_60.projectspec">
					<filter.ref ref.id="filter_676552062750500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="semihost_TI816x_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TI816x"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_56.projectspec">
					<filter.ref ref.id="filter_676552062750500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_TI816x_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TI816x"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_57.projectspec">
					<filter.ref ref.id="filter_676552062750500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_TI816x_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TI816x"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_58.projectspec">
					<filter.ref ref.id="filter_676552062750500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_TI816x_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TI816x"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_55.projectspec">
					<filter.ref ref.id="filter_676552062750500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_TI816x_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TI816x"/>
						</attributes>
					</type>
				</content>
				</contents>
				</contents>
				<contents name="TI Target Examples" desc="SYS/BIOS Examples for TI targets." customPageType="genericNote">
				<filter id="filter_676552063066900">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>TI816x</tag>
					<tag>Cortex A</tag>
					<tag>TI Target Examples</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\com_ti_rtsc_sysbios_example_30.projectspec">
					<filter.ref ref.id="filter_676552063066900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_TI816x_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TI816x"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\com_ti_rtsc_sysbios_example_31.projectspec">
					<filter.ref ref.id="filter_676552063066900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_TI816x_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TI816x"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_676552063102300">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>TI816x</tag>
					<tag>Cortex A</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_44.projectspec">
					<filter.ref ref.id="filter_676552063102300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_TI816x_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TI816x"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_33.projectspec">
					<filter.ref ref.id="filter_676552063102300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_TI816x_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TI816x"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_34.projectspec">
					<filter.ref ref.id="filter_676552063102300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_TI816x_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TI816x"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_35.projectspec">
					<filter.ref ref.id="filter_676552063102300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_TI816x_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TI816x"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_36.projectspec">
					<filter.ref ref.id="filter_676552063102300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_TI816x_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TI816x"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_37.projectspec">
					<filter.ref ref.id="filter_676552063102300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_TI816x_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TI816x"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_38.projectspec">
					<filter.ref ref.id="filter_676552063102300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_TI816x_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TI816x"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_39.projectspec">
					<filter.ref ref.id="filter_676552063102300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_TI816x_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TI816x"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_41.projectspec">
					<filter.ref ref.id="filter_676552063102300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_TI816x_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TI816x"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_42.projectspec">
					<filter.ref ref.id="filter_676552063102300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_TI816x_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TI816x"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_43.projectspec">
					<filter.ref ref.id="filter_676552063102300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_TI816x_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TI816x"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_40.projectspec">
					<filter.ref ref.id="filter_676552063102300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_TI816x_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TI816x"/>
						</attributes>
					</type>
				</content>
				</contents>
				</contents>
			</contents>
		</contents>
		<contents name="Cortex M" desc="Cortex M" icon="plugin://icons/obj16/devices.png">
			<contents name="OMAP4430 (no STM, ETB only)" desc="OMAP4430 (no STM, ETB only)" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_676552063378600">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>OMAP4430 (no STM, ETB only)</tag>
					<tag>Cortex M</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_15.projectspec">
					<filter.ref ref.id="filter_676552063378600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_OMAP4430_noSTM_ETBOnly_CortexM"/>
							<attribute key="device.variant" value="Cortex M.OMAP4430"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_16.projectspec">
					<filter.ref ref.id="filter_676552063378600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_OMAP4430_noSTM_ETBOnly_CortexM"/>
							<attribute key="device.variant" value="Cortex M.OMAP4430"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_676552063483200">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>OMAP4430 (no STM, ETB only)</tag>
					<tag>Cortex M</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_29.projectspec">
					<filter.ref ref.id="filter_676552063483200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_OMAP4430_noSTM_ETBOnly_CortexM"/>
							<attribute key="device.variant" value="Cortex M.OMAP4430"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_18.projectspec">
					<filter.ref ref.id="filter_676552063483200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_OMAP4430_noSTM_ETBOnly_CortexM"/>
							<attribute key="device.variant" value="Cortex M.OMAP4430"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_19.projectspec">
					<filter.ref ref.id="filter_676552063483200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_OMAP4430_noSTM_ETBOnly_CortexM"/>
							<attribute key="device.variant" value="Cortex M.OMAP4430"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_20.projectspec">
					<filter.ref ref.id="filter_676552063483200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_OMAP4430_noSTM_ETBOnly_CortexM"/>
							<attribute key="device.variant" value="Cortex M.OMAP4430"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_21.projectspec">
					<filter.ref ref.id="filter_676552063483200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_OMAP4430_noSTM_ETBOnly_CortexM"/>
							<attribute key="device.variant" value="Cortex M.OMAP4430"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_22.projectspec">
					<filter.ref ref.id="filter_676552063483200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_OMAP4430_noSTM_ETBOnly_CortexM"/>
							<attribute key="device.variant" value="Cortex M.OMAP4430"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_23.projectspec">
					<filter.ref ref.id="filter_676552063483200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_OMAP4430_noSTM_ETBOnly_CortexM"/>
							<attribute key="device.variant" value="Cortex M.OMAP4430"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_24.projectspec">
					<filter.ref ref.id="filter_676552063483200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_OMAP4430_noSTM_ETBOnly_CortexM"/>
							<attribute key="device.variant" value="Cortex M.OMAP4430"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_26.projectspec">
					<filter.ref ref.id="filter_676552063483200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_OMAP4430_noSTM_ETBOnly_CortexM"/>
							<attribute key="device.variant" value="Cortex M.OMAP4430"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_27.projectspec">
					<filter.ref ref.id="filter_676552063483200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_OMAP4430_noSTM_ETBOnly_CortexM"/>
							<attribute key="device.variant" value="Cortex M.OMAP4430"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_28.projectspec">
					<filter.ref ref.id="filter_676552063483200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_OMAP4430_noSTM_ETBOnly_CortexM"/>
							<attribute key="device.variant" value="Cortex M.OMAP4430"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_25.projectspec">
					<filter.ref ref.id="filter_676552063483200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_OMAP4430_noSTM_ETBOnly_CortexM"/>
							<attribute key="device.variant" value="Cortex M.OMAP4430"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="TI814x" desc="TI814x" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_676552064291900">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>TI814x</tag>
					<tag>Cortex M</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_15.projectspec">
					<filter.ref ref.id="filter_676552064291900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_TI814x_CortexM"/>
							<attribute key="device.variant" value="Cortex M.TI814x"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_16.projectspec">
					<filter.ref ref.id="filter_676552064291900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_TI814x_CortexM"/>
							<attribute key="device.variant" value="Cortex M.TI814x"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_676552064387800">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>TI814x</tag>
					<tag>Cortex M</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_29.projectspec">
					<filter.ref ref.id="filter_676552064387800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_TI814x_CortexM"/>
							<attribute key="device.variant" value="Cortex M.TI814x"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_18.projectspec">
					<filter.ref ref.id="filter_676552064387800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_TI814x_CortexM"/>
							<attribute key="device.variant" value="Cortex M.TI814x"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_19.projectspec">
					<filter.ref ref.id="filter_676552064387800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_TI814x_CortexM"/>
							<attribute key="device.variant" value="Cortex M.TI814x"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_20.projectspec">
					<filter.ref ref.id="filter_676552064387800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_TI814x_CortexM"/>
							<attribute key="device.variant" value="Cortex M.TI814x"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_21.projectspec">
					<filter.ref ref.id="filter_676552064387800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_TI814x_CortexM"/>
							<attribute key="device.variant" value="Cortex M.TI814x"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_22.projectspec">
					<filter.ref ref.id="filter_676552064387800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_TI814x_CortexM"/>
							<attribute key="device.variant" value="Cortex M.TI814x"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_23.projectspec">
					<filter.ref ref.id="filter_676552064387800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_TI814x_CortexM"/>
							<attribute key="device.variant" value="Cortex M.TI814x"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_24.projectspec">
					<filter.ref ref.id="filter_676552064387800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_TI814x_CortexM"/>
							<attribute key="device.variant" value="Cortex M.TI814x"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_26.projectspec">
					<filter.ref ref.id="filter_676552064387800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_TI814x_CortexM"/>
							<attribute key="device.variant" value="Cortex M.TI814x"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_27.projectspec">
					<filter.ref ref.id="filter_676552064387800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_TI814x_CortexM"/>
							<attribute key="device.variant" value="Cortex M.TI814x"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_28.projectspec">
					<filter.ref ref.id="filter_676552064387800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_TI814x_CortexM"/>
							<attribute key="device.variant" value="Cortex M.TI814x"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_25.projectspec">
					<filter.ref ref.id="filter_676552064387800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_TI814x_CortexM"/>
							<attribute key="device.variant" value="Cortex M.TI814x"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="TI816x" desc="TI816x" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_676552065186300">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>TI816x</tag>
					<tag>Cortex M</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_15.projectspec">
					<filter.ref ref.id="filter_676552065186300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_TI816x_CortexM"/>
							<attribute key="device.variant" value="Cortex M.TI816x"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_16.projectspec">
					<filter.ref ref.id="filter_676552065186300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_TI816x_CortexM"/>
							<attribute key="device.variant" value="Cortex M.TI816x"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_676552065286000">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>TI816x</tag>
					<tag>Cortex M</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_29.projectspec">
					<filter.ref ref.id="filter_676552065286000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_TI816x_CortexM"/>
							<attribute key="device.variant" value="Cortex M.TI816x"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_18.projectspec">
					<filter.ref ref.id="filter_676552065286000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_TI816x_CortexM"/>
							<attribute key="device.variant" value="Cortex M.TI816x"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_19.projectspec">
					<filter.ref ref.id="filter_676552065286000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_TI816x_CortexM"/>
							<attribute key="device.variant" value="Cortex M.TI816x"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_20.projectspec">
					<filter.ref ref.id="filter_676552065286000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_TI816x_CortexM"/>
							<attribute key="device.variant" value="Cortex M.TI816x"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_21.projectspec">
					<filter.ref ref.id="filter_676552065286000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_TI816x_CortexM"/>
							<attribute key="device.variant" value="Cortex M.TI816x"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_22.projectspec">
					<filter.ref ref.id="filter_676552065286000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_TI816x_CortexM"/>
							<attribute key="device.variant" value="Cortex M.TI816x"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_23.projectspec">
					<filter.ref ref.id="filter_676552065286000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_TI816x_CortexM"/>
							<attribute key="device.variant" value="Cortex M.TI816x"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_24.projectspec">
					<filter.ref ref.id="filter_676552065286000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_TI816x_CortexM"/>
							<attribute key="device.variant" value="Cortex M.TI816x"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_26.projectspec">
					<filter.ref ref.id="filter_676552065286000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_TI816x_CortexM"/>
							<attribute key="device.variant" value="Cortex M.TI816x"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_27.projectspec">
					<filter.ref ref.id="filter_676552065286000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_TI816x_CortexM"/>
							<attribute key="device.variant" value="Cortex M.TI816x"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_28.projectspec">
					<filter.ref ref.id="filter_676552065286000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_TI816x_CortexM"/>
							<attribute key="device.variant" value="Cortex M.TI816x"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_25.projectspec">
					<filter.ref ref.id="filter_676552065286000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_TI816x_CortexM"/>
							<attribute key="device.variant" value="Cortex M.TI816x"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
		</contents>
		<contents name="DaVinci DM37xx" desc="DaVinci DM37xx" icon="plugin://icons/obj16/devices.png">
			<contents name="BeagleBoard_xM" desc="BeagleBoard_xM" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_676552067512500">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>BeagleBoard_xM</tag>
					<tag>DaVinci DM37xx</tag>
					</search.tags>
				</filter>
				<contents name="GNU Target Examples" desc="SYS/BIOS Examples for GNU targets." customPageType="genericNote">
				<filter id="filter_676552068067600">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>BeagleBoard_xM</tag>
					<tag>DaVinci DM37xx</tag>
					<tag>GNU Target Examples</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\com_ti_rtsc_sysbios_example_45.projectspec">
					<filter.ref ref.id="filter_676552068067600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_BeagleBoard_xM_CortexA"/>
							<attribute key="device.variant" value="Cortex A.DM3730.BeagleBoard_xM"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\com_ti_rtsc_sysbios_example_46.projectspec">
					<filter.ref ref.id="filter_676552068067600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_BeagleBoard_xM_CortexA"/>
							<attribute key="device.variant" value="Cortex A.DM3730.BeagleBoard_xM"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_676552068113800">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>BeagleBoard_xM</tag>
					<tag>DaVinci DM37xx</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_59.projectspec">
					<filter.ref ref.id="filter_676552068113800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_BeagleBoard_xM_CortexA"/>
							<attribute key="device.variant" value="Cortex A.DM3730.BeagleBoard_xM"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_48.projectspec">
					<filter.ref ref.id="filter_676552068113800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_BeagleBoard_xM_CortexA"/>
							<attribute key="device.variant" value="Cortex A.DM3730.BeagleBoard_xM"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_49.projectspec">
					<filter.ref ref.id="filter_676552068113800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_BeagleBoard_xM_CortexA"/>
							<attribute key="device.variant" value="Cortex A.DM3730.BeagleBoard_xM"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_50.projectspec">
					<filter.ref ref.id="filter_676552068113800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_BeagleBoard_xM_CortexA"/>
							<attribute key="device.variant" value="Cortex A.DM3730.BeagleBoard_xM"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_51.projectspec">
					<filter.ref ref.id="filter_676552068113800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_BeagleBoard_xM_CortexA"/>
							<attribute key="device.variant" value="Cortex A.DM3730.BeagleBoard_xM"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_52.projectspec">
					<filter.ref ref.id="filter_676552068113800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_BeagleBoard_xM_CortexA"/>
							<attribute key="device.variant" value="Cortex A.DM3730.BeagleBoard_xM"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_53.projectspec">
					<filter.ref ref.id="filter_676552068113800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_BeagleBoard_xM_CortexA"/>
							<attribute key="device.variant" value="Cortex A.DM3730.BeagleBoard_xM"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_54.projectspec">
					<filter.ref ref.id="filter_676552068113800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_BeagleBoard_xM_CortexA"/>
							<attribute key="device.variant" value="Cortex A.DM3730.BeagleBoard_xM"/>
						</attributes>
					</type>
				</content>
				<content name="Semi-Hosting Example" desc="This example leverages Semi-Hosting for printf IO.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_60.projectspec">
					<filter.ref ref.id="filter_676552068113800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="semihost_BeagleBoard_xM_CortexA"/>
							<attribute key="device.variant" value="Cortex A.DM3730.BeagleBoard_xM"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_56.projectspec">
					<filter.ref ref.id="filter_676552068113800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_BeagleBoard_xM_CortexA"/>
							<attribute key="device.variant" value="Cortex A.DM3730.BeagleBoard_xM"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_57.projectspec">
					<filter.ref ref.id="filter_676552068113800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_BeagleBoard_xM_CortexA"/>
							<attribute key="device.variant" value="Cortex A.DM3730.BeagleBoard_xM"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_58.projectspec">
					<filter.ref ref.id="filter_676552068113800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_BeagleBoard_xM_CortexA"/>
							<attribute key="device.variant" value="Cortex A.DM3730.BeagleBoard_xM"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_55.projectspec">
					<filter.ref ref.id="filter_676552068113800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_BeagleBoard_xM_CortexA"/>
							<attribute key="device.variant" value="Cortex A.DM3730.BeagleBoard_xM"/>
						</attributes>
					</type>
				</content>
				</contents>
				</contents>
				<contents name="TI Target Examples" desc="SYS/BIOS Examples for TI targets." customPageType="genericNote">
				<filter id="filter_676552068463600">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>BeagleBoard_xM</tag>
					<tag>DaVinci DM37xx</tag>
					<tag>TI Target Examples</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\com_ti_rtsc_sysbios_example_30.projectspec">
					<filter.ref ref.id="filter_676552068463600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_BeagleBoard_xM_CortexA"/>
							<attribute key="device.variant" value="Cortex A.DM3730.BeagleBoard_xM"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\com_ti_rtsc_sysbios_example_31.projectspec">
					<filter.ref ref.id="filter_676552068463600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_BeagleBoard_xM_CortexA"/>
							<attribute key="device.variant" value="Cortex A.DM3730.BeagleBoard_xM"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_676552068501700">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>BeagleBoard_xM</tag>
					<tag>DaVinci DM37xx</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_44.projectspec">
					<filter.ref ref.id="filter_676552068501700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_BeagleBoard_xM_CortexA"/>
							<attribute key="device.variant" value="Cortex A.DM3730.BeagleBoard_xM"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_33.projectspec">
					<filter.ref ref.id="filter_676552068501700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_BeagleBoard_xM_CortexA"/>
							<attribute key="device.variant" value="Cortex A.DM3730.BeagleBoard_xM"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_34.projectspec">
					<filter.ref ref.id="filter_676552068501700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_BeagleBoard_xM_CortexA"/>
							<attribute key="device.variant" value="Cortex A.DM3730.BeagleBoard_xM"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_35.projectspec">
					<filter.ref ref.id="filter_676552068501700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_BeagleBoard_xM_CortexA"/>
							<attribute key="device.variant" value="Cortex A.DM3730.BeagleBoard_xM"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_36.projectspec">
					<filter.ref ref.id="filter_676552068501700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_BeagleBoard_xM_CortexA"/>
							<attribute key="device.variant" value="Cortex A.DM3730.BeagleBoard_xM"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_37.projectspec">
					<filter.ref ref.id="filter_676552068501700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_BeagleBoard_xM_CortexA"/>
							<attribute key="device.variant" value="Cortex A.DM3730.BeagleBoard_xM"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_38.projectspec">
					<filter.ref ref.id="filter_676552068501700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_BeagleBoard_xM_CortexA"/>
							<attribute key="device.variant" value="Cortex A.DM3730.BeagleBoard_xM"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_39.projectspec">
					<filter.ref ref.id="filter_676552068501700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_BeagleBoard_xM_CortexA"/>
							<attribute key="device.variant" value="Cortex A.DM3730.BeagleBoard_xM"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_41.projectspec">
					<filter.ref ref.id="filter_676552068501700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_BeagleBoard_xM_CortexA"/>
							<attribute key="device.variant" value="Cortex A.DM3730.BeagleBoard_xM"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_42.projectspec">
					<filter.ref ref.id="filter_676552068501700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_BeagleBoard_xM_CortexA"/>
							<attribute key="device.variant" value="Cortex A.DM3730.BeagleBoard_xM"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_43.projectspec">
					<filter.ref ref.id="filter_676552068501700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_BeagleBoard_xM_CortexA"/>
							<attribute key="device.variant" value="Cortex A.DM3730.BeagleBoard_xM"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_40.projectspec">
					<filter.ref ref.id="filter_676552068501700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_BeagleBoard_xM_CortexA"/>
							<attribute key="device.variant" value="Cortex A.DM3730.BeagleBoard_xM"/>
						</attributes>
					</type>
				</content>
				</contents>
				</contents>
			</contents>
			<contents name="DM3725" desc="DM3725" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_676552068768200">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>DM3725</tag>
					<tag>DaVinci DM37xx</tag>
					</search.tags>
				</filter>
				<contents name="GNU Target Examples" desc="SYS/BIOS Examples for GNU targets." customPageType="genericNote">
				<filter id="filter_676552069248700">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>DM3725</tag>
					<tag>DaVinci DM37xx</tag>
					<tag>GNU Target Examples</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\com_ti_rtsc_sysbios_example_45.projectspec">
					<filter.ref ref.id="filter_676552069248700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_DM3725_CortexA"/>
							<attribute key="device.variant" value="Cortex A.DM3725"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\com_ti_rtsc_sysbios_example_46.projectspec">
					<filter.ref ref.id="filter_676552069248700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_DM3725_CortexA"/>
							<attribute key="device.variant" value="Cortex A.DM3725"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_676552069282700">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>DM3725</tag>
					<tag>DaVinci DM37xx</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_59.projectspec">
					<filter.ref ref.id="filter_676552069282700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_DM3725_CortexA"/>
							<attribute key="device.variant" value="Cortex A.DM3725"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_48.projectspec">
					<filter.ref ref.id="filter_676552069282700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_DM3725_CortexA"/>
							<attribute key="device.variant" value="Cortex A.DM3725"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_49.projectspec">
					<filter.ref ref.id="filter_676552069282700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_DM3725_CortexA"/>
							<attribute key="device.variant" value="Cortex A.DM3725"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_50.projectspec">
					<filter.ref ref.id="filter_676552069282700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_DM3725_CortexA"/>
							<attribute key="device.variant" value="Cortex A.DM3725"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_51.projectspec">
					<filter.ref ref.id="filter_676552069282700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_DM3725_CortexA"/>
							<attribute key="device.variant" value="Cortex A.DM3725"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_52.projectspec">
					<filter.ref ref.id="filter_676552069282700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_DM3725_CortexA"/>
							<attribute key="device.variant" value="Cortex A.DM3725"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_53.projectspec">
					<filter.ref ref.id="filter_676552069282700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_DM3725_CortexA"/>
							<attribute key="device.variant" value="Cortex A.DM3725"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_54.projectspec">
					<filter.ref ref.id="filter_676552069282700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_DM3725_CortexA"/>
							<attribute key="device.variant" value="Cortex A.DM3725"/>
						</attributes>
					</type>
				</content>
				<content name="Semi-Hosting Example" desc="This example leverages Semi-Hosting for printf IO.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_60.projectspec">
					<filter.ref ref.id="filter_676552069282700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="semihost_DM3725_CortexA"/>
							<attribute key="device.variant" value="Cortex A.DM3725"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_56.projectspec">
					<filter.ref ref.id="filter_676552069282700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_DM3725_CortexA"/>
							<attribute key="device.variant" value="Cortex A.DM3725"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_57.projectspec">
					<filter.ref ref.id="filter_676552069282700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_DM3725_CortexA"/>
							<attribute key="device.variant" value="Cortex A.DM3725"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_58.projectspec">
					<filter.ref ref.id="filter_676552069282700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_DM3725_CortexA"/>
							<attribute key="device.variant" value="Cortex A.DM3725"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_55.projectspec">
					<filter.ref ref.id="filter_676552069282700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_DM3725_CortexA"/>
							<attribute key="device.variant" value="Cortex A.DM3725"/>
						</attributes>
					</type>
				</content>
				</contents>
				</contents>
				<contents name="TI Target Examples" desc="SYS/BIOS Examples for TI targets." customPageType="genericNote">
				<filter id="filter_676552069603200">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>DM3725</tag>
					<tag>DaVinci DM37xx</tag>
					<tag>TI Target Examples</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\com_ti_rtsc_sysbios_example_30.projectspec">
					<filter.ref ref.id="filter_676552069603200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_DM3725_CortexA"/>
							<attribute key="device.variant" value="Cortex A.DM3725"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\com_ti_rtsc_sysbios_example_31.projectspec">
					<filter.ref ref.id="filter_676552069603200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_DM3725_CortexA"/>
							<attribute key="device.variant" value="Cortex A.DM3725"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_676552069636700">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>DM3725</tag>
					<tag>DaVinci DM37xx</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_44.projectspec">
					<filter.ref ref.id="filter_676552069636700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_DM3725_CortexA"/>
							<attribute key="device.variant" value="Cortex A.DM3725"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_33.projectspec">
					<filter.ref ref.id="filter_676552069636700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_DM3725_CortexA"/>
							<attribute key="device.variant" value="Cortex A.DM3725"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_34.projectspec">
					<filter.ref ref.id="filter_676552069636700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_DM3725_CortexA"/>
							<attribute key="device.variant" value="Cortex A.DM3725"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_35.projectspec">
					<filter.ref ref.id="filter_676552069636700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_DM3725_CortexA"/>
							<attribute key="device.variant" value="Cortex A.DM3725"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_36.projectspec">
					<filter.ref ref.id="filter_676552069636700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_DM3725_CortexA"/>
							<attribute key="device.variant" value="Cortex A.DM3725"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_37.projectspec">
					<filter.ref ref.id="filter_676552069636700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_DM3725_CortexA"/>
							<attribute key="device.variant" value="Cortex A.DM3725"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_38.projectspec">
					<filter.ref ref.id="filter_676552069636700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_DM3725_CortexA"/>
							<attribute key="device.variant" value="Cortex A.DM3725"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_39.projectspec">
					<filter.ref ref.id="filter_676552069636700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_DM3725_CortexA"/>
							<attribute key="device.variant" value="Cortex A.DM3725"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_41.projectspec">
					<filter.ref ref.id="filter_676552069636700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_DM3725_CortexA"/>
							<attribute key="device.variant" value="Cortex A.DM3725"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_42.projectspec">
					<filter.ref ref.id="filter_676552069636700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_DM3725_CortexA"/>
							<attribute key="device.variant" value="Cortex A.DM3725"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_43.projectspec">
					<filter.ref ref.id="filter_676552069636700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_DM3725_CortexA"/>
							<attribute key="device.variant" value="Cortex A.DM3725"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_40.projectspec">
					<filter.ref ref.id="filter_676552069636700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_DM3725_CortexA"/>
							<attribute key="device.variant" value="Cortex A.DM3725"/>
						</attributes>
					</type>
				</content>
				</contents>
				</contents>
			</contents>
			<contents name="DM3730" desc="DM3730" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_676552069857300">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>DM3730</tag>
					<tag>DaVinci DM37xx</tag>
					</search.tags>
				</filter>
				<contents name="GNU Target Examples" desc="SYS/BIOS Examples for GNU targets." customPageType="genericNote">
				<filter id="filter_676552070308900">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>DM3730</tag>
					<tag>DaVinci DM37xx</tag>
					<tag>GNU Target Examples</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\com_ti_rtsc_sysbios_example_45.projectspec">
					<filter.ref ref.id="filter_676552070308900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_DM3730_CortexA"/>
							<attribute key="device.variant" value="Cortex A.DM3730"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\com_ti_rtsc_sysbios_example_46.projectspec">
					<filter.ref ref.id="filter_676552070308900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_DM3730_CortexA"/>
							<attribute key="device.variant" value="Cortex A.DM3730"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_676552070342800">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>DM3730</tag>
					<tag>DaVinci DM37xx</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_59.projectspec">
					<filter.ref ref.id="filter_676552070342800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_DM3730_CortexA"/>
							<attribute key="device.variant" value="Cortex A.DM3730"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_48.projectspec">
					<filter.ref ref.id="filter_676552070342800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_DM3730_CortexA"/>
							<attribute key="device.variant" value="Cortex A.DM3730"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_49.projectspec">
					<filter.ref ref.id="filter_676552070342800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_DM3730_CortexA"/>
							<attribute key="device.variant" value="Cortex A.DM3730"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_50.projectspec">
					<filter.ref ref.id="filter_676552070342800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_DM3730_CortexA"/>
							<attribute key="device.variant" value="Cortex A.DM3730"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_51.projectspec">
					<filter.ref ref.id="filter_676552070342800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_DM3730_CortexA"/>
							<attribute key="device.variant" value="Cortex A.DM3730"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_52.projectspec">
					<filter.ref ref.id="filter_676552070342800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_DM3730_CortexA"/>
							<attribute key="device.variant" value="Cortex A.DM3730"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_53.projectspec">
					<filter.ref ref.id="filter_676552070342800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_DM3730_CortexA"/>
							<attribute key="device.variant" value="Cortex A.DM3730"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_54.projectspec">
					<filter.ref ref.id="filter_676552070342800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_DM3730_CortexA"/>
							<attribute key="device.variant" value="Cortex A.DM3730"/>
						</attributes>
					</type>
				</content>
				<content name="Semi-Hosting Example" desc="This example leverages Semi-Hosting for printf IO.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_60.projectspec">
					<filter.ref ref.id="filter_676552070342800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="semihost_DM3730_CortexA"/>
							<attribute key="device.variant" value="Cortex A.DM3730"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_56.projectspec">
					<filter.ref ref.id="filter_676552070342800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_DM3730_CortexA"/>
							<attribute key="device.variant" value="Cortex A.DM3730"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_57.projectspec">
					<filter.ref ref.id="filter_676552070342800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_DM3730_CortexA"/>
							<attribute key="device.variant" value="Cortex A.DM3730"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_58.projectspec">
					<filter.ref ref.id="filter_676552070342800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_DM3730_CortexA"/>
							<attribute key="device.variant" value="Cortex A.DM3730"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_55.projectspec">
					<filter.ref ref.id="filter_676552070342800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_DM3730_CortexA"/>
							<attribute key="device.variant" value="Cortex A.DM3730"/>
						</attributes>
					</type>
				</content>
				</contents>
				</contents>
				<contents name="TI Target Examples" desc="SYS/BIOS Examples for TI targets." customPageType="genericNote">
				<filter id="filter_676552070673600">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>DM3730</tag>
					<tag>DaVinci DM37xx</tag>
					<tag>TI Target Examples</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\com_ti_rtsc_sysbios_example_30.projectspec">
					<filter.ref ref.id="filter_676552070673600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_DM3730_CortexA"/>
							<attribute key="device.variant" value="Cortex A.DM3730"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\com_ti_rtsc_sysbios_example_31.projectspec">
					<filter.ref ref.id="filter_676552070673600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_DM3730_CortexA"/>
							<attribute key="device.variant" value="Cortex A.DM3730"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_676552070713800">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>DM3730</tag>
					<tag>DaVinci DM37xx</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_44.projectspec">
					<filter.ref ref.id="filter_676552070713800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_DM3730_CortexA"/>
							<attribute key="device.variant" value="Cortex A.DM3730"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_33.projectspec">
					<filter.ref ref.id="filter_676552070713800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_DM3730_CortexA"/>
							<attribute key="device.variant" value="Cortex A.DM3730"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_34.projectspec">
					<filter.ref ref.id="filter_676552070713800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_DM3730_CortexA"/>
							<attribute key="device.variant" value="Cortex A.DM3730"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_35.projectspec">
					<filter.ref ref.id="filter_676552070713800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_DM3730_CortexA"/>
							<attribute key="device.variant" value="Cortex A.DM3730"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_36.projectspec">
					<filter.ref ref.id="filter_676552070713800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_DM3730_CortexA"/>
							<attribute key="device.variant" value="Cortex A.DM3730"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_37.projectspec">
					<filter.ref ref.id="filter_676552070713800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_DM3730_CortexA"/>
							<attribute key="device.variant" value="Cortex A.DM3730"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_38.projectspec">
					<filter.ref ref.id="filter_676552070713800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_DM3730_CortexA"/>
							<attribute key="device.variant" value="Cortex A.DM3730"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_39.projectspec">
					<filter.ref ref.id="filter_676552070713800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_DM3730_CortexA"/>
							<attribute key="device.variant" value="Cortex A.DM3730"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_41.projectspec">
					<filter.ref ref.id="filter_676552070713800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_DM3730_CortexA"/>
							<attribute key="device.variant" value="Cortex A.DM3730"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_42.projectspec">
					<filter.ref ref.id="filter_676552070713800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_DM3730_CortexA"/>
							<attribute key="device.variant" value="Cortex A.DM3730"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_43.projectspec">
					<filter.ref ref.id="filter_676552070713800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_DM3730_CortexA"/>
							<attribute key="device.variant" value="Cortex A.DM3730"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_40.projectspec">
					<filter.ref ref.id="filter_676552070713800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_DM3730_CortexA"/>
							<attribute key="device.variant" value="Cortex A.DM3730"/>
						</attributes>
					</type>
				</content>
				</contents>
				</contents>
			</contents>
			<contents name="EVMDM3730" desc="EVMDM3730" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_676552070929800">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>EVMDM3730</tag>
					<tag>DaVinci DM37xx</tag>
					</search.tags>
				</filter>
				<contents name="GNU Target Examples" desc="SYS/BIOS Examples for GNU targets." customPageType="genericNote">
				<filter id="filter_676552071409900">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>EVMDM3730</tag>
					<tag>DaVinci DM37xx</tag>
					<tag>GNU Target Examples</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\com_ti_rtsc_sysbios_example_45.projectspec">
					<filter.ref ref.id="filter_676552071409900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_EVMDM3730_CortexA"/>
							<attribute key="device.variant" value="Cortex A.DM3730.EVMDM3730"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\com_ti_rtsc_sysbios_example_46.projectspec">
					<filter.ref ref.id="filter_676552071409900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_EVMDM3730_CortexA"/>
							<attribute key="device.variant" value="Cortex A.DM3730.EVMDM3730"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_676552071443200">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>EVMDM3730</tag>
					<tag>DaVinci DM37xx</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_59.projectspec">
					<filter.ref ref.id="filter_676552071443200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_EVMDM3730_CortexA"/>
							<attribute key="device.variant" value="Cortex A.DM3730.EVMDM3730"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_48.projectspec">
					<filter.ref ref.id="filter_676552071443200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_EVMDM3730_CortexA"/>
							<attribute key="device.variant" value="Cortex A.DM3730.EVMDM3730"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_49.projectspec">
					<filter.ref ref.id="filter_676552071443200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_EVMDM3730_CortexA"/>
							<attribute key="device.variant" value="Cortex A.DM3730.EVMDM3730"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_50.projectspec">
					<filter.ref ref.id="filter_676552071443200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_EVMDM3730_CortexA"/>
							<attribute key="device.variant" value="Cortex A.DM3730.EVMDM3730"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_51.projectspec">
					<filter.ref ref.id="filter_676552071443200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_EVMDM3730_CortexA"/>
							<attribute key="device.variant" value="Cortex A.DM3730.EVMDM3730"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_52.projectspec">
					<filter.ref ref.id="filter_676552071443200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_EVMDM3730_CortexA"/>
							<attribute key="device.variant" value="Cortex A.DM3730.EVMDM3730"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_53.projectspec">
					<filter.ref ref.id="filter_676552071443200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_EVMDM3730_CortexA"/>
							<attribute key="device.variant" value="Cortex A.DM3730.EVMDM3730"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_54.projectspec">
					<filter.ref ref.id="filter_676552071443200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_EVMDM3730_CortexA"/>
							<attribute key="device.variant" value="Cortex A.DM3730.EVMDM3730"/>
						</attributes>
					</type>
				</content>
				<content name="Semi-Hosting Example" desc="This example leverages Semi-Hosting for printf IO.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_60.projectspec">
					<filter.ref ref.id="filter_676552071443200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="semihost_EVMDM3730_CortexA"/>
							<attribute key="device.variant" value="Cortex A.DM3730.EVMDM3730"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_56.projectspec">
					<filter.ref ref.id="filter_676552071443200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_EVMDM3730_CortexA"/>
							<attribute key="device.variant" value="Cortex A.DM3730.EVMDM3730"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_57.projectspec">
					<filter.ref ref.id="filter_676552071443200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_EVMDM3730_CortexA"/>
							<attribute key="device.variant" value="Cortex A.DM3730.EVMDM3730"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_58.projectspec">
					<filter.ref ref.id="filter_676552071443200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_EVMDM3730_CortexA"/>
							<attribute key="device.variant" value="Cortex A.DM3730.EVMDM3730"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_55.projectspec">
					<filter.ref ref.id="filter_676552071443200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_EVMDM3730_CortexA"/>
							<attribute key="device.variant" value="Cortex A.DM3730.EVMDM3730"/>
						</attributes>
					</type>
				</content>
				</contents>
				</contents>
				<contents name="TI Target Examples" desc="SYS/BIOS Examples for TI targets." customPageType="genericNote">
				<filter id="filter_676552071782100">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>EVMDM3730</tag>
					<tag>DaVinci DM37xx</tag>
					<tag>TI Target Examples</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\com_ti_rtsc_sysbios_example_30.projectspec">
					<filter.ref ref.id="filter_676552071782100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_EVMDM3730_CortexA"/>
							<attribute key="device.variant" value="Cortex A.DM3730.EVMDM3730"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\com_ti_rtsc_sysbios_example_31.projectspec">
					<filter.ref ref.id="filter_676552071782100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_EVMDM3730_CortexA"/>
							<attribute key="device.variant" value="Cortex A.DM3730.EVMDM3730"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_676552071816300">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>EVMDM3730</tag>
					<tag>DaVinci DM37xx</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_44.projectspec">
					<filter.ref ref.id="filter_676552071816300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_EVMDM3730_CortexA"/>
							<attribute key="device.variant" value="Cortex A.DM3730.EVMDM3730"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_33.projectspec">
					<filter.ref ref.id="filter_676552071816300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_EVMDM3730_CortexA"/>
							<attribute key="device.variant" value="Cortex A.DM3730.EVMDM3730"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_34.projectspec">
					<filter.ref ref.id="filter_676552071816300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_EVMDM3730_CortexA"/>
							<attribute key="device.variant" value="Cortex A.DM3730.EVMDM3730"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_35.projectspec">
					<filter.ref ref.id="filter_676552071816300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_EVMDM3730_CortexA"/>
							<attribute key="device.variant" value="Cortex A.DM3730.EVMDM3730"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_36.projectspec">
					<filter.ref ref.id="filter_676552071816300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_EVMDM3730_CortexA"/>
							<attribute key="device.variant" value="Cortex A.DM3730.EVMDM3730"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_37.projectspec">
					<filter.ref ref.id="filter_676552071816300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_EVMDM3730_CortexA"/>
							<attribute key="device.variant" value="Cortex A.DM3730.EVMDM3730"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_38.projectspec">
					<filter.ref ref.id="filter_676552071816300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_EVMDM3730_CortexA"/>
							<attribute key="device.variant" value="Cortex A.DM3730.EVMDM3730"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_39.projectspec">
					<filter.ref ref.id="filter_676552071816300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_EVMDM3730_CortexA"/>
							<attribute key="device.variant" value="Cortex A.DM3730.EVMDM3730"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_41.projectspec">
					<filter.ref ref.id="filter_676552071816300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_EVMDM3730_CortexA"/>
							<attribute key="device.variant" value="Cortex A.DM3730.EVMDM3730"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_42.projectspec">
					<filter.ref ref.id="filter_676552071816300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_EVMDM3730_CortexA"/>
							<attribute key="device.variant" value="Cortex A.DM3730.EVMDM3730"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_43.projectspec">
					<filter.ref ref.id="filter_676552071816300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_EVMDM3730_CortexA"/>
							<attribute key="device.variant" value="Cortex A.DM3730.EVMDM3730"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_40.projectspec">
					<filter.ref ref.id="filter_676552071816300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_EVMDM3730_CortexA"/>
							<attribute key="device.variant" value="Cortex A.DM3730.EVMDM3730"/>
						</attributes>
					</type>
				</content>
				</contents>
				</contents>
			</contents>
		</contents>
		<contents name="DaVinci DM3xx ARM9-only device" desc="DaVinci DM3xx ARM9-only device" icon="plugin://icons/obj16/devices.png">
			<contents name="EVMDM355" desc="EVMDM355" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_676552074096500">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>EVMDM355</tag>
					<tag>DaVinci DM3xx ARM9-only device</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_15.projectspec">
					<filter.ref ref.id="filter_676552074096500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_EVMDM355"/>
							<attribute key="device.variant" value="ARM9.TMS320DM355.EVMDM355"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_16.projectspec">
					<filter.ref ref.id="filter_676552074096500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_EVMDM355"/>
							<attribute key="device.variant" value="ARM9.TMS320DM355.EVMDM355"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_676552074191100">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>EVMDM355</tag>
					<tag>DaVinci DM3xx ARM9-only device</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_29.projectspec">
					<filter.ref ref.id="filter_676552074191100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_EVMDM355"/>
							<attribute key="device.variant" value="ARM9.TMS320DM355.EVMDM355"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_18.projectspec">
					<filter.ref ref.id="filter_676552074191100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_EVMDM355"/>
							<attribute key="device.variant" value="ARM9.TMS320DM355.EVMDM355"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_19.projectspec">
					<filter.ref ref.id="filter_676552074191100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_EVMDM355"/>
							<attribute key="device.variant" value="ARM9.TMS320DM355.EVMDM355"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_20.projectspec">
					<filter.ref ref.id="filter_676552074191100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_EVMDM355"/>
							<attribute key="device.variant" value="ARM9.TMS320DM355.EVMDM355"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_21.projectspec">
					<filter.ref ref.id="filter_676552074191100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_EVMDM355"/>
							<attribute key="device.variant" value="ARM9.TMS320DM355.EVMDM355"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_22.projectspec">
					<filter.ref ref.id="filter_676552074191100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_EVMDM355"/>
							<attribute key="device.variant" value="ARM9.TMS320DM355.EVMDM355"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_23.projectspec">
					<filter.ref ref.id="filter_676552074191100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_EVMDM355"/>
							<attribute key="device.variant" value="ARM9.TMS320DM355.EVMDM355"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_24.projectspec">
					<filter.ref ref.id="filter_676552074191100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_EVMDM355"/>
							<attribute key="device.variant" value="ARM9.TMS320DM355.EVMDM355"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_26.projectspec">
					<filter.ref ref.id="filter_676552074191100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_EVMDM355"/>
							<attribute key="device.variant" value="ARM9.TMS320DM355.EVMDM355"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_27.projectspec">
					<filter.ref ref.id="filter_676552074191100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_EVMDM355"/>
							<attribute key="device.variant" value="ARM9.TMS320DM355.EVMDM355"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_28.projectspec">
					<filter.ref ref.id="filter_676552074191100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_EVMDM355"/>
							<attribute key="device.variant" value="ARM9.TMS320DM355.EVMDM355"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_25.projectspec">
					<filter.ref ref.id="filter_676552074191100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_EVMDM355"/>
							<attribute key="device.variant" value="ARM9.TMS320DM355.EVMDM355"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="EVMDM365" desc="EVMDM365" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_676552075839300">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>EVMDM365</tag>
					<tag>DaVinci DM3xx ARM9-only device</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_15.projectspec">
					<filter.ref ref.id="filter_676552075839300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_EVMDM365"/>
							<attribute key="device.variant" value="ARM9.TMS320DM365.EVMDM365"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_16.projectspec">
					<filter.ref ref.id="filter_676552075839300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_EVMDM365"/>
							<attribute key="device.variant" value="ARM9.TMS320DM365.EVMDM365"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_676552075937500">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>EVMDM365</tag>
					<tag>DaVinci DM3xx ARM9-only device</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_29.projectspec">
					<filter.ref ref.id="filter_676552075937500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_EVMDM365"/>
							<attribute key="device.variant" value="ARM9.TMS320DM365.EVMDM365"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_18.projectspec">
					<filter.ref ref.id="filter_676552075937500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_EVMDM365"/>
							<attribute key="device.variant" value="ARM9.TMS320DM365.EVMDM365"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_19.projectspec">
					<filter.ref ref.id="filter_676552075937500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_EVMDM365"/>
							<attribute key="device.variant" value="ARM9.TMS320DM365.EVMDM365"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_20.projectspec">
					<filter.ref ref.id="filter_676552075937500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_EVMDM365"/>
							<attribute key="device.variant" value="ARM9.TMS320DM365.EVMDM365"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_21.projectspec">
					<filter.ref ref.id="filter_676552075937500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_EVMDM365"/>
							<attribute key="device.variant" value="ARM9.TMS320DM365.EVMDM365"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_22.projectspec">
					<filter.ref ref.id="filter_676552075937500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_EVMDM365"/>
							<attribute key="device.variant" value="ARM9.TMS320DM365.EVMDM365"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_23.projectspec">
					<filter.ref ref.id="filter_676552075937500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_EVMDM365"/>
							<attribute key="device.variant" value="ARM9.TMS320DM365.EVMDM365"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_24.projectspec">
					<filter.ref ref.id="filter_676552075937500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_EVMDM365"/>
							<attribute key="device.variant" value="ARM9.TMS320DM365.EVMDM365"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_26.projectspec">
					<filter.ref ref.id="filter_676552075937500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_EVMDM365"/>
							<attribute key="device.variant" value="ARM9.TMS320DM365.EVMDM365"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_27.projectspec">
					<filter.ref ref.id="filter_676552075937500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_EVMDM365"/>
							<attribute key="device.variant" value="ARM9.TMS320DM365.EVMDM365"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_28.projectspec">
					<filter.ref ref.id="filter_676552075937500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_EVMDM365"/>
							<attribute key="device.variant" value="ARM9.TMS320DM365.EVMDM365"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_25.projectspec">
					<filter.ref ref.id="filter_676552075937500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_EVMDM365"/>
							<attribute key="device.variant" value="ARM9.TMS320DM365.EVMDM365"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="TMS320DM355" desc="TMS320DM355" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_676552078168000">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>TMS320DM355</tag>
					<tag>DaVinci DM3xx ARM9-only device</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_15.projectspec">
					<filter.ref ref.id="filter_676552078168000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_TMS320DM355"/>
							<attribute key="device.variant" value="ARM9.TMS320DM355"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_16.projectspec">
					<filter.ref ref.id="filter_676552078168000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_TMS320DM355"/>
							<attribute key="device.variant" value="ARM9.TMS320DM355"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_676552078259000">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>TMS320DM355</tag>
					<tag>DaVinci DM3xx ARM9-only device</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_29.projectspec">
					<filter.ref ref.id="filter_676552078259000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_TMS320DM355"/>
							<attribute key="device.variant" value="ARM9.TMS320DM355"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_18.projectspec">
					<filter.ref ref.id="filter_676552078259000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_TMS320DM355"/>
							<attribute key="device.variant" value="ARM9.TMS320DM355"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_19.projectspec">
					<filter.ref ref.id="filter_676552078259000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_TMS320DM355"/>
							<attribute key="device.variant" value="ARM9.TMS320DM355"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_20.projectspec">
					<filter.ref ref.id="filter_676552078259000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_TMS320DM355"/>
							<attribute key="device.variant" value="ARM9.TMS320DM355"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_21.projectspec">
					<filter.ref ref.id="filter_676552078259000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_TMS320DM355"/>
							<attribute key="device.variant" value="ARM9.TMS320DM355"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_22.projectspec">
					<filter.ref ref.id="filter_676552078259000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_TMS320DM355"/>
							<attribute key="device.variant" value="ARM9.TMS320DM355"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_23.projectspec">
					<filter.ref ref.id="filter_676552078259000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_TMS320DM355"/>
							<attribute key="device.variant" value="ARM9.TMS320DM355"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_24.projectspec">
					<filter.ref ref.id="filter_676552078259000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_TMS320DM355"/>
							<attribute key="device.variant" value="ARM9.TMS320DM355"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_26.projectspec">
					<filter.ref ref.id="filter_676552078259000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_TMS320DM355"/>
							<attribute key="device.variant" value="ARM9.TMS320DM355"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_27.projectspec">
					<filter.ref ref.id="filter_676552078259000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_TMS320DM355"/>
							<attribute key="device.variant" value="ARM9.TMS320DM355"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_28.projectspec">
					<filter.ref ref.id="filter_676552078259000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_TMS320DM355"/>
							<attribute key="device.variant" value="ARM9.TMS320DM355"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_25.projectspec">
					<filter.ref ref.id="filter_676552078259000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_TMS320DM355"/>
							<attribute key="device.variant" value="ARM9.TMS320DM355"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="TMS320DM365" desc="TMS320DM365" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_676552081094200">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>TMS320DM365</tag>
					<tag>DaVinci DM3xx ARM9-only device</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_15.projectspec">
					<filter.ref ref.id="filter_676552081094200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_TMS320DM365"/>
							<attribute key="device.variant" value="ARM9.TMS320DM365"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_16.projectspec">
					<filter.ref ref.id="filter_676552081094200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_TMS320DM365"/>
							<attribute key="device.variant" value="ARM9.TMS320DM365"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_676552081189700">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>TMS320DM365</tag>
					<tag>DaVinci DM3xx ARM9-only device</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_29.projectspec">
					<filter.ref ref.id="filter_676552081189700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_TMS320DM365"/>
							<attribute key="device.variant" value="ARM9.TMS320DM365"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_18.projectspec">
					<filter.ref ref.id="filter_676552081189700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_TMS320DM365"/>
							<attribute key="device.variant" value="ARM9.TMS320DM365"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_19.projectspec">
					<filter.ref ref.id="filter_676552081189700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_TMS320DM365"/>
							<attribute key="device.variant" value="ARM9.TMS320DM365"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_20.projectspec">
					<filter.ref ref.id="filter_676552081189700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_TMS320DM365"/>
							<attribute key="device.variant" value="ARM9.TMS320DM365"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_21.projectspec">
					<filter.ref ref.id="filter_676552081189700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_TMS320DM365"/>
							<attribute key="device.variant" value="ARM9.TMS320DM365"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_22.projectspec">
					<filter.ref ref.id="filter_676552081189700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_TMS320DM365"/>
							<attribute key="device.variant" value="ARM9.TMS320DM365"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_23.projectspec">
					<filter.ref ref.id="filter_676552081189700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_TMS320DM365"/>
							<attribute key="device.variant" value="ARM9.TMS320DM365"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_24.projectspec">
					<filter.ref ref.id="filter_676552081189700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_TMS320DM365"/>
							<attribute key="device.variant" value="ARM9.TMS320DM365"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_26.projectspec">
					<filter.ref ref.id="filter_676552081189700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_TMS320DM365"/>
							<attribute key="device.variant" value="ARM9.TMS320DM365"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_27.projectspec">
					<filter.ref ref.id="filter_676552081189700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_TMS320DM365"/>
							<attribute key="device.variant" value="ARM9.TMS320DM365"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_28.projectspec">
					<filter.ref ref.id="filter_676552081189700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_TMS320DM365"/>
							<attribute key="device.variant" value="ARM9.TMS320DM365"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_25.projectspec">
					<filter.ref ref.id="filter_676552081189700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_TMS320DM365"/>
							<attribute key="device.variant" value="ARM9.TMS320DM365"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
		</contents>
		<contents name="DaVinci DM644x" desc="DaVinci DM644x" icon="plugin://icons/obj16/devices.png">
			<contents name="EVMDM6446" desc="EVMDM6446" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_676552082738800">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>EVMDM6446</tag>
					<tag>DaVinci DM644x</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_15.projectspec">
					<filter.ref ref.id="filter_676552082738800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_EVMDM6446_ARM9"/>
							<attribute key="device.variant" value="ARM9.TMS320DM6446.EVMDM6446"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_16.projectspec">
					<filter.ref ref.id="filter_676552082738800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_EVMDM6446_ARM9"/>
							<attribute key="device.variant" value="ARM9.TMS320DM6446.EVMDM6446"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_676552082845400">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>EVMDM6446</tag>
					<tag>DaVinci DM644x</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_29.projectspec">
					<filter.ref ref.id="filter_676552082845400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_EVMDM6446_ARM9"/>
							<attribute key="device.variant" value="ARM9.TMS320DM6446.EVMDM6446"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_18.projectspec">
					<filter.ref ref.id="filter_676552082845400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_EVMDM6446_ARM9"/>
							<attribute key="device.variant" value="ARM9.TMS320DM6446.EVMDM6446"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_19.projectspec">
					<filter.ref ref.id="filter_676552082845400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_EVMDM6446_ARM9"/>
							<attribute key="device.variant" value="ARM9.TMS320DM6446.EVMDM6446"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_20.projectspec">
					<filter.ref ref.id="filter_676552082845400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_EVMDM6446_ARM9"/>
							<attribute key="device.variant" value="ARM9.TMS320DM6446.EVMDM6446"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_21.projectspec">
					<filter.ref ref.id="filter_676552082845400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_EVMDM6446_ARM9"/>
							<attribute key="device.variant" value="ARM9.TMS320DM6446.EVMDM6446"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_22.projectspec">
					<filter.ref ref.id="filter_676552082845400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_EVMDM6446_ARM9"/>
							<attribute key="device.variant" value="ARM9.TMS320DM6446.EVMDM6446"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_23.projectspec">
					<filter.ref ref.id="filter_676552082845400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_EVMDM6446_ARM9"/>
							<attribute key="device.variant" value="ARM9.TMS320DM6446.EVMDM6446"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_24.projectspec">
					<filter.ref ref.id="filter_676552082845400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_EVMDM6446_ARM9"/>
							<attribute key="device.variant" value="ARM9.TMS320DM6446.EVMDM6446"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_26.projectspec">
					<filter.ref ref.id="filter_676552082845400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_EVMDM6446_ARM9"/>
							<attribute key="device.variant" value="ARM9.TMS320DM6446.EVMDM6446"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_27.projectspec">
					<filter.ref ref.id="filter_676552082845400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_EVMDM6446_ARM9"/>
							<attribute key="device.variant" value="ARM9.TMS320DM6446.EVMDM6446"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_28.projectspec">
					<filter.ref ref.id="filter_676552082845400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_EVMDM6446_ARM9"/>
							<attribute key="device.variant" value="ARM9.TMS320DM6446.EVMDM6446"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_25.projectspec">
					<filter.ref ref.id="filter_676552082845400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_EVMDM6446_ARM9"/>
							<attribute key="device.variant" value="ARM9.TMS320DM6446.EVMDM6446"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="TMS320DM6441" desc="TMS320DM6441" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_676552083729200">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>TMS320DM6441</tag>
					<tag>DaVinci DM644x</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_15.projectspec">
					<filter.ref ref.id="filter_676552083729200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_TMS320DM6441_ARM9"/>
							<attribute key="device.variant" value="ARM9.TMS320DM6441"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_16.projectspec">
					<filter.ref ref.id="filter_676552083729200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_TMS320DM6441_ARM9"/>
							<attribute key="device.variant" value="ARM9.TMS320DM6441"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_676552083824700">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>TMS320DM6441</tag>
					<tag>DaVinci DM644x</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_29.projectspec">
					<filter.ref ref.id="filter_676552083824700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_TMS320DM6441_ARM9"/>
							<attribute key="device.variant" value="ARM9.TMS320DM6441"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_18.projectspec">
					<filter.ref ref.id="filter_676552083824700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_TMS320DM6441_ARM9"/>
							<attribute key="device.variant" value="ARM9.TMS320DM6441"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_19.projectspec">
					<filter.ref ref.id="filter_676552083824700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_TMS320DM6441_ARM9"/>
							<attribute key="device.variant" value="ARM9.TMS320DM6441"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_20.projectspec">
					<filter.ref ref.id="filter_676552083824700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_TMS320DM6441_ARM9"/>
							<attribute key="device.variant" value="ARM9.TMS320DM6441"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_21.projectspec">
					<filter.ref ref.id="filter_676552083824700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_TMS320DM6441_ARM9"/>
							<attribute key="device.variant" value="ARM9.TMS320DM6441"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_22.projectspec">
					<filter.ref ref.id="filter_676552083824700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_TMS320DM6441_ARM9"/>
							<attribute key="device.variant" value="ARM9.TMS320DM6441"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_23.projectspec">
					<filter.ref ref.id="filter_676552083824700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_TMS320DM6441_ARM9"/>
							<attribute key="device.variant" value="ARM9.TMS320DM6441"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_24.projectspec">
					<filter.ref ref.id="filter_676552083824700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_TMS320DM6441_ARM9"/>
							<attribute key="device.variant" value="ARM9.TMS320DM6441"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_26.projectspec">
					<filter.ref ref.id="filter_676552083824700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_TMS320DM6441_ARM9"/>
							<attribute key="device.variant" value="ARM9.TMS320DM6441"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_27.projectspec">
					<filter.ref ref.id="filter_676552083824700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_TMS320DM6441_ARM9"/>
							<attribute key="device.variant" value="ARM9.TMS320DM6441"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_28.projectspec">
					<filter.ref ref.id="filter_676552083824700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_TMS320DM6441_ARM9"/>
							<attribute key="device.variant" value="ARM9.TMS320DM6441"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_25.projectspec">
					<filter.ref ref.id="filter_676552083824700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_TMS320DM6441_ARM9"/>
							<attribute key="device.variant" value="ARM9.TMS320DM6441"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="TMS320DM6443" desc="TMS320DM6443" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_676552084589100">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>TMS320DM6443</tag>
					<tag>DaVinci DM644x</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_15.projectspec">
					<filter.ref ref.id="filter_676552084589100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_TMS320DM6443_ARM9"/>
							<attribute key="device.variant" value="ARM9.TMS320DM6443"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_16.projectspec">
					<filter.ref ref.id="filter_676552084589100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_TMS320DM6443_ARM9"/>
							<attribute key="device.variant" value="ARM9.TMS320DM6443"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_676552084681700">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>TMS320DM6443</tag>
					<tag>DaVinci DM644x</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_29.projectspec">
					<filter.ref ref.id="filter_676552084681700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_TMS320DM6443_ARM9"/>
							<attribute key="device.variant" value="ARM9.TMS320DM6443"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_18.projectspec">
					<filter.ref ref.id="filter_676552084681700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_TMS320DM6443_ARM9"/>
							<attribute key="device.variant" value="ARM9.TMS320DM6443"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_19.projectspec">
					<filter.ref ref.id="filter_676552084681700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_TMS320DM6443_ARM9"/>
							<attribute key="device.variant" value="ARM9.TMS320DM6443"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_20.projectspec">
					<filter.ref ref.id="filter_676552084681700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_TMS320DM6443_ARM9"/>
							<attribute key="device.variant" value="ARM9.TMS320DM6443"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_21.projectspec">
					<filter.ref ref.id="filter_676552084681700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_TMS320DM6443_ARM9"/>
							<attribute key="device.variant" value="ARM9.TMS320DM6443"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_22.projectspec">
					<filter.ref ref.id="filter_676552084681700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_TMS320DM6443_ARM9"/>
							<attribute key="device.variant" value="ARM9.TMS320DM6443"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_23.projectspec">
					<filter.ref ref.id="filter_676552084681700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_TMS320DM6443_ARM9"/>
							<attribute key="device.variant" value="ARM9.TMS320DM6443"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_24.projectspec">
					<filter.ref ref.id="filter_676552084681700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_TMS320DM6443_ARM9"/>
							<attribute key="device.variant" value="ARM9.TMS320DM6443"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_26.projectspec">
					<filter.ref ref.id="filter_676552084681700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_TMS320DM6443_ARM9"/>
							<attribute key="device.variant" value="ARM9.TMS320DM6443"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_27.projectspec">
					<filter.ref ref.id="filter_676552084681700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_TMS320DM6443_ARM9"/>
							<attribute key="device.variant" value="ARM9.TMS320DM6443"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_28.projectspec">
					<filter.ref ref.id="filter_676552084681700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_TMS320DM6443_ARM9"/>
							<attribute key="device.variant" value="ARM9.TMS320DM6443"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_25.projectspec">
					<filter.ref ref.id="filter_676552084681700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_TMS320DM6443_ARM9"/>
							<attribute key="device.variant" value="ARM9.TMS320DM6443"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="TMS320DM6446" desc="TMS320DM6446" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_676552085431600">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>TMS320DM6446</tag>
					<tag>DaVinci DM644x</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_15.projectspec">
					<filter.ref ref.id="filter_676552085431600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_TMS320DM6446_ARM9"/>
							<attribute key="device.variant" value="ARM9.TMS320DM6446"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_16.projectspec">
					<filter.ref ref.id="filter_676552085431600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_TMS320DM6446_ARM9"/>
							<attribute key="device.variant" value="ARM9.TMS320DM6446"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_676552085521900">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>TMS320DM6446</tag>
					<tag>DaVinci DM644x</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_29.projectspec">
					<filter.ref ref.id="filter_676552085521900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_TMS320DM6446_ARM9"/>
							<attribute key="device.variant" value="ARM9.TMS320DM6446"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_18.projectspec">
					<filter.ref ref.id="filter_676552085521900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_TMS320DM6446_ARM9"/>
							<attribute key="device.variant" value="ARM9.TMS320DM6446"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_19.projectspec">
					<filter.ref ref.id="filter_676552085521900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_TMS320DM6446_ARM9"/>
							<attribute key="device.variant" value="ARM9.TMS320DM6446"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_20.projectspec">
					<filter.ref ref.id="filter_676552085521900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_TMS320DM6446_ARM9"/>
							<attribute key="device.variant" value="ARM9.TMS320DM6446"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_21.projectspec">
					<filter.ref ref.id="filter_676552085521900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_TMS320DM6446_ARM9"/>
							<attribute key="device.variant" value="ARM9.TMS320DM6446"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_22.projectspec">
					<filter.ref ref.id="filter_676552085521900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_TMS320DM6446_ARM9"/>
							<attribute key="device.variant" value="ARM9.TMS320DM6446"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_23.projectspec">
					<filter.ref ref.id="filter_676552085521900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_TMS320DM6446_ARM9"/>
							<attribute key="device.variant" value="ARM9.TMS320DM6446"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_24.projectspec">
					<filter.ref ref.id="filter_676552085521900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_TMS320DM6446_ARM9"/>
							<attribute key="device.variant" value="ARM9.TMS320DM6446"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_26.projectspec">
					<filter.ref ref.id="filter_676552085521900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_TMS320DM6446_ARM9"/>
							<attribute key="device.variant" value="ARM9.TMS320DM6446"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_27.projectspec">
					<filter.ref ref.id="filter_676552085521900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_TMS320DM6446_ARM9"/>
							<attribute key="device.variant" value="ARM9.TMS320DM6446"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_28.projectspec">
					<filter.ref ref.id="filter_676552085521900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_TMS320DM6446_ARM9"/>
							<attribute key="device.variant" value="ARM9.TMS320DM6446"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_25.projectspec">
					<filter.ref ref.id="filter_676552085521900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_TMS320DM6446_ARM9"/>
							<attribute key="device.variant" value="ARM9.TMS320DM6446"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
		</contents>
		<contents name="DaVinci DM646x" desc="DaVinci DM646x" icon="plugin://icons/obj16/devices.png">
			<contents name="EVMDM6467" desc="EVMDM6467" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_676552087371300">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>EVMDM6467</tag>
					<tag>DaVinci DM646x</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_15.projectspec">
					<filter.ref ref.id="filter_676552087371300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_EVMDM6467_ARM9"/>
							<attribute key="device.variant" value="ARM9.TMS320DM6467.EVMDM6467"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_16.projectspec">
					<filter.ref ref.id="filter_676552087371300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_EVMDM6467_ARM9"/>
							<attribute key="device.variant" value="ARM9.TMS320DM6467.EVMDM6467"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_676552087477300">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>EVMDM6467</tag>
					<tag>DaVinci DM646x</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_29.projectspec">
					<filter.ref ref.id="filter_676552087477300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_EVMDM6467_ARM9"/>
							<attribute key="device.variant" value="ARM9.TMS320DM6467.EVMDM6467"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_18.projectspec">
					<filter.ref ref.id="filter_676552087477300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_EVMDM6467_ARM9"/>
							<attribute key="device.variant" value="ARM9.TMS320DM6467.EVMDM6467"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_19.projectspec">
					<filter.ref ref.id="filter_676552087477300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_EVMDM6467_ARM9"/>
							<attribute key="device.variant" value="ARM9.TMS320DM6467.EVMDM6467"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_20.projectspec">
					<filter.ref ref.id="filter_676552087477300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_EVMDM6467_ARM9"/>
							<attribute key="device.variant" value="ARM9.TMS320DM6467.EVMDM6467"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_21.projectspec">
					<filter.ref ref.id="filter_676552087477300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_EVMDM6467_ARM9"/>
							<attribute key="device.variant" value="ARM9.TMS320DM6467.EVMDM6467"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_22.projectspec">
					<filter.ref ref.id="filter_676552087477300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_EVMDM6467_ARM9"/>
							<attribute key="device.variant" value="ARM9.TMS320DM6467.EVMDM6467"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_23.projectspec">
					<filter.ref ref.id="filter_676552087477300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_EVMDM6467_ARM9"/>
							<attribute key="device.variant" value="ARM9.TMS320DM6467.EVMDM6467"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_24.projectspec">
					<filter.ref ref.id="filter_676552087477300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_EVMDM6467_ARM9"/>
							<attribute key="device.variant" value="ARM9.TMS320DM6467.EVMDM6467"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_26.projectspec">
					<filter.ref ref.id="filter_676552087477300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_EVMDM6467_ARM9"/>
							<attribute key="device.variant" value="ARM9.TMS320DM6467.EVMDM6467"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_27.projectspec">
					<filter.ref ref.id="filter_676552087477300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_EVMDM6467_ARM9"/>
							<attribute key="device.variant" value="ARM9.TMS320DM6467.EVMDM6467"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_28.projectspec">
					<filter.ref ref.id="filter_676552087477300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_EVMDM6467_ARM9"/>
							<attribute key="device.variant" value="ARM9.TMS320DM6467.EVMDM6467"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_25.projectspec">
					<filter.ref ref.id="filter_676552087477300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_EVMDM6467_ARM9"/>
							<attribute key="device.variant" value="ARM9.TMS320DM6467.EVMDM6467"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="EVMDM6467T" desc="EVMDM6467T" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_676552088306800">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>EVMDM6467T</tag>
					<tag>DaVinci DM646x</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_15.projectspec">
					<filter.ref ref.id="filter_676552088306800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_EVMDM6467T_ARM9"/>
							<attribute key="device.variant" value="ARM9.TMS320DM6467.EVMDM6467T"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_16.projectspec">
					<filter.ref ref.id="filter_676552088306800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_EVMDM6467T_ARM9"/>
							<attribute key="device.variant" value="ARM9.TMS320DM6467.EVMDM6467T"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_676552088404500">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>EVMDM6467T</tag>
					<tag>DaVinci DM646x</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_29.projectspec">
					<filter.ref ref.id="filter_676552088404500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_EVMDM6467T_ARM9"/>
							<attribute key="device.variant" value="ARM9.TMS320DM6467.EVMDM6467T"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_18.projectspec">
					<filter.ref ref.id="filter_676552088404500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_EVMDM6467T_ARM9"/>
							<attribute key="device.variant" value="ARM9.TMS320DM6467.EVMDM6467T"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_19.projectspec">
					<filter.ref ref.id="filter_676552088404500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_EVMDM6467T_ARM9"/>
							<attribute key="device.variant" value="ARM9.TMS320DM6467.EVMDM6467T"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_20.projectspec">
					<filter.ref ref.id="filter_676552088404500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_EVMDM6467T_ARM9"/>
							<attribute key="device.variant" value="ARM9.TMS320DM6467.EVMDM6467T"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_21.projectspec">
					<filter.ref ref.id="filter_676552088404500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_EVMDM6467T_ARM9"/>
							<attribute key="device.variant" value="ARM9.TMS320DM6467.EVMDM6467T"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_22.projectspec">
					<filter.ref ref.id="filter_676552088404500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_EVMDM6467T_ARM9"/>
							<attribute key="device.variant" value="ARM9.TMS320DM6467.EVMDM6467T"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_23.projectspec">
					<filter.ref ref.id="filter_676552088404500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_EVMDM6467T_ARM9"/>
							<attribute key="device.variant" value="ARM9.TMS320DM6467.EVMDM6467T"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_24.projectspec">
					<filter.ref ref.id="filter_676552088404500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_EVMDM6467T_ARM9"/>
							<attribute key="device.variant" value="ARM9.TMS320DM6467.EVMDM6467T"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_26.projectspec">
					<filter.ref ref.id="filter_676552088404500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_EVMDM6467T_ARM9"/>
							<attribute key="device.variant" value="ARM9.TMS320DM6467.EVMDM6467T"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_27.projectspec">
					<filter.ref ref.id="filter_676552088404500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_EVMDM6467T_ARM9"/>
							<attribute key="device.variant" value="ARM9.TMS320DM6467.EVMDM6467T"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_28.projectspec">
					<filter.ref ref.id="filter_676552088404500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_EVMDM6467T_ARM9"/>
							<attribute key="device.variant" value="ARM9.TMS320DM6467.EVMDM6467T"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_25.projectspec">
					<filter.ref ref.id="filter_676552088404500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_EVMDM6467T_ARM9"/>
							<attribute key="device.variant" value="ARM9.TMS320DM6467.EVMDM6467T"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="TMS320DM6467" desc="TMS320DM6467" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_676552089252200">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>TMS320DM6467</tag>
					<tag>DaVinci DM646x</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_15.projectspec">
					<filter.ref ref.id="filter_676552089252200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_TMS320DM6467_ARM9"/>
							<attribute key="device.variant" value="ARM9.TMS320DM6467"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_16.projectspec">
					<filter.ref ref.id="filter_676552089252200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_TMS320DM6467_ARM9"/>
							<attribute key="device.variant" value="ARM9.TMS320DM6467"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_676552089344400">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>TMS320DM6467</tag>
					<tag>DaVinci DM646x</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_29.projectspec">
					<filter.ref ref.id="filter_676552089344400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_TMS320DM6467_ARM9"/>
							<attribute key="device.variant" value="ARM9.TMS320DM6467"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_18.projectspec">
					<filter.ref ref.id="filter_676552089344400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_TMS320DM6467_ARM9"/>
							<attribute key="device.variant" value="ARM9.TMS320DM6467"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_19.projectspec">
					<filter.ref ref.id="filter_676552089344400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_TMS320DM6467_ARM9"/>
							<attribute key="device.variant" value="ARM9.TMS320DM6467"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_20.projectspec">
					<filter.ref ref.id="filter_676552089344400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_TMS320DM6467_ARM9"/>
							<attribute key="device.variant" value="ARM9.TMS320DM6467"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_21.projectspec">
					<filter.ref ref.id="filter_676552089344400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_TMS320DM6467_ARM9"/>
							<attribute key="device.variant" value="ARM9.TMS320DM6467"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_22.projectspec">
					<filter.ref ref.id="filter_676552089344400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_TMS320DM6467_ARM9"/>
							<attribute key="device.variant" value="ARM9.TMS320DM6467"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_23.projectspec">
					<filter.ref ref.id="filter_676552089344400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_TMS320DM6467_ARM9"/>
							<attribute key="device.variant" value="ARM9.TMS320DM6467"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_24.projectspec">
					<filter.ref ref.id="filter_676552089344400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_TMS320DM6467_ARM9"/>
							<attribute key="device.variant" value="ARM9.TMS320DM6467"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_26.projectspec">
					<filter.ref ref.id="filter_676552089344400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_TMS320DM6467_ARM9"/>
							<attribute key="device.variant" value="ARM9.TMS320DM6467"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_27.projectspec">
					<filter.ref ref.id="filter_676552089344400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_TMS320DM6467_ARM9"/>
							<attribute key="device.variant" value="ARM9.TMS320DM6467"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_28.projectspec">
					<filter.ref ref.id="filter_676552089344400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_TMS320DM6467_ARM9"/>
							<attribute key="device.variant" value="ARM9.TMS320DM6467"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_25.projectspec">
					<filter.ref ref.id="filter_676552089344400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_TMS320DM6467_ARM9"/>
							<attribute key="device.variant" value="ARM9.TMS320DM6467"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
		</contents>
		<contents name="DaVinci DM81xx" desc="DaVinci DM81xx" icon="plugin://icons/obj16/devices.png">
			<contents name="DM8146" desc="DM8146" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_676552090155100">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>DM8146</tag>
					<tag>DaVinci DM81xx</tag>
					</search.tags>
				</filter>
				<contents name="GNU Target Examples" desc="SYS/BIOS Examples for GNU targets." customPageType="genericNote">
				<filter id="filter_676552090631100">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>DM8146</tag>
					<tag>DaVinci DM81xx</tag>
					<tag>GNU Target Examples</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\com_ti_rtsc_sysbios_example_45.projectspec">
					<filter.ref ref.id="filter_676552090631100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_DM8146_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8146"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\com_ti_rtsc_sysbios_example_46.projectspec">
					<filter.ref ref.id="filter_676552090631100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_DM8146_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8146"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_676552090664800">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>DM8146</tag>
					<tag>DaVinci DM81xx</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_59.projectspec">
					<filter.ref ref.id="filter_676552090664800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_DM8146_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8146"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_48.projectspec">
					<filter.ref ref.id="filter_676552090664800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_DM8146_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8146"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_49.projectspec">
					<filter.ref ref.id="filter_676552090664800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_DM8146_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8146"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_50.projectspec">
					<filter.ref ref.id="filter_676552090664800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_DM8146_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8146"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_51.projectspec">
					<filter.ref ref.id="filter_676552090664800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_DM8146_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8146"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_52.projectspec">
					<filter.ref ref.id="filter_676552090664800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_DM8146_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8146"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_53.projectspec">
					<filter.ref ref.id="filter_676552090664800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_DM8146_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8146"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_54.projectspec">
					<filter.ref ref.id="filter_676552090664800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_DM8146_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8146"/>
						</attributes>
					</type>
				</content>
				<content name="Semi-Hosting Example" desc="This example leverages Semi-Hosting for printf IO.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_60.projectspec">
					<filter.ref ref.id="filter_676552090664800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="semihost_DM8146_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8146"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_56.projectspec">
					<filter.ref ref.id="filter_676552090664800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_DM8146_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8146"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_57.projectspec">
					<filter.ref ref.id="filter_676552090664800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_DM8146_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8146"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_58.projectspec">
					<filter.ref ref.id="filter_676552090664800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_DM8146_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8146"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_55.projectspec">
					<filter.ref ref.id="filter_676552090664800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_DM8146_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8146"/>
						</attributes>
					</type>
				</content>
				</contents>
				</contents>
				<contents name="TI Target Examples" desc="SYS/BIOS Examples for TI targets." customPageType="genericNote">
				<filter id="filter_676552090955800">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>DM8146</tag>
					<tag>DaVinci DM81xx</tag>
					<tag>TI Target Examples</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\com_ti_rtsc_sysbios_example_30.projectspec">
					<filter.ref ref.id="filter_676552090955800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_DM8146_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8146"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\com_ti_rtsc_sysbios_example_31.projectspec">
					<filter.ref ref.id="filter_676552090955800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_DM8146_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8146"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_676552090986100">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>DM8146</tag>
					<tag>DaVinci DM81xx</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_44.projectspec">
					<filter.ref ref.id="filter_676552090986100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_DM8146_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8146"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_33.projectspec">
					<filter.ref ref.id="filter_676552090986100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_DM8146_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8146"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_34.projectspec">
					<filter.ref ref.id="filter_676552090986100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_DM8146_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8146"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_35.projectspec">
					<filter.ref ref.id="filter_676552090986100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_DM8146_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8146"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_36.projectspec">
					<filter.ref ref.id="filter_676552090986100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_DM8146_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8146"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_37.projectspec">
					<filter.ref ref.id="filter_676552090986100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_DM8146_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8146"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_38.projectspec">
					<filter.ref ref.id="filter_676552090986100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_DM8146_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8146"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_39.projectspec">
					<filter.ref ref.id="filter_676552090986100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_DM8146_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8146"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_41.projectspec">
					<filter.ref ref.id="filter_676552090986100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_DM8146_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8146"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_42.projectspec">
					<filter.ref ref.id="filter_676552090986100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_DM8146_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8146"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_43.projectspec">
					<filter.ref ref.id="filter_676552090986100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_DM8146_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8146"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_40.projectspec">
					<filter.ref ref.id="filter_676552090986100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_DM8146_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8146"/>
						</attributes>
					</type>
				</content>
				</contents>
				</contents>
			</contents>
			<contents name="DM8147" desc="DM8147" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_676552091199200">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>DM8147</tag>
					<tag>DaVinci DM81xx</tag>
					</search.tags>
				</filter>
				<contents name="GNU Target Examples" desc="SYS/BIOS Examples for GNU targets." customPageType="genericNote">
				<filter id="filter_676552091778200">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>DM8147</tag>
					<tag>DaVinci DM81xx</tag>
					<tag>GNU Target Examples</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\com_ti_rtsc_sysbios_example_45.projectspec">
					<filter.ref ref.id="filter_676552091778200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_DM8147_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8147"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\com_ti_rtsc_sysbios_example_46.projectspec">
					<filter.ref ref.id="filter_676552091778200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_DM8147_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8147"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_676552091815700">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>DM8147</tag>
					<tag>DaVinci DM81xx</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_59.projectspec">
					<filter.ref ref.id="filter_676552091815700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_DM8147_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8147"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_48.projectspec">
					<filter.ref ref.id="filter_676552091815700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_DM8147_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8147"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_49.projectspec">
					<filter.ref ref.id="filter_676552091815700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_DM8147_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8147"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_50.projectspec">
					<filter.ref ref.id="filter_676552091815700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_DM8147_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8147"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_51.projectspec">
					<filter.ref ref.id="filter_676552091815700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_DM8147_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8147"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_52.projectspec">
					<filter.ref ref.id="filter_676552091815700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_DM8147_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8147"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_53.projectspec">
					<filter.ref ref.id="filter_676552091815700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_DM8147_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8147"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_54.projectspec">
					<filter.ref ref.id="filter_676552091815700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_DM8147_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8147"/>
						</attributes>
					</type>
				</content>
				<content name="Semi-Hosting Example" desc="This example leverages Semi-Hosting for printf IO.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_60.projectspec">
					<filter.ref ref.id="filter_676552091815700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="semihost_DM8147_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8147"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_56.projectspec">
					<filter.ref ref.id="filter_676552091815700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_DM8147_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8147"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_57.projectspec">
					<filter.ref ref.id="filter_676552091815700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_DM8147_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8147"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_58.projectspec">
					<filter.ref ref.id="filter_676552091815700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_DM8147_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8147"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_55.projectspec">
					<filter.ref ref.id="filter_676552091815700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_DM8147_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8147"/>
						</attributes>
					</type>
				</content>
				</contents>
				</contents>
				<contents name="TI Target Examples" desc="SYS/BIOS Examples for TI targets." customPageType="genericNote">
				<filter id="filter_676552092127900">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>DM8147</tag>
					<tag>DaVinci DM81xx</tag>
					<tag>TI Target Examples</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\com_ti_rtsc_sysbios_example_30.projectspec">
					<filter.ref ref.id="filter_676552092127900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_DM8147_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8147"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\com_ti_rtsc_sysbios_example_31.projectspec">
					<filter.ref ref.id="filter_676552092127900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_DM8147_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8147"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_676552092179700">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>DM8147</tag>
					<tag>DaVinci DM81xx</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_44.projectspec">
					<filter.ref ref.id="filter_676552092179700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_DM8147_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8147"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_33.projectspec">
					<filter.ref ref.id="filter_676552092179700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_DM8147_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8147"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_34.projectspec">
					<filter.ref ref.id="filter_676552092179700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_DM8147_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8147"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_35.projectspec">
					<filter.ref ref.id="filter_676552092179700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_DM8147_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8147"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_36.projectspec">
					<filter.ref ref.id="filter_676552092179700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_DM8147_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8147"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_37.projectspec">
					<filter.ref ref.id="filter_676552092179700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_DM8147_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8147"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_38.projectspec">
					<filter.ref ref.id="filter_676552092179700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_DM8147_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8147"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_39.projectspec">
					<filter.ref ref.id="filter_676552092179700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_DM8147_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8147"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_41.projectspec">
					<filter.ref ref.id="filter_676552092179700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_DM8147_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8147"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_42.projectspec">
					<filter.ref ref.id="filter_676552092179700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_DM8147_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8147"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_43.projectspec">
					<filter.ref ref.id="filter_676552092179700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_DM8147_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8147"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_40.projectspec">
					<filter.ref ref.id="filter_676552092179700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_DM8147_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8147"/>
						</attributes>
					</type>
				</content>
				</contents>
				</contents>
			</contents>
			<contents name="DM8148" desc="DM8148" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_676552093629600">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>DM8148</tag>
					<tag>DaVinci DM81xx</tag>
					</search.tags>
				</filter>
				<contents name="GNU Target Examples" desc="SYS/BIOS Examples for GNU targets." customPageType="genericNote">
				<filter id="filter_676552094165000">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>DM8148</tag>
					<tag>DaVinci DM81xx</tag>
					<tag>GNU Target Examples</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\com_ti_rtsc_sysbios_example_45.projectspec">
					<filter.ref ref.id="filter_676552094165000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_DM8148_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8148"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\com_ti_rtsc_sysbios_example_46.projectspec">
					<filter.ref ref.id="filter_676552094165000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_DM8148_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8148"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_676552094210500">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>DM8148</tag>
					<tag>DaVinci DM81xx</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_59.projectspec">
					<filter.ref ref.id="filter_676552094210500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_DM8148_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8148"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_48.projectspec">
					<filter.ref ref.id="filter_676552094210500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_DM8148_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8148"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_49.projectspec">
					<filter.ref ref.id="filter_676552094210500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_DM8148_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8148"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_50.projectspec">
					<filter.ref ref.id="filter_676552094210500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_DM8148_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8148"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_51.projectspec">
					<filter.ref ref.id="filter_676552094210500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_DM8148_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8148"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_52.projectspec">
					<filter.ref ref.id="filter_676552094210500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_DM8148_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8148"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_53.projectspec">
					<filter.ref ref.id="filter_676552094210500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_DM8148_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8148"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_54.projectspec">
					<filter.ref ref.id="filter_676552094210500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_DM8148_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8148"/>
						</attributes>
					</type>
				</content>
				<content name="Semi-Hosting Example" desc="This example leverages Semi-Hosting for printf IO.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_60.projectspec">
					<filter.ref ref.id="filter_676552094210500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="semihost_DM8148_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8148"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_56.projectspec">
					<filter.ref ref.id="filter_676552094210500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_DM8148_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8148"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_57.projectspec">
					<filter.ref ref.id="filter_676552094210500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_DM8148_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8148"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_58.projectspec">
					<filter.ref ref.id="filter_676552094210500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_DM8148_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8148"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_55.projectspec">
					<filter.ref ref.id="filter_676552094210500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_DM8148_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8148"/>
						</attributes>
					</type>
				</content>
				</contents>
				</contents>
				<contents name="TI Target Examples" desc="SYS/BIOS Examples for TI targets." customPageType="genericNote">
				<filter id="filter_676552094534100">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>DM8148</tag>
					<tag>DaVinci DM81xx</tag>
					<tag>TI Target Examples</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\com_ti_rtsc_sysbios_example_30.projectspec">
					<filter.ref ref.id="filter_676552094534100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_DM8148_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8148"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\com_ti_rtsc_sysbios_example_31.projectspec">
					<filter.ref ref.id="filter_676552094534100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_DM8148_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8148"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_676552094567000">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>DM8148</tag>
					<tag>DaVinci DM81xx</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_44.projectspec">
					<filter.ref ref.id="filter_676552094567000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_DM8148_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8148"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_33.projectspec">
					<filter.ref ref.id="filter_676552094567000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_DM8148_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8148"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_34.projectspec">
					<filter.ref ref.id="filter_676552094567000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_DM8148_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8148"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_35.projectspec">
					<filter.ref ref.id="filter_676552094567000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_DM8148_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8148"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_36.projectspec">
					<filter.ref ref.id="filter_676552094567000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_DM8148_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8148"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_37.projectspec">
					<filter.ref ref.id="filter_676552094567000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_DM8148_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8148"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_38.projectspec">
					<filter.ref ref.id="filter_676552094567000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_DM8148_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8148"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_39.projectspec">
					<filter.ref ref.id="filter_676552094567000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_DM8148_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8148"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_41.projectspec">
					<filter.ref ref.id="filter_676552094567000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_DM8148_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8148"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_42.projectspec">
					<filter.ref ref.id="filter_676552094567000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_DM8148_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8148"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_43.projectspec">
					<filter.ref ref.id="filter_676552094567000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_DM8148_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8148"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_40.projectspec">
					<filter.ref ref.id="filter_676552094567000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_DM8148_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8148"/>
						</attributes>
					</type>
				</content>
				</contents>
				</contents>
			</contents>
			<contents name="DM8165" desc="DM8165" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_676552094783000">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>DM8165</tag>
					<tag>DaVinci DM81xx</tag>
					</search.tags>
				</filter>
				<contents name="GNU Target Examples" desc="SYS/BIOS Examples for GNU targets." customPageType="genericNote">
				<filter id="filter_676552095255900">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>DM8165</tag>
					<tag>DaVinci DM81xx</tag>
					<tag>GNU Target Examples</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\com_ti_rtsc_sysbios_example_45.projectspec">
					<filter.ref ref.id="filter_676552095255900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_DM8165_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8165"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\com_ti_rtsc_sysbios_example_46.projectspec">
					<filter.ref ref.id="filter_676552095255900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_DM8165_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8165"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_676552095287700">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>DM8165</tag>
					<tag>DaVinci DM81xx</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_59.projectspec">
					<filter.ref ref.id="filter_676552095287700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_DM8165_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8165"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_48.projectspec">
					<filter.ref ref.id="filter_676552095287700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_DM8165_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8165"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_49.projectspec">
					<filter.ref ref.id="filter_676552095287700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_DM8165_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8165"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_50.projectspec">
					<filter.ref ref.id="filter_676552095287700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_DM8165_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8165"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_51.projectspec">
					<filter.ref ref.id="filter_676552095287700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_DM8165_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8165"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_52.projectspec">
					<filter.ref ref.id="filter_676552095287700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_DM8165_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8165"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_53.projectspec">
					<filter.ref ref.id="filter_676552095287700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_DM8165_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8165"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_54.projectspec">
					<filter.ref ref.id="filter_676552095287700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_DM8165_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8165"/>
						</attributes>
					</type>
				</content>
				<content name="Semi-Hosting Example" desc="This example leverages Semi-Hosting for printf IO.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_60.projectspec">
					<filter.ref ref.id="filter_676552095287700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="semihost_DM8165_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8165"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_56.projectspec">
					<filter.ref ref.id="filter_676552095287700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_DM8165_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8165"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_57.projectspec">
					<filter.ref ref.id="filter_676552095287700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_DM8165_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8165"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_58.projectspec">
					<filter.ref ref.id="filter_676552095287700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_DM8165_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8165"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_55.projectspec">
					<filter.ref ref.id="filter_676552095287700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_DM8165_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8165"/>
						</attributes>
					</type>
				</content>
				</contents>
				</contents>
				<contents name="TI Target Examples" desc="SYS/BIOS Examples for TI targets." customPageType="genericNote">
				<filter id="filter_676552095582400">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>DM8165</tag>
					<tag>DaVinci DM81xx</tag>
					<tag>TI Target Examples</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\com_ti_rtsc_sysbios_example_30.projectspec">
					<filter.ref ref.id="filter_676552095582400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_DM8165_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8165"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\com_ti_rtsc_sysbios_example_31.projectspec">
					<filter.ref ref.id="filter_676552095582400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_DM8165_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8165"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_676552095613900">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>DM8165</tag>
					<tag>DaVinci DM81xx</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_44.projectspec">
					<filter.ref ref.id="filter_676552095613900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_DM8165_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8165"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_33.projectspec">
					<filter.ref ref.id="filter_676552095613900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_DM8165_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8165"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_34.projectspec">
					<filter.ref ref.id="filter_676552095613900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_DM8165_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8165"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_35.projectspec">
					<filter.ref ref.id="filter_676552095613900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_DM8165_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8165"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_36.projectspec">
					<filter.ref ref.id="filter_676552095613900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_DM8165_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8165"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_37.projectspec">
					<filter.ref ref.id="filter_676552095613900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_DM8165_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8165"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_38.projectspec">
					<filter.ref ref.id="filter_676552095613900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_DM8165_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8165"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_39.projectspec">
					<filter.ref ref.id="filter_676552095613900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_DM8165_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8165"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_41.projectspec">
					<filter.ref ref.id="filter_676552095613900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_DM8165_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8165"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_42.projectspec">
					<filter.ref ref.id="filter_676552095613900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_DM8165_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8165"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_43.projectspec">
					<filter.ref ref.id="filter_676552095613900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_DM8165_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8165"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_40.projectspec">
					<filter.ref ref.id="filter_676552095613900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_DM8165_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8165"/>
						</attributes>
					</type>
				</content>
				</contents>
				</contents>
			</contents>
			<contents name="DM8166" desc="DM8166" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_676552095850700">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>DM8166</tag>
					<tag>DaVinci DM81xx</tag>
					</search.tags>
				</filter>
				<contents name="GNU Target Examples" desc="SYS/BIOS Examples for GNU targets." customPageType="genericNote">
				<filter id="filter_676552096316400">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>DM8166</tag>
					<tag>DaVinci DM81xx</tag>
					<tag>GNU Target Examples</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\com_ti_rtsc_sysbios_example_45.projectspec">
					<filter.ref ref.id="filter_676552096316400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_DM8166_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8166"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\com_ti_rtsc_sysbios_example_46.projectspec">
					<filter.ref ref.id="filter_676552096316400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_DM8166_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8166"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_676552096347100">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>DM8166</tag>
					<tag>DaVinci DM81xx</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_59.projectspec">
					<filter.ref ref.id="filter_676552096347100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_DM8166_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8166"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_48.projectspec">
					<filter.ref ref.id="filter_676552096347100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_DM8166_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8166"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_49.projectspec">
					<filter.ref ref.id="filter_676552096347100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_DM8166_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8166"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_50.projectspec">
					<filter.ref ref.id="filter_676552096347100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_DM8166_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8166"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_51.projectspec">
					<filter.ref ref.id="filter_676552096347100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_DM8166_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8166"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_52.projectspec">
					<filter.ref ref.id="filter_676552096347100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_DM8166_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8166"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_53.projectspec">
					<filter.ref ref.id="filter_676552096347100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_DM8166_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8166"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_54.projectspec">
					<filter.ref ref.id="filter_676552096347100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_DM8166_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8166"/>
						</attributes>
					</type>
				</content>
				<content name="Semi-Hosting Example" desc="This example leverages Semi-Hosting for printf IO.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_60.projectspec">
					<filter.ref ref.id="filter_676552096347100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="semihost_DM8166_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8166"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_56.projectspec">
					<filter.ref ref.id="filter_676552096347100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_DM8166_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8166"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_57.projectspec">
					<filter.ref ref.id="filter_676552096347100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_DM8166_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8166"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_58.projectspec">
					<filter.ref ref.id="filter_676552096347100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_DM8166_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8166"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_55.projectspec">
					<filter.ref ref.id="filter_676552096347100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_DM8166_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8166"/>
						</attributes>
					</type>
				</content>
				</contents>
				</contents>
				<contents name="TI Target Examples" desc="SYS/BIOS Examples for TI targets." customPageType="genericNote">
				<filter id="filter_676552096635800">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>DM8166</tag>
					<tag>DaVinci DM81xx</tag>
					<tag>TI Target Examples</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\com_ti_rtsc_sysbios_example_30.projectspec">
					<filter.ref ref.id="filter_676552096635800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_DM8166_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8166"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\com_ti_rtsc_sysbios_example_31.projectspec">
					<filter.ref ref.id="filter_676552096635800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_DM8166_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8166"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_676552096665600">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>DM8166</tag>
					<tag>DaVinci DM81xx</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_44.projectspec">
					<filter.ref ref.id="filter_676552096665600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_DM8166_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8166"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_33.projectspec">
					<filter.ref ref.id="filter_676552096665600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_DM8166_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8166"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_34.projectspec">
					<filter.ref ref.id="filter_676552096665600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_DM8166_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8166"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_35.projectspec">
					<filter.ref ref.id="filter_676552096665600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_DM8166_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8166"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_36.projectspec">
					<filter.ref ref.id="filter_676552096665600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_DM8166_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8166"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_37.projectspec">
					<filter.ref ref.id="filter_676552096665600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_DM8166_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8166"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_38.projectspec">
					<filter.ref ref.id="filter_676552096665600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_DM8166_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8166"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_39.projectspec">
					<filter.ref ref.id="filter_676552096665600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_DM8166_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8166"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_41.projectspec">
					<filter.ref ref.id="filter_676552096665600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_DM8166_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8166"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_42.projectspec">
					<filter.ref ref.id="filter_676552096665600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_DM8166_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8166"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_43.projectspec">
					<filter.ref ref.id="filter_676552096665600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_DM8166_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8166"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_40.projectspec">
					<filter.ref ref.id="filter_676552096665600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_DM8166_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8166"/>
						</attributes>
					</type>
				</content>
				</contents>
				</contents>
			</contents>
			<contents name="DM8167" desc="DM8167" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_676552096860900">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>DM8167</tag>
					<tag>DaVinci DM81xx</tag>
					</search.tags>
				</filter>
				<contents name="GNU Target Examples" desc="SYS/BIOS Examples for GNU targets." customPageType="genericNote">
				<filter id="filter_676552097333900">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>DM8167</tag>
					<tag>DaVinci DM81xx</tag>
					<tag>GNU Target Examples</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\com_ti_rtsc_sysbios_example_45.projectspec">
					<filter.ref ref.id="filter_676552097333900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_DM8167_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8167"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\com_ti_rtsc_sysbios_example_46.projectspec">
					<filter.ref ref.id="filter_676552097333900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_DM8167_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8167"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_676552097365200">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>DM8167</tag>
					<tag>DaVinci DM81xx</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_59.projectspec">
					<filter.ref ref.id="filter_676552097365200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_DM8167_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8167"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_48.projectspec">
					<filter.ref ref.id="filter_676552097365200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_DM8167_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8167"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_49.projectspec">
					<filter.ref ref.id="filter_676552097365200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_DM8167_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8167"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_50.projectspec">
					<filter.ref ref.id="filter_676552097365200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_DM8167_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8167"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_51.projectspec">
					<filter.ref ref.id="filter_676552097365200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_DM8167_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8167"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_52.projectspec">
					<filter.ref ref.id="filter_676552097365200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_DM8167_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8167"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_53.projectspec">
					<filter.ref ref.id="filter_676552097365200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_DM8167_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8167"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_54.projectspec">
					<filter.ref ref.id="filter_676552097365200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_DM8167_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8167"/>
						</attributes>
					</type>
				</content>
				<content name="Semi-Hosting Example" desc="This example leverages Semi-Hosting for printf IO.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_60.projectspec">
					<filter.ref ref.id="filter_676552097365200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="semihost_DM8167_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8167"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_56.projectspec">
					<filter.ref ref.id="filter_676552097365200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_DM8167_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8167"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_57.projectspec">
					<filter.ref ref.id="filter_676552097365200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_DM8167_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8167"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_58.projectspec">
					<filter.ref ref.id="filter_676552097365200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_DM8167_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8167"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_55.projectspec">
					<filter.ref ref.id="filter_676552097365200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_DM8167_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8167"/>
						</attributes>
					</type>
				</content>
				</contents>
				</contents>
				<contents name="TI Target Examples" desc="SYS/BIOS Examples for TI targets." customPageType="genericNote">
				<filter id="filter_676552097648800">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>DM8167</tag>
					<tag>DaVinci DM81xx</tag>
					<tag>TI Target Examples</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\com_ti_rtsc_sysbios_example_30.projectspec">
					<filter.ref ref.id="filter_676552097648800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_DM8167_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8167"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\com_ti_rtsc_sysbios_example_31.projectspec">
					<filter.ref ref.id="filter_676552097648800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_DM8167_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8167"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_676552097679000">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>DM8167</tag>
					<tag>DaVinci DM81xx</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_44.projectspec">
					<filter.ref ref.id="filter_676552097679000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_DM8167_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8167"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_33.projectspec">
					<filter.ref ref.id="filter_676552097679000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_DM8167_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8167"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_34.projectspec">
					<filter.ref ref.id="filter_676552097679000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_DM8167_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8167"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_35.projectspec">
					<filter.ref ref.id="filter_676552097679000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_DM8167_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8167"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_36.projectspec">
					<filter.ref ref.id="filter_676552097679000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_DM8167_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8167"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_37.projectspec">
					<filter.ref ref.id="filter_676552097679000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_DM8167_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8167"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_38.projectspec">
					<filter.ref ref.id="filter_676552097679000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_DM8167_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8167"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_39.projectspec">
					<filter.ref ref.id="filter_676552097679000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_DM8167_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8167"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_41.projectspec">
					<filter.ref ref.id="filter_676552097679000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_DM8167_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8167"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_42.projectspec">
					<filter.ref ref.id="filter_676552097679000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_DM8167_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8167"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_43.projectspec">
					<filter.ref ref.id="filter_676552097679000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_DM8167_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8167"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_40.projectspec">
					<filter.ref ref.id="filter_676552097679000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_DM8167_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8167"/>
						</attributes>
					</type>
				</content>
				</contents>
				</contents>
			</contents>
			<contents name="DM8168" desc="DM8168" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_676552099158700">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>DM8168</tag>
					<tag>DaVinci DM81xx</tag>
					</search.tags>
				</filter>
				<contents name="GNU Target Examples" desc="SYS/BIOS Examples for GNU targets." customPageType="genericNote">
				<filter id="filter_676552099700900">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>DM8168</tag>
					<tag>DaVinci DM81xx</tag>
					<tag>GNU Target Examples</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\com_ti_rtsc_sysbios_example_45.projectspec">
					<filter.ref ref.id="filter_676552099700900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_DM8168_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8168"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\com_ti_rtsc_sysbios_example_46.projectspec">
					<filter.ref ref.id="filter_676552099700900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_DM8168_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8168"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_676552099752800">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>DM8168</tag>
					<tag>DaVinci DM81xx</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_59.projectspec">
					<filter.ref ref.id="filter_676552099752800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_DM8168_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8168"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_48.projectspec">
					<filter.ref ref.id="filter_676552099752800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_DM8168_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8168"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_49.projectspec">
					<filter.ref ref.id="filter_676552099752800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_DM8168_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8168"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_50.projectspec">
					<filter.ref ref.id="filter_676552099752800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_DM8168_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8168"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_51.projectspec">
					<filter.ref ref.id="filter_676552099752800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_DM8168_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8168"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_52.projectspec">
					<filter.ref ref.id="filter_676552099752800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_DM8168_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8168"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_53.projectspec">
					<filter.ref ref.id="filter_676552099752800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_DM8168_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8168"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_54.projectspec">
					<filter.ref ref.id="filter_676552099752800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_DM8168_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8168"/>
						</attributes>
					</type>
				</content>
				<content name="Semi-Hosting Example" desc="This example leverages Semi-Hosting for printf IO.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_60.projectspec">
					<filter.ref ref.id="filter_676552099752800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="semihost_DM8168_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8168"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_56.projectspec">
					<filter.ref ref.id="filter_676552099752800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_DM8168_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8168"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_57.projectspec">
					<filter.ref ref.id="filter_676552099752800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_DM8168_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8168"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_58.projectspec">
					<filter.ref ref.id="filter_676552099752800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_DM8168_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8168"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_55.projectspec">
					<filter.ref ref.id="filter_676552099752800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_DM8168_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8168"/>
						</attributes>
					</type>
				</content>
				</contents>
				</contents>
				<contents name="TI Target Examples" desc="SYS/BIOS Examples for TI targets." customPageType="genericNote">
				<filter id="filter_676552100087600">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>DM8168</tag>
					<tag>DaVinci DM81xx</tag>
					<tag>TI Target Examples</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\com_ti_rtsc_sysbios_example_30.projectspec">
					<filter.ref ref.id="filter_676552100087600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_DM8168_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8168"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\com_ti_rtsc_sysbios_example_31.projectspec">
					<filter.ref ref.id="filter_676552100087600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_DM8168_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8168"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_676552100125100">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>DM8168</tag>
					<tag>DaVinci DM81xx</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_44.projectspec">
					<filter.ref ref.id="filter_676552100125100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_DM8168_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8168"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_33.projectspec">
					<filter.ref ref.id="filter_676552100125100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_DM8168_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8168"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_34.projectspec">
					<filter.ref ref.id="filter_676552100125100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_DM8168_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8168"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_35.projectspec">
					<filter.ref ref.id="filter_676552100125100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_DM8168_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8168"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_36.projectspec">
					<filter.ref ref.id="filter_676552100125100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_DM8168_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8168"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_37.projectspec">
					<filter.ref ref.id="filter_676552100125100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_DM8168_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8168"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_38.projectspec">
					<filter.ref ref.id="filter_676552100125100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_DM8168_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8168"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_39.projectspec">
					<filter.ref ref.id="filter_676552100125100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_DM8168_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8168"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_41.projectspec">
					<filter.ref ref.id="filter_676552100125100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_DM8168_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8168"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_42.projectspec">
					<filter.ref ref.id="filter_676552100125100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_DM8168_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8168"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_43.projectspec">
					<filter.ref ref.id="filter_676552100125100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_DM8168_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8168"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_40.projectspec">
					<filter.ref ref.id="filter_676552100125100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_DM8168_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8168"/>
						</attributes>
					</type>
				</content>
				</contents>
				</contents>
			</contents>
			<contents name="EVMDM8148" desc="EVMDM8148" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_676552100358700">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>EVMDM8148</tag>
					<tag>DaVinci DM81xx</tag>
					</search.tags>
				</filter>
				<contents name="GNU Target Examples" desc="SYS/BIOS Examples for GNU targets." customPageType="genericNote">
				<filter id="filter_676552100909000">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>EVMDM8148</tag>
					<tag>DaVinci DM81xx</tag>
					<tag>GNU Target Examples</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\com_ti_rtsc_sysbios_example_45.projectspec">
					<filter.ref ref.id="filter_676552100909000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_EVMDM8148_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8148.EVMDM8148"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\com_ti_rtsc_sysbios_example_46.projectspec">
					<filter.ref ref.id="filter_676552100909000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_EVMDM8148_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8148.EVMDM8148"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_676552100948300">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>EVMDM8148</tag>
					<tag>DaVinci DM81xx</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_59.projectspec">
					<filter.ref ref.id="filter_676552100948300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_EVMDM8148_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8148.EVMDM8148"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_48.projectspec">
					<filter.ref ref.id="filter_676552100948300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_EVMDM8148_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8148.EVMDM8148"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_49.projectspec">
					<filter.ref ref.id="filter_676552100948300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_EVMDM8148_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8148.EVMDM8148"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_50.projectspec">
					<filter.ref ref.id="filter_676552100948300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_EVMDM8148_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8148.EVMDM8148"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_51.projectspec">
					<filter.ref ref.id="filter_676552100948300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_EVMDM8148_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8148.EVMDM8148"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_52.projectspec">
					<filter.ref ref.id="filter_676552100948300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_EVMDM8148_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8148.EVMDM8148"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_53.projectspec">
					<filter.ref ref.id="filter_676552100948300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_EVMDM8148_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8148.EVMDM8148"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_54.projectspec">
					<filter.ref ref.id="filter_676552100948300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_EVMDM8148_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8148.EVMDM8148"/>
						</attributes>
					</type>
				</content>
				<content name="Semi-Hosting Example" desc="This example leverages Semi-Hosting for printf IO.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_60.projectspec">
					<filter.ref ref.id="filter_676552100948300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="semihost_EVMDM8148_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8148.EVMDM8148"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_56.projectspec">
					<filter.ref ref.id="filter_676552100948300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_EVMDM8148_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8148.EVMDM8148"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_57.projectspec">
					<filter.ref ref.id="filter_676552100948300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_EVMDM8148_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8148.EVMDM8148"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_58.projectspec">
					<filter.ref ref.id="filter_676552100948300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_EVMDM8148_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8148.EVMDM8148"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_55.projectspec">
					<filter.ref ref.id="filter_676552100948300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_EVMDM8148_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8148.EVMDM8148"/>
						</attributes>
					</type>
				</content>
				</contents>
				</contents>
				<contents name="TI Target Examples" desc="SYS/BIOS Examples for TI targets." customPageType="genericNote">
				<filter id="filter_676552101275200">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>EVMDM8148</tag>
					<tag>DaVinci DM81xx</tag>
					<tag>TI Target Examples</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\com_ti_rtsc_sysbios_example_30.projectspec">
					<filter.ref ref.id="filter_676552101275200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_EVMDM8148_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8148.EVMDM8148"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\com_ti_rtsc_sysbios_example_31.projectspec">
					<filter.ref ref.id="filter_676552101275200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_EVMDM8148_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8148.EVMDM8148"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_676552101311300">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>EVMDM8148</tag>
					<tag>DaVinci DM81xx</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_44.projectspec">
					<filter.ref ref.id="filter_676552101311300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_EVMDM8148_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8148.EVMDM8148"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_33.projectspec">
					<filter.ref ref.id="filter_676552101311300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_EVMDM8148_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8148.EVMDM8148"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_34.projectspec">
					<filter.ref ref.id="filter_676552101311300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_EVMDM8148_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8148.EVMDM8148"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_35.projectspec">
					<filter.ref ref.id="filter_676552101311300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_EVMDM8148_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8148.EVMDM8148"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_36.projectspec">
					<filter.ref ref.id="filter_676552101311300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_EVMDM8148_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8148.EVMDM8148"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_37.projectspec">
					<filter.ref ref.id="filter_676552101311300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_EVMDM8148_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8148.EVMDM8148"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_38.projectspec">
					<filter.ref ref.id="filter_676552101311300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_EVMDM8148_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8148.EVMDM8148"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_39.projectspec">
					<filter.ref ref.id="filter_676552101311300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_EVMDM8148_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8148.EVMDM8148"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_41.projectspec">
					<filter.ref ref.id="filter_676552101311300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_EVMDM8148_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8148.EVMDM8148"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_42.projectspec">
					<filter.ref ref.id="filter_676552101311300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_EVMDM8148_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8148.EVMDM8148"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_43.projectspec">
					<filter.ref ref.id="filter_676552101311300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_EVMDM8148_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8148.EVMDM8148"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_40.projectspec">
					<filter.ref ref.id="filter_676552101311300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_EVMDM8148_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8148.EVMDM8148"/>
						</attributes>
					</type>
				</content>
				</contents>
				</contents>
			</contents>
			<contents name="EVMDM8168" desc="EVMDM8168" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_676552101656700">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>EVMDM8168</tag>
					<tag>DaVinci DM81xx</tag>
					</search.tags>
				</filter>
				<contents name="GNU Target Examples" desc="SYS/BIOS Examples for GNU targets." customPageType="genericNote">
				<filter id="filter_676552102157800">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>EVMDM8168</tag>
					<tag>DaVinci DM81xx</tag>
					<tag>GNU Target Examples</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\com_ti_rtsc_sysbios_example_45.projectspec">
					<filter.ref ref.id="filter_676552102157800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_EVMDM8168_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8168.EVMDM8168"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\com_ti_rtsc_sysbios_example_46.projectspec">
					<filter.ref ref.id="filter_676552102157800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_EVMDM8168_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8168.EVMDM8168"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_676552102193800">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>EVMDM8168</tag>
					<tag>DaVinci DM81xx</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_59.projectspec">
					<filter.ref ref.id="filter_676552102193800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_EVMDM8168_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8168.EVMDM8168"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_48.projectspec">
					<filter.ref ref.id="filter_676552102193800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_EVMDM8168_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8168.EVMDM8168"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_49.projectspec">
					<filter.ref ref.id="filter_676552102193800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_EVMDM8168_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8168.EVMDM8168"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_50.projectspec">
					<filter.ref ref.id="filter_676552102193800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_EVMDM8168_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8168.EVMDM8168"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_51.projectspec">
					<filter.ref ref.id="filter_676552102193800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_EVMDM8168_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8168.EVMDM8168"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_52.projectspec">
					<filter.ref ref.id="filter_676552102193800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_EVMDM8168_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8168.EVMDM8168"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_53.projectspec">
					<filter.ref ref.id="filter_676552102193800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_EVMDM8168_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8168.EVMDM8168"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_54.projectspec">
					<filter.ref ref.id="filter_676552102193800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_EVMDM8168_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8168.EVMDM8168"/>
						</attributes>
					</type>
				</content>
				<content name="Semi-Hosting Example" desc="This example leverages Semi-Hosting for printf IO.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_60.projectspec">
					<filter.ref ref.id="filter_676552102193800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="semihost_EVMDM8168_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8168.EVMDM8168"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_56.projectspec">
					<filter.ref ref.id="filter_676552102193800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_EVMDM8168_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8168.EVMDM8168"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_57.projectspec">
					<filter.ref ref.id="filter_676552102193800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_EVMDM8168_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8168.EVMDM8168"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_58.projectspec">
					<filter.ref ref.id="filter_676552102193800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_EVMDM8168_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8168.EVMDM8168"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_55.projectspec">
					<filter.ref ref.id="filter_676552102193800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_EVMDM8168_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8168.EVMDM8168"/>
						</attributes>
					</type>
				</content>
				</contents>
				</contents>
				<contents name="TI Target Examples" desc="SYS/BIOS Examples for TI targets." customPageType="genericNote">
				<filter id="filter_676552102504900">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>EVMDM8168</tag>
					<tag>DaVinci DM81xx</tag>
					<tag>TI Target Examples</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\com_ti_rtsc_sysbios_example_30.projectspec">
					<filter.ref ref.id="filter_676552102504900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_EVMDM8168_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8168.EVMDM8168"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\com_ti_rtsc_sysbios_example_31.projectspec">
					<filter.ref ref.id="filter_676552102504900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_EVMDM8168_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8168.EVMDM8168"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_676552102540500">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>EVMDM8168</tag>
					<tag>DaVinci DM81xx</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_44.projectspec">
					<filter.ref ref.id="filter_676552102540500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_EVMDM8168_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8168.EVMDM8168"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_33.projectspec">
					<filter.ref ref.id="filter_676552102540500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_EVMDM8168_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8168.EVMDM8168"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_34.projectspec">
					<filter.ref ref.id="filter_676552102540500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_EVMDM8168_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8168.EVMDM8168"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_35.projectspec">
					<filter.ref ref.id="filter_676552102540500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_EVMDM8168_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8168.EVMDM8168"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_36.projectspec">
					<filter.ref ref.id="filter_676552102540500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_EVMDM8168_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8168.EVMDM8168"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_37.projectspec">
					<filter.ref ref.id="filter_676552102540500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_EVMDM8168_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8168.EVMDM8168"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_38.projectspec">
					<filter.ref ref.id="filter_676552102540500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_EVMDM8168_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8168.EVMDM8168"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_39.projectspec">
					<filter.ref ref.id="filter_676552102540500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_EVMDM8168_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8168.EVMDM8168"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_41.projectspec">
					<filter.ref ref.id="filter_676552102540500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_EVMDM8168_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8168.EVMDM8168"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_42.projectspec">
					<filter.ref ref.id="filter_676552102540500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_EVMDM8168_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8168.EVMDM8168"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_43.projectspec">
					<filter.ref ref.id="filter_676552102540500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_EVMDM8168_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8168.EVMDM8168"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_40.projectspec">
					<filter.ref ref.id="filter_676552102540500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_EVMDM8168_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8168.EVMDM8168"/>
						</attributes>
					</type>
				</content>
				</contents>
				</contents>
			</contents>
		</contents>
		<contents name="OMAP-L1x" desc="OMAP-L1x" icon="plugin://icons/obj16/devices.png">
			<contents name="EVMOMAPL137" desc="EVMOMAPL137" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_676552104539800">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>EVMOMAPL137</tag>
					<tag>OMAP-L1x</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_15.projectspec">
					<filter.ref ref.id="filter_676552104539800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_EVMOMAPL137_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAPL137.EVMOMAPL137"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_16.projectspec">
					<filter.ref ref.id="filter_676552104539800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_EVMOMAPL137_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAPL137.EVMOMAPL137"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_676552104703200">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>EVMOMAPL137</tag>
					<tag>OMAP-L1x</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_29.projectspec">
					<filter.ref ref.id="filter_676552104703200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_EVMOMAPL137_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAPL137.EVMOMAPL137"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_18.projectspec">
					<filter.ref ref.id="filter_676552104703200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_EVMOMAPL137_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAPL137.EVMOMAPL137"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_19.projectspec">
					<filter.ref ref.id="filter_676552104703200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_EVMOMAPL137_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAPL137.EVMOMAPL137"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_20.projectspec">
					<filter.ref ref.id="filter_676552104703200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_EVMOMAPL137_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAPL137.EVMOMAPL137"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_21.projectspec">
					<filter.ref ref.id="filter_676552104703200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_EVMOMAPL137_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAPL137.EVMOMAPL137"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_22.projectspec">
					<filter.ref ref.id="filter_676552104703200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_EVMOMAPL137_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAPL137.EVMOMAPL137"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_23.projectspec">
					<filter.ref ref.id="filter_676552104703200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_EVMOMAPL137_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAPL137.EVMOMAPL137"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_24.projectspec">
					<filter.ref ref.id="filter_676552104703200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_EVMOMAPL137_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAPL137.EVMOMAPL137"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_26.projectspec">
					<filter.ref ref.id="filter_676552104703200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_EVMOMAPL137_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAPL137.EVMOMAPL137"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_27.projectspec">
					<filter.ref ref.id="filter_676552104703200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_EVMOMAPL137_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAPL137.EVMOMAPL137"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_28.projectspec">
					<filter.ref ref.id="filter_676552104703200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_EVMOMAPL137_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAPL137.EVMOMAPL137"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_25.projectspec">
					<filter.ref ref.id="filter_676552104703200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_EVMOMAPL137_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAPL137.EVMOMAPL137"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="EVMOMAPL138" desc="EVMOMAPL138" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_676552105650000">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>EVMOMAPL138</tag>
					<tag>OMAP-L1x</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_15.projectspec">
					<filter.ref ref.id="filter_676552105650000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_EVMOMAPL138_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAPL138.EVMOMAPL138"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_16.projectspec">
					<filter.ref ref.id="filter_676552105650000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_EVMOMAPL138_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAPL138.EVMOMAPL138"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_676552105750200">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>EVMOMAPL138</tag>
					<tag>OMAP-L1x</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_29.projectspec">
					<filter.ref ref.id="filter_676552105750200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_EVMOMAPL138_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAPL138.EVMOMAPL138"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_18.projectspec">
					<filter.ref ref.id="filter_676552105750200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_EVMOMAPL138_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAPL138.EVMOMAPL138"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_19.projectspec">
					<filter.ref ref.id="filter_676552105750200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_EVMOMAPL138_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAPL138.EVMOMAPL138"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_20.projectspec">
					<filter.ref ref.id="filter_676552105750200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_EVMOMAPL138_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAPL138.EVMOMAPL138"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_21.projectspec">
					<filter.ref ref.id="filter_676552105750200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_EVMOMAPL138_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAPL138.EVMOMAPL138"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_22.projectspec">
					<filter.ref ref.id="filter_676552105750200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_EVMOMAPL138_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAPL138.EVMOMAPL138"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_23.projectspec">
					<filter.ref ref.id="filter_676552105750200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_EVMOMAPL138_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAPL138.EVMOMAPL138"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_24.projectspec">
					<filter.ref ref.id="filter_676552105750200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_EVMOMAPL138_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAPL138.EVMOMAPL138"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_26.projectspec">
					<filter.ref ref.id="filter_676552105750200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_EVMOMAPL138_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAPL138.EVMOMAPL138"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_27.projectspec">
					<filter.ref ref.id="filter_676552105750200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_EVMOMAPL138_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAPL138.EVMOMAPL138"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_28.projectspec">
					<filter.ref ref.id="filter_676552105750200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_EVMOMAPL138_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAPL138.EVMOMAPL138"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_25.projectspec">
					<filter.ref ref.id="filter_676552105750200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_EVMOMAPL138_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAPL138.EVMOMAPL138"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="EXPKITOMAPL138" desc="EXPKITOMAPL138" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_676552106556000">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>EXPKITOMAPL138</tag>
					<tag>OMAP-L1x</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_15.projectspec">
					<filter.ref ref.id="filter_676552106556000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_EXPKITOMAPL138_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAPL138.EXPKITOMAPL138"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_16.projectspec">
					<filter.ref ref.id="filter_676552106556000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_EXPKITOMAPL138_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAPL138.EXPKITOMAPL138"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_676552106656100">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>EXPKITOMAPL138</tag>
					<tag>OMAP-L1x</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_29.projectspec">
					<filter.ref ref.id="filter_676552106656100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_EXPKITOMAPL138_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAPL138.EXPKITOMAPL138"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_18.projectspec">
					<filter.ref ref.id="filter_676552106656100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_EXPKITOMAPL138_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAPL138.EXPKITOMAPL138"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_19.projectspec">
					<filter.ref ref.id="filter_676552106656100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_EXPKITOMAPL138_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAPL138.EXPKITOMAPL138"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_20.projectspec">
					<filter.ref ref.id="filter_676552106656100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_EXPKITOMAPL138_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAPL138.EXPKITOMAPL138"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_21.projectspec">
					<filter.ref ref.id="filter_676552106656100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_EXPKITOMAPL138_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAPL138.EXPKITOMAPL138"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_22.projectspec">
					<filter.ref ref.id="filter_676552106656100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_EXPKITOMAPL138_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAPL138.EXPKITOMAPL138"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_23.projectspec">
					<filter.ref ref.id="filter_676552106656100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_EXPKITOMAPL138_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAPL138.EXPKITOMAPL138"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_24.projectspec">
					<filter.ref ref.id="filter_676552106656100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_EXPKITOMAPL138_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAPL138.EXPKITOMAPL138"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_26.projectspec">
					<filter.ref ref.id="filter_676552106656100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_EXPKITOMAPL138_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAPL138.EXPKITOMAPL138"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_27.projectspec">
					<filter.ref ref.id="filter_676552106656100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_EXPKITOMAPL138_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAPL138.EXPKITOMAPL138"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_28.projectspec">
					<filter.ref ref.id="filter_676552106656100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_EXPKITOMAPL138_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAPL138.EXPKITOMAPL138"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_25.projectspec">
					<filter.ref ref.id="filter_676552106656100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_EXPKITOMAPL138_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAPL138.EXPKITOMAPL138"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="LCDKOMAPL138" desc="LCDKOMAPL138" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_676552107448700">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>LCDKOMAPL138</tag>
					<tag>OMAP-L1x</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_15.projectspec">
					<filter.ref ref.id="filter_676552107448700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_LCDKOMAPL138_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAPL138.LCDKOMAPL138"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_16.projectspec">
					<filter.ref ref.id="filter_676552107448700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_LCDKOMAPL138_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAPL138.LCDKOMAPL138"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_676552107541300">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>LCDKOMAPL138</tag>
					<tag>OMAP-L1x</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_29.projectspec">
					<filter.ref ref.id="filter_676552107541300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_LCDKOMAPL138_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAPL138.LCDKOMAPL138"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_18.projectspec">
					<filter.ref ref.id="filter_676552107541300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_LCDKOMAPL138_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAPL138.LCDKOMAPL138"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_19.projectspec">
					<filter.ref ref.id="filter_676552107541300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_LCDKOMAPL138_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAPL138.LCDKOMAPL138"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_20.projectspec">
					<filter.ref ref.id="filter_676552107541300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_LCDKOMAPL138_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAPL138.LCDKOMAPL138"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_21.projectspec">
					<filter.ref ref.id="filter_676552107541300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_LCDKOMAPL138_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAPL138.LCDKOMAPL138"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_22.projectspec">
					<filter.ref ref.id="filter_676552107541300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_LCDKOMAPL138_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAPL138.LCDKOMAPL138"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_23.projectspec">
					<filter.ref ref.id="filter_676552107541300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_LCDKOMAPL138_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAPL138.LCDKOMAPL138"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_24.projectspec">
					<filter.ref ref.id="filter_676552107541300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_LCDKOMAPL138_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAPL138.LCDKOMAPL138"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_26.projectspec">
					<filter.ref ref.id="filter_676552107541300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_LCDKOMAPL138_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAPL138.LCDKOMAPL138"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_27.projectspec">
					<filter.ref ref.id="filter_676552107541300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_LCDKOMAPL138_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAPL138.LCDKOMAPL138"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_28.projectspec">
					<filter.ref ref.id="filter_676552107541300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_LCDKOMAPL138_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAPL138.LCDKOMAPL138"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_25.projectspec">
					<filter.ref ref.id="filter_676552107541300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_LCDKOMAPL138_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAPL138.LCDKOMAPL138"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="OMAPL132" desc="OMAPL132" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_676552108578000">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>OMAPL132</tag>
					<tag>OMAP-L1x</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_15.projectspec">
					<filter.ref ref.id="filter_676552108578000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_OMAPL132_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAPL132"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_16.projectspec">
					<filter.ref ref.id="filter_676552108578000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_OMAPL132_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAPL132"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_676552108672000">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>OMAPL132</tag>
					<tag>OMAP-L1x</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_29.projectspec">
					<filter.ref ref.id="filter_676552108672000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_OMAPL132_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAPL132"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_18.projectspec">
					<filter.ref ref.id="filter_676552108672000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_OMAPL132_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAPL132"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_19.projectspec">
					<filter.ref ref.id="filter_676552108672000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_OMAPL132_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAPL132"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_20.projectspec">
					<filter.ref ref.id="filter_676552108672000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_OMAPL132_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAPL132"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_21.projectspec">
					<filter.ref ref.id="filter_676552108672000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_OMAPL132_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAPL132"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_22.projectspec">
					<filter.ref ref.id="filter_676552108672000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_OMAPL132_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAPL132"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_23.projectspec">
					<filter.ref ref.id="filter_676552108672000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_OMAPL132_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAPL132"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_24.projectspec">
					<filter.ref ref.id="filter_676552108672000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_OMAPL132_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAPL132"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_26.projectspec">
					<filter.ref ref.id="filter_676552108672000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_OMAPL132_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAPL132"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_27.projectspec">
					<filter.ref ref.id="filter_676552108672000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_OMAPL132_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAPL132"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_28.projectspec">
					<filter.ref ref.id="filter_676552108672000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_OMAPL132_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAPL132"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_25.projectspec">
					<filter.ref ref.id="filter_676552108672000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_OMAPL132_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAPL132"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="OMAPL137" desc="OMAPL137" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_676552111515700">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>OMAPL137</tag>
					<tag>OMAP-L1x</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_15.projectspec">
					<filter.ref ref.id="filter_676552111515700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_OMAPL137_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAPL137"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_16.projectspec">
					<filter.ref ref.id="filter_676552111515700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_OMAPL137_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAPL137"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_676552111641200">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>OMAPL137</tag>
					<tag>OMAP-L1x</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_29.projectspec">
					<filter.ref ref.id="filter_676552111641200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_OMAPL137_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAPL137"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_18.projectspec">
					<filter.ref ref.id="filter_676552111641200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_OMAPL137_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAPL137"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_19.projectspec">
					<filter.ref ref.id="filter_676552111641200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_OMAPL137_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAPL137"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_20.projectspec">
					<filter.ref ref.id="filter_676552111641200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_OMAPL137_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAPL137"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_21.projectspec">
					<filter.ref ref.id="filter_676552111641200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_OMAPL137_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAPL137"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_22.projectspec">
					<filter.ref ref.id="filter_676552111641200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_OMAPL137_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAPL137"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_23.projectspec">
					<filter.ref ref.id="filter_676552111641200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_OMAPL137_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAPL137"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_24.projectspec">
					<filter.ref ref.id="filter_676552111641200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_OMAPL137_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAPL137"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_26.projectspec">
					<filter.ref ref.id="filter_676552111641200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_OMAPL137_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAPL137"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_27.projectspec">
					<filter.ref ref.id="filter_676552111641200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_OMAPL137_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAPL137"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_28.projectspec">
					<filter.ref ref.id="filter_676552111641200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_OMAPL137_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAPL137"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_25.projectspec">
					<filter.ref ref.id="filter_676552111641200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_OMAPL137_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAPL137"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="OMAPL138" desc="OMAPL138" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_676552112419100">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>OMAPL138</tag>
					<tag>OMAP-L1x</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_15.projectspec">
					<filter.ref ref.id="filter_676552112419100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_OMAPL138_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAPL138"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_16.projectspec">
					<filter.ref ref.id="filter_676552112419100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_OMAPL138_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAPL138"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_676552112505800">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>OMAPL138</tag>
					<tag>OMAP-L1x</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_29.projectspec">
					<filter.ref ref.id="filter_676552112505800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_OMAPL138_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAPL138"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_18.projectspec">
					<filter.ref ref.id="filter_676552112505800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_OMAPL138_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAPL138"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_19.projectspec">
					<filter.ref ref.id="filter_676552112505800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_OMAPL138_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAPL138"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_20.projectspec">
					<filter.ref ref.id="filter_676552112505800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_OMAPL138_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAPL138"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_21.projectspec">
					<filter.ref ref.id="filter_676552112505800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_OMAPL138_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAPL138"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_22.projectspec">
					<filter.ref ref.id="filter_676552112505800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_OMAPL138_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAPL138"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_23.projectspec">
					<filter.ref ref.id="filter_676552112505800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_OMAPL138_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAPL138"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_24.projectspec">
					<filter.ref ref.id="filter_676552112505800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_OMAPL138_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAPL138"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_26.projectspec">
					<filter.ref ref.id="filter_676552112505800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_OMAPL138_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAPL138"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_27.projectspec">
					<filter.ref ref.id="filter_676552112505800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_OMAPL138_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAPL138"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_28.projectspec">
					<filter.ref ref.id="filter_676552112505800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_OMAPL138_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAPL138"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_25.projectspec">
					<filter.ref ref.id="filter_676552112505800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_OMAPL138_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAPL138"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
		</contents>
		<contents name="OMAP3" desc="OMAP3" icon="plugin://icons/obj16/devices.png">
			<contents name="BeagleBoard" desc="BeagleBoard" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_676552113266800">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>BeagleBoard</tag>
					<tag>OMAP3</tag>
					</search.tags>
				</filter>
				<contents name="GNU Target Examples" desc="SYS/BIOS Examples for GNU targets." customPageType="genericNote">
				<filter id="filter_676552113759600">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>BeagleBoard</tag>
					<tag>OMAP3</tag>
					<tag>GNU Target Examples</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\com_ti_rtsc_sysbios_example_45.projectspec">
					<filter.ref ref.id="filter_676552113759600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_BeagleBoard_CortexA"/>
							<attribute key="device.variant" value="Cortex A.OMAP3530.BeagleBoard"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\com_ti_rtsc_sysbios_example_46.projectspec">
					<filter.ref ref.id="filter_676552113759600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_BeagleBoard_CortexA"/>
							<attribute key="device.variant" value="Cortex A.OMAP3530.BeagleBoard"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_676552113794700">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>BeagleBoard</tag>
					<tag>OMAP3</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_59.projectspec">
					<filter.ref ref.id="filter_676552113794700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_BeagleBoard_CortexA"/>
							<attribute key="device.variant" value="Cortex A.OMAP3530.BeagleBoard"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_48.projectspec">
					<filter.ref ref.id="filter_676552113794700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_BeagleBoard_CortexA"/>
							<attribute key="device.variant" value="Cortex A.OMAP3530.BeagleBoard"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_49.projectspec">
					<filter.ref ref.id="filter_676552113794700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_BeagleBoard_CortexA"/>
							<attribute key="device.variant" value="Cortex A.OMAP3530.BeagleBoard"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_50.projectspec">
					<filter.ref ref.id="filter_676552113794700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_BeagleBoard_CortexA"/>
							<attribute key="device.variant" value="Cortex A.OMAP3530.BeagleBoard"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_51.projectspec">
					<filter.ref ref.id="filter_676552113794700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_BeagleBoard_CortexA"/>
							<attribute key="device.variant" value="Cortex A.OMAP3530.BeagleBoard"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_52.projectspec">
					<filter.ref ref.id="filter_676552113794700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_BeagleBoard_CortexA"/>
							<attribute key="device.variant" value="Cortex A.OMAP3530.BeagleBoard"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_53.projectspec">
					<filter.ref ref.id="filter_676552113794700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_BeagleBoard_CortexA"/>
							<attribute key="device.variant" value="Cortex A.OMAP3530.BeagleBoard"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_54.projectspec">
					<filter.ref ref.id="filter_676552113794700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_BeagleBoard_CortexA"/>
							<attribute key="device.variant" value="Cortex A.OMAP3530.BeagleBoard"/>
						</attributes>
					</type>
				</content>
				<content name="Semi-Hosting Example" desc="This example leverages Semi-Hosting for printf IO.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_60.projectspec">
					<filter.ref ref.id="filter_676552113794700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="semihost_BeagleBoard_CortexA"/>
							<attribute key="device.variant" value="Cortex A.OMAP3530.BeagleBoard"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_56.projectspec">
					<filter.ref ref.id="filter_676552113794700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_BeagleBoard_CortexA"/>
							<attribute key="device.variant" value="Cortex A.OMAP3530.BeagleBoard"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_57.projectspec">
					<filter.ref ref.id="filter_676552113794700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_BeagleBoard_CortexA"/>
							<attribute key="device.variant" value="Cortex A.OMAP3530.BeagleBoard"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_58.projectspec">
					<filter.ref ref.id="filter_676552113794700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_BeagleBoard_CortexA"/>
							<attribute key="device.variant" value="Cortex A.OMAP3530.BeagleBoard"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_55.projectspec">
					<filter.ref ref.id="filter_676552113794700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_BeagleBoard_CortexA"/>
							<attribute key="device.variant" value="Cortex A.OMAP3530.BeagleBoard"/>
						</attributes>
					</type>
				</content>
				</contents>
				</contents>
				<contents name="TI Target Examples" desc="SYS/BIOS Examples for TI targets." customPageType="genericNote">
				<filter id="filter_676552114099800">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>BeagleBoard</tag>
					<tag>OMAP3</tag>
					<tag>TI Target Examples</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\com_ti_rtsc_sysbios_example_30.projectspec">
					<filter.ref ref.id="filter_676552114099800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_BeagleBoard_CortexA"/>
							<attribute key="device.variant" value="Cortex A.OMAP3530.BeagleBoard"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\com_ti_rtsc_sysbios_example_31.projectspec">
					<filter.ref ref.id="filter_676552114099800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_BeagleBoard_CortexA"/>
							<attribute key="device.variant" value="Cortex A.OMAP3530.BeagleBoard"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_676552114132300">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>BeagleBoard</tag>
					<tag>OMAP3</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_44.projectspec">
					<filter.ref ref.id="filter_676552114132300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_BeagleBoard_CortexA"/>
							<attribute key="device.variant" value="Cortex A.OMAP3530.BeagleBoard"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_33.projectspec">
					<filter.ref ref.id="filter_676552114132300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_BeagleBoard_CortexA"/>
							<attribute key="device.variant" value="Cortex A.OMAP3530.BeagleBoard"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_34.projectspec">
					<filter.ref ref.id="filter_676552114132300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_BeagleBoard_CortexA"/>
							<attribute key="device.variant" value="Cortex A.OMAP3530.BeagleBoard"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_35.projectspec">
					<filter.ref ref.id="filter_676552114132300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_BeagleBoard_CortexA"/>
							<attribute key="device.variant" value="Cortex A.OMAP3530.BeagleBoard"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_36.projectspec">
					<filter.ref ref.id="filter_676552114132300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_BeagleBoard_CortexA"/>
							<attribute key="device.variant" value="Cortex A.OMAP3530.BeagleBoard"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_37.projectspec">
					<filter.ref ref.id="filter_676552114132300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_BeagleBoard_CortexA"/>
							<attribute key="device.variant" value="Cortex A.OMAP3530.BeagleBoard"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_38.projectspec">
					<filter.ref ref.id="filter_676552114132300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_BeagleBoard_CortexA"/>
							<attribute key="device.variant" value="Cortex A.OMAP3530.BeagleBoard"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_39.projectspec">
					<filter.ref ref.id="filter_676552114132300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_BeagleBoard_CortexA"/>
							<attribute key="device.variant" value="Cortex A.OMAP3530.BeagleBoard"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_41.projectspec">
					<filter.ref ref.id="filter_676552114132300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_BeagleBoard_CortexA"/>
							<attribute key="device.variant" value="Cortex A.OMAP3530.BeagleBoard"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_42.projectspec">
					<filter.ref ref.id="filter_676552114132300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_BeagleBoard_CortexA"/>
							<attribute key="device.variant" value="Cortex A.OMAP3530.BeagleBoard"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_43.projectspec">
					<filter.ref ref.id="filter_676552114132300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_BeagleBoard_CortexA"/>
							<attribute key="device.variant" value="Cortex A.OMAP3530.BeagleBoard"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_40.projectspec">
					<filter.ref ref.id="filter_676552114132300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_BeagleBoard_CortexA"/>
							<attribute key="device.variant" value="Cortex A.OMAP3530.BeagleBoard"/>
						</attributes>
					</type>
				</content>
				</contents>
				</contents>
			</contents>
			<contents name="EVMOMAP3530" desc="EVMOMAP3530" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_676552114350400">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>EVMOMAP3530</tag>
					<tag>OMAP3</tag>
					</search.tags>
				</filter>
				<contents name="GNU Target Examples" desc="SYS/BIOS Examples for GNU targets." customPageType="genericNote">
				<filter id="filter_676552114868700">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>EVMOMAP3530</tag>
					<tag>OMAP3</tag>
					<tag>GNU Target Examples</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\com_ti_rtsc_sysbios_example_45.projectspec">
					<filter.ref ref.id="filter_676552114868700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_EVMOMAP3530_CortexA"/>
							<attribute key="device.variant" value="Cortex A.OMAP3530.EVMOMAP3530"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\com_ti_rtsc_sysbios_example_46.projectspec">
					<filter.ref ref.id="filter_676552114868700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_EVMOMAP3530_CortexA"/>
							<attribute key="device.variant" value="Cortex A.OMAP3530.EVMOMAP3530"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_676552114926200">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>EVMOMAP3530</tag>
					<tag>OMAP3</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_59.projectspec">
					<filter.ref ref.id="filter_676552114926200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_EVMOMAP3530_CortexA"/>
							<attribute key="device.variant" value="Cortex A.OMAP3530.EVMOMAP3530"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_48.projectspec">
					<filter.ref ref.id="filter_676552114926200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_EVMOMAP3530_CortexA"/>
							<attribute key="device.variant" value="Cortex A.OMAP3530.EVMOMAP3530"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_49.projectspec">
					<filter.ref ref.id="filter_676552114926200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_EVMOMAP3530_CortexA"/>
							<attribute key="device.variant" value="Cortex A.OMAP3530.EVMOMAP3530"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_50.projectspec">
					<filter.ref ref.id="filter_676552114926200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_EVMOMAP3530_CortexA"/>
							<attribute key="device.variant" value="Cortex A.OMAP3530.EVMOMAP3530"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_51.projectspec">
					<filter.ref ref.id="filter_676552114926200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_EVMOMAP3530_CortexA"/>
							<attribute key="device.variant" value="Cortex A.OMAP3530.EVMOMAP3530"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_52.projectspec">
					<filter.ref ref.id="filter_676552114926200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_EVMOMAP3530_CortexA"/>
							<attribute key="device.variant" value="Cortex A.OMAP3530.EVMOMAP3530"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_53.projectspec">
					<filter.ref ref.id="filter_676552114926200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_EVMOMAP3530_CortexA"/>
							<attribute key="device.variant" value="Cortex A.OMAP3530.EVMOMAP3530"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_54.projectspec">
					<filter.ref ref.id="filter_676552114926200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_EVMOMAP3530_CortexA"/>
							<attribute key="device.variant" value="Cortex A.OMAP3530.EVMOMAP3530"/>
						</attributes>
					</type>
				</content>
				<content name="Semi-Hosting Example" desc="This example leverages Semi-Hosting for printf IO.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_60.projectspec">
					<filter.ref ref.id="filter_676552114926200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="semihost_EVMOMAP3530_CortexA"/>
							<attribute key="device.variant" value="Cortex A.OMAP3530.EVMOMAP3530"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_56.projectspec">
					<filter.ref ref.id="filter_676552114926200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_EVMOMAP3530_CortexA"/>
							<attribute key="device.variant" value="Cortex A.OMAP3530.EVMOMAP3530"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_57.projectspec">
					<filter.ref ref.id="filter_676552114926200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_EVMOMAP3530_CortexA"/>
							<attribute key="device.variant" value="Cortex A.OMAP3530.EVMOMAP3530"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_58.projectspec">
					<filter.ref ref.id="filter_676552114926200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_EVMOMAP3530_CortexA"/>
							<attribute key="device.variant" value="Cortex A.OMAP3530.EVMOMAP3530"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_55.projectspec">
					<filter.ref ref.id="filter_676552114926200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_EVMOMAP3530_CortexA"/>
							<attribute key="device.variant" value="Cortex A.OMAP3530.EVMOMAP3530"/>
						</attributes>
					</type>
				</content>
				</contents>
				</contents>
				<contents name="TI Target Examples" desc="SYS/BIOS Examples for TI targets." customPageType="genericNote">
				<filter id="filter_676552115243600">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>EVMOMAP3530</tag>
					<tag>OMAP3</tag>
					<tag>TI Target Examples</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\com_ti_rtsc_sysbios_example_30.projectspec">
					<filter.ref ref.id="filter_676552115243600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_EVMOMAP3530_CortexA"/>
							<attribute key="device.variant" value="Cortex A.OMAP3530.EVMOMAP3530"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\com_ti_rtsc_sysbios_example_31.projectspec">
					<filter.ref ref.id="filter_676552115243600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_EVMOMAP3530_CortexA"/>
							<attribute key="device.variant" value="Cortex A.OMAP3530.EVMOMAP3530"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_676552115278700">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>EVMOMAP3530</tag>
					<tag>OMAP3</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_44.projectspec">
					<filter.ref ref.id="filter_676552115278700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_EVMOMAP3530_CortexA"/>
							<attribute key="device.variant" value="Cortex A.OMAP3530.EVMOMAP3530"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_33.projectspec">
					<filter.ref ref.id="filter_676552115278700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_EVMOMAP3530_CortexA"/>
							<attribute key="device.variant" value="Cortex A.OMAP3530.EVMOMAP3530"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_34.projectspec">
					<filter.ref ref.id="filter_676552115278700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_EVMOMAP3530_CortexA"/>
							<attribute key="device.variant" value="Cortex A.OMAP3530.EVMOMAP3530"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_35.projectspec">
					<filter.ref ref.id="filter_676552115278700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_EVMOMAP3530_CortexA"/>
							<attribute key="device.variant" value="Cortex A.OMAP3530.EVMOMAP3530"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_36.projectspec">
					<filter.ref ref.id="filter_676552115278700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_EVMOMAP3530_CortexA"/>
							<attribute key="device.variant" value="Cortex A.OMAP3530.EVMOMAP3530"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_37.projectspec">
					<filter.ref ref.id="filter_676552115278700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_EVMOMAP3530_CortexA"/>
							<attribute key="device.variant" value="Cortex A.OMAP3530.EVMOMAP3530"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_38.projectspec">
					<filter.ref ref.id="filter_676552115278700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_EVMOMAP3530_CortexA"/>
							<attribute key="device.variant" value="Cortex A.OMAP3530.EVMOMAP3530"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_39.projectspec">
					<filter.ref ref.id="filter_676552115278700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_EVMOMAP3530_CortexA"/>
							<attribute key="device.variant" value="Cortex A.OMAP3530.EVMOMAP3530"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_41.projectspec">
					<filter.ref ref.id="filter_676552115278700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_EVMOMAP3530_CortexA"/>
							<attribute key="device.variant" value="Cortex A.OMAP3530.EVMOMAP3530"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_42.projectspec">
					<filter.ref ref.id="filter_676552115278700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_EVMOMAP3530_CortexA"/>
							<attribute key="device.variant" value="Cortex A.OMAP3530.EVMOMAP3530"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_43.projectspec">
					<filter.ref ref.id="filter_676552115278700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_EVMOMAP3530_CortexA"/>
							<attribute key="device.variant" value="Cortex A.OMAP3530.EVMOMAP3530"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_40.projectspec">
					<filter.ref ref.id="filter_676552115278700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_EVMOMAP3530_CortexA"/>
							<attribute key="device.variant" value="Cortex A.OMAP3530.EVMOMAP3530"/>
						</attributes>
					</type>
				</content>
				</contents>
				</contents>
			</contents>
			<contents name="OMAP3430" desc="OMAP3430" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_676552115517100">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>OMAP3430</tag>
					<tag>OMAP3</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_15.projectspec">
					<filter.ref ref.id="filter_676552115517100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_OMAP3430_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAP3430"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_16.projectspec">
					<filter.ref ref.id="filter_676552115517100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_OMAP3430_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAP3430"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_676552115614400">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>OMAP3430</tag>
					<tag>OMAP3</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_29.projectspec">
					<filter.ref ref.id="filter_676552115614400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_OMAP3430_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAP3430"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_18.projectspec">
					<filter.ref ref.id="filter_676552115614400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_OMAP3430_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAP3430"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_19.projectspec">
					<filter.ref ref.id="filter_676552115614400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_OMAP3430_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAP3430"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_20.projectspec">
					<filter.ref ref.id="filter_676552115614400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_OMAP3430_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAP3430"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_21.projectspec">
					<filter.ref ref.id="filter_676552115614400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_OMAP3430_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAP3430"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_22.projectspec">
					<filter.ref ref.id="filter_676552115614400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_OMAP3430_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAP3430"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_23.projectspec">
					<filter.ref ref.id="filter_676552115614400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_OMAP3430_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAP3430"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_24.projectspec">
					<filter.ref ref.id="filter_676552115614400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_OMAP3430_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAP3430"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_26.projectspec">
					<filter.ref ref.id="filter_676552115614400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_OMAP3430_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAP3430"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_27.projectspec">
					<filter.ref ref.id="filter_676552115614400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_OMAP3430_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAP3430"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_28.projectspec">
					<filter.ref ref.id="filter_676552115614400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_OMAP3430_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAP3430"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_25.projectspec">
					<filter.ref ref.id="filter_676552115614400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_OMAP3430_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAP3430"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="OMAP3430" desc="OMAP3430" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_676552117491900">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>OMAP3430</tag>
					<tag>OMAP3</tag>
					</search.tags>
				</filter>
				<contents name="GNU Target Examples" desc="SYS/BIOS Examples for GNU targets." customPageType="genericNote">
				<filter id="filter_676552118016100">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>OMAP3430</tag>
					<tag>OMAP3</tag>
					<tag>GNU Target Examples</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\com_ti_rtsc_sysbios_example_45.projectspec">
					<filter.ref ref.id="filter_676552118016100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_OMAP3430_CortexA"/>
							<attribute key="device.variant" value="Cortex A.OMAP3430"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\com_ti_rtsc_sysbios_example_46.projectspec">
					<filter.ref ref.id="filter_676552118016100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_OMAP3430_CortexA"/>
							<attribute key="device.variant" value="Cortex A.OMAP3430"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_676552118051300">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>OMAP3430</tag>
					<tag>OMAP3</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_59.projectspec">
					<filter.ref ref.id="filter_676552118051300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_OMAP3430_CortexA"/>
							<attribute key="device.variant" value="Cortex A.OMAP3430"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_48.projectspec">
					<filter.ref ref.id="filter_676552118051300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_OMAP3430_CortexA"/>
							<attribute key="device.variant" value="Cortex A.OMAP3430"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_49.projectspec">
					<filter.ref ref.id="filter_676552118051300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_OMAP3430_CortexA"/>
							<attribute key="device.variant" value="Cortex A.OMAP3430"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_50.projectspec">
					<filter.ref ref.id="filter_676552118051300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_OMAP3430_CortexA"/>
							<attribute key="device.variant" value="Cortex A.OMAP3430"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_51.projectspec">
					<filter.ref ref.id="filter_676552118051300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_OMAP3430_CortexA"/>
							<attribute key="device.variant" value="Cortex A.OMAP3430"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_52.projectspec">
					<filter.ref ref.id="filter_676552118051300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_OMAP3430_CortexA"/>
							<attribute key="device.variant" value="Cortex A.OMAP3430"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_53.projectspec">
					<filter.ref ref.id="filter_676552118051300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_OMAP3430_CortexA"/>
							<attribute key="device.variant" value="Cortex A.OMAP3430"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_54.projectspec">
					<filter.ref ref.id="filter_676552118051300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_OMAP3430_CortexA"/>
							<attribute key="device.variant" value="Cortex A.OMAP3430"/>
						</attributes>
					</type>
				</content>
				<content name="Semi-Hosting Example" desc="This example leverages Semi-Hosting for printf IO.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_60.projectspec">
					<filter.ref ref.id="filter_676552118051300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="semihost_OMAP3430_CortexA"/>
							<attribute key="device.variant" value="Cortex A.OMAP3430"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_56.projectspec">
					<filter.ref ref.id="filter_676552118051300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_OMAP3430_CortexA"/>
							<attribute key="device.variant" value="Cortex A.OMAP3430"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_57.projectspec">
					<filter.ref ref.id="filter_676552118051300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_OMAP3430_CortexA"/>
							<attribute key="device.variant" value="Cortex A.OMAP3430"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_58.projectspec">
					<filter.ref ref.id="filter_676552118051300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_OMAP3430_CortexA"/>
							<attribute key="device.variant" value="Cortex A.OMAP3430"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_55.projectspec">
					<filter.ref ref.id="filter_676552118051300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_OMAP3430_CortexA"/>
							<attribute key="device.variant" value="Cortex A.OMAP3430"/>
						</attributes>
					</type>
				</content>
				</contents>
				</contents>
				<contents name="TI Target Examples" desc="SYS/BIOS Examples for TI targets." customPageType="genericNote">
				<filter id="filter_676552118329600">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>OMAP3430</tag>
					<tag>OMAP3</tag>
					<tag>TI Target Examples</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\com_ti_rtsc_sysbios_example_30.projectspec">
					<filter.ref ref.id="filter_676552118329600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_OMAP3430_CortexA"/>
							<attribute key="device.variant" value="Cortex A.OMAP3430"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\com_ti_rtsc_sysbios_example_31.projectspec">
					<filter.ref ref.id="filter_676552118329600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_OMAP3430_CortexA"/>
							<attribute key="device.variant" value="Cortex A.OMAP3430"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_676552118358600">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>OMAP3430</tag>
					<tag>OMAP3</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_44.projectspec">
					<filter.ref ref.id="filter_676552118358600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_OMAP3430_CortexA"/>
							<attribute key="device.variant" value="Cortex A.OMAP3430"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_33.projectspec">
					<filter.ref ref.id="filter_676552118358600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_OMAP3430_CortexA"/>
							<attribute key="device.variant" value="Cortex A.OMAP3430"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_34.projectspec">
					<filter.ref ref.id="filter_676552118358600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_OMAP3430_CortexA"/>
							<attribute key="device.variant" value="Cortex A.OMAP3430"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_35.projectspec">
					<filter.ref ref.id="filter_676552118358600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_OMAP3430_CortexA"/>
							<attribute key="device.variant" value="Cortex A.OMAP3430"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_36.projectspec">
					<filter.ref ref.id="filter_676552118358600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_OMAP3430_CortexA"/>
							<attribute key="device.variant" value="Cortex A.OMAP3430"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_37.projectspec">
					<filter.ref ref.id="filter_676552118358600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_OMAP3430_CortexA"/>
							<attribute key="device.variant" value="Cortex A.OMAP3430"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_38.projectspec">
					<filter.ref ref.id="filter_676552118358600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_OMAP3430_CortexA"/>
							<attribute key="device.variant" value="Cortex A.OMAP3430"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_39.projectspec">
					<filter.ref ref.id="filter_676552118358600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_OMAP3430_CortexA"/>
							<attribute key="device.variant" value="Cortex A.OMAP3430"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_41.projectspec">
					<filter.ref ref.id="filter_676552118358600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_OMAP3430_CortexA"/>
							<attribute key="device.variant" value="Cortex A.OMAP3430"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_42.projectspec">
					<filter.ref ref.id="filter_676552118358600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_OMAP3430_CortexA"/>
							<attribute key="device.variant" value="Cortex A.OMAP3430"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_43.projectspec">
					<filter.ref ref.id="filter_676552118358600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_OMAP3430_CortexA"/>
							<attribute key="device.variant" value="Cortex A.OMAP3430"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_40.projectspec">
					<filter.ref ref.id="filter_676552118358600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_OMAP3430_CortexA"/>
							<attribute key="device.variant" value="Cortex A.OMAP3430"/>
						</attributes>
					</type>
				</content>
				</contents>
				</contents>
			</contents>
			<contents name="OMAP3525" desc="OMAP3525" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_676552118547900">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>OMAP3525</tag>
					<tag>OMAP3</tag>
					</search.tags>
				</filter>
				<contents name="GNU Target Examples" desc="SYS/BIOS Examples for GNU targets." customPageType="genericNote">
				<filter id="filter_676552119003100">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>OMAP3525</tag>
					<tag>OMAP3</tag>
					<tag>GNU Target Examples</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\com_ti_rtsc_sysbios_example_45.projectspec">
					<filter.ref ref.id="filter_676552119003100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_OMAP3525_CortexA"/>
							<attribute key="device.variant" value="Cortex A.OMAP3525"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\com_ti_rtsc_sysbios_example_46.projectspec">
					<filter.ref ref.id="filter_676552119003100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_OMAP3525_CortexA"/>
							<attribute key="device.variant" value="Cortex A.OMAP3525"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_676552119033000">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>OMAP3525</tag>
					<tag>OMAP3</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_59.projectspec">
					<filter.ref ref.id="filter_676552119033000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_OMAP3525_CortexA"/>
							<attribute key="device.variant" value="Cortex A.OMAP3525"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_48.projectspec">
					<filter.ref ref.id="filter_676552119033000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_OMAP3525_CortexA"/>
							<attribute key="device.variant" value="Cortex A.OMAP3525"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_49.projectspec">
					<filter.ref ref.id="filter_676552119033000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_OMAP3525_CortexA"/>
							<attribute key="device.variant" value="Cortex A.OMAP3525"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_50.projectspec">
					<filter.ref ref.id="filter_676552119033000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_OMAP3525_CortexA"/>
							<attribute key="device.variant" value="Cortex A.OMAP3525"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_51.projectspec">
					<filter.ref ref.id="filter_676552119033000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_OMAP3525_CortexA"/>
							<attribute key="device.variant" value="Cortex A.OMAP3525"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_52.projectspec">
					<filter.ref ref.id="filter_676552119033000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_OMAP3525_CortexA"/>
							<attribute key="device.variant" value="Cortex A.OMAP3525"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_53.projectspec">
					<filter.ref ref.id="filter_676552119033000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_OMAP3525_CortexA"/>
							<attribute key="device.variant" value="Cortex A.OMAP3525"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_54.projectspec">
					<filter.ref ref.id="filter_676552119033000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_OMAP3525_CortexA"/>
							<attribute key="device.variant" value="Cortex A.OMAP3525"/>
						</attributes>
					</type>
				</content>
				<content name="Semi-Hosting Example" desc="This example leverages Semi-Hosting for printf IO.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_60.projectspec">
					<filter.ref ref.id="filter_676552119033000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="semihost_OMAP3525_CortexA"/>
							<attribute key="device.variant" value="Cortex A.OMAP3525"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_56.projectspec">
					<filter.ref ref.id="filter_676552119033000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_OMAP3525_CortexA"/>
							<attribute key="device.variant" value="Cortex A.OMAP3525"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_57.projectspec">
					<filter.ref ref.id="filter_676552119033000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_OMAP3525_CortexA"/>
							<attribute key="device.variant" value="Cortex A.OMAP3525"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_58.projectspec">
					<filter.ref ref.id="filter_676552119033000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_OMAP3525_CortexA"/>
							<attribute key="device.variant" value="Cortex A.OMAP3525"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_55.projectspec">
					<filter.ref ref.id="filter_676552119033000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_OMAP3525_CortexA"/>
							<attribute key="device.variant" value="Cortex A.OMAP3525"/>
						</attributes>
					</type>
				</content>
				</contents>
				</contents>
				<contents name="TI Target Examples" desc="SYS/BIOS Examples for TI targets." customPageType="genericNote">
				<filter id="filter_676552119304800">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>OMAP3525</tag>
					<tag>OMAP3</tag>
					<tag>TI Target Examples</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\com_ti_rtsc_sysbios_example_30.projectspec">
					<filter.ref ref.id="filter_676552119304800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_OMAP3525_CortexA"/>
							<attribute key="device.variant" value="Cortex A.OMAP3525"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\com_ti_rtsc_sysbios_example_31.projectspec">
					<filter.ref ref.id="filter_676552119304800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_OMAP3525_CortexA"/>
							<attribute key="device.variant" value="Cortex A.OMAP3525"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_676552119333000">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>OMAP3525</tag>
					<tag>OMAP3</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_44.projectspec">
					<filter.ref ref.id="filter_676552119333000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_OMAP3525_CortexA"/>
							<attribute key="device.variant" value="Cortex A.OMAP3525"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_33.projectspec">
					<filter.ref ref.id="filter_676552119333000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_OMAP3525_CortexA"/>
							<attribute key="device.variant" value="Cortex A.OMAP3525"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_34.projectspec">
					<filter.ref ref.id="filter_676552119333000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_OMAP3525_CortexA"/>
							<attribute key="device.variant" value="Cortex A.OMAP3525"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_35.projectspec">
					<filter.ref ref.id="filter_676552119333000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_OMAP3525_CortexA"/>
							<attribute key="device.variant" value="Cortex A.OMAP3525"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_36.projectspec">
					<filter.ref ref.id="filter_676552119333000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_OMAP3525_CortexA"/>
							<attribute key="device.variant" value="Cortex A.OMAP3525"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_37.projectspec">
					<filter.ref ref.id="filter_676552119333000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_OMAP3525_CortexA"/>
							<attribute key="device.variant" value="Cortex A.OMAP3525"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_38.projectspec">
					<filter.ref ref.id="filter_676552119333000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_OMAP3525_CortexA"/>
							<attribute key="device.variant" value="Cortex A.OMAP3525"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_39.projectspec">
					<filter.ref ref.id="filter_676552119333000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_OMAP3525_CortexA"/>
							<attribute key="device.variant" value="Cortex A.OMAP3525"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_41.projectspec">
					<filter.ref ref.id="filter_676552119333000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_OMAP3525_CortexA"/>
							<attribute key="device.variant" value="Cortex A.OMAP3525"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_42.projectspec">
					<filter.ref ref.id="filter_676552119333000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_OMAP3525_CortexA"/>
							<attribute key="device.variant" value="Cortex A.OMAP3525"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_43.projectspec">
					<filter.ref ref.id="filter_676552119333000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_OMAP3525_CortexA"/>
							<attribute key="device.variant" value="Cortex A.OMAP3525"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_40.projectspec">
					<filter.ref ref.id="filter_676552119333000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_OMAP3525_CortexA"/>
							<attribute key="device.variant" value="Cortex A.OMAP3525"/>
						</attributes>
					</type>
				</content>
				</contents>
				</contents>
			</contents>
			<contents name="OMAP3530" desc="OMAP3530" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_676552119545600">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>OMAP3530</tag>
					<tag>OMAP3</tag>
					</search.tags>
				</filter>
				<contents name="GNU Target Examples" desc="SYS/BIOS Examples for GNU targets." customPageType="genericNote">
				<filter id="filter_676552120009600">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>OMAP3530</tag>
					<tag>OMAP3</tag>
					<tag>GNU Target Examples</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\com_ti_rtsc_sysbios_example_45.projectspec">
					<filter.ref ref.id="filter_676552120009600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_OMAP3530_CortexA"/>
							<attribute key="device.variant" value="Cortex A.OMAP3530"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\com_ti_rtsc_sysbios_example_46.projectspec">
					<filter.ref ref.id="filter_676552120009600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_OMAP3530_CortexA"/>
							<attribute key="device.variant" value="Cortex A.OMAP3530"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_676552120040300">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>OMAP3530</tag>
					<tag>OMAP3</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_59.projectspec">
					<filter.ref ref.id="filter_676552120040300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_OMAP3530_CortexA"/>
							<attribute key="device.variant" value="Cortex A.OMAP3530"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_48.projectspec">
					<filter.ref ref.id="filter_676552120040300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_OMAP3530_CortexA"/>
							<attribute key="device.variant" value="Cortex A.OMAP3530"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_49.projectspec">
					<filter.ref ref.id="filter_676552120040300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_OMAP3530_CortexA"/>
							<attribute key="device.variant" value="Cortex A.OMAP3530"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_50.projectspec">
					<filter.ref ref.id="filter_676552120040300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_OMAP3530_CortexA"/>
							<attribute key="device.variant" value="Cortex A.OMAP3530"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_51.projectspec">
					<filter.ref ref.id="filter_676552120040300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_OMAP3530_CortexA"/>
							<attribute key="device.variant" value="Cortex A.OMAP3530"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_52.projectspec">
					<filter.ref ref.id="filter_676552120040300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_OMAP3530_CortexA"/>
							<attribute key="device.variant" value="Cortex A.OMAP3530"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_53.projectspec">
					<filter.ref ref.id="filter_676552120040300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_OMAP3530_CortexA"/>
							<attribute key="device.variant" value="Cortex A.OMAP3530"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_54.projectspec">
					<filter.ref ref.id="filter_676552120040300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_OMAP3530_CortexA"/>
							<attribute key="device.variant" value="Cortex A.OMAP3530"/>
						</attributes>
					</type>
				</content>
				<content name="Semi-Hosting Example" desc="This example leverages Semi-Hosting for printf IO.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_60.projectspec">
					<filter.ref ref.id="filter_676552120040300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="semihost_OMAP3530_CortexA"/>
							<attribute key="device.variant" value="Cortex A.OMAP3530"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_56.projectspec">
					<filter.ref ref.id="filter_676552120040300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_OMAP3530_CortexA"/>
							<attribute key="device.variant" value="Cortex A.OMAP3530"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_57.projectspec">
					<filter.ref ref.id="filter_676552120040300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_OMAP3530_CortexA"/>
							<attribute key="device.variant" value="Cortex A.OMAP3530"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_58.projectspec">
					<filter.ref ref.id="filter_676552120040300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_OMAP3530_CortexA"/>
							<attribute key="device.variant" value="Cortex A.OMAP3530"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_55.projectspec">
					<filter.ref ref.id="filter_676552120040300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_OMAP3530_CortexA"/>
							<attribute key="device.variant" value="Cortex A.OMAP3530"/>
						</attributes>
					</type>
				</content>
				</contents>
				</contents>
				<contents name="TI Target Examples" desc="SYS/BIOS Examples for TI targets." customPageType="genericNote">
				<filter id="filter_676552120325600">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>OMAP3530</tag>
					<tag>OMAP3</tag>
					<tag>TI Target Examples</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\com_ti_rtsc_sysbios_example_30.projectspec">
					<filter.ref ref.id="filter_676552120325600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_OMAP3530_CortexA"/>
							<attribute key="device.variant" value="Cortex A.OMAP3530"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\com_ti_rtsc_sysbios_example_31.projectspec">
					<filter.ref ref.id="filter_676552120325600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_OMAP3530_CortexA"/>
							<attribute key="device.variant" value="Cortex A.OMAP3530"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_676552120353800">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>OMAP3530</tag>
					<tag>OMAP3</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_44.projectspec">
					<filter.ref ref.id="filter_676552120353800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_OMAP3530_CortexA"/>
							<attribute key="device.variant" value="Cortex A.OMAP3530"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_33.projectspec">
					<filter.ref ref.id="filter_676552120353800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_OMAP3530_CortexA"/>
							<attribute key="device.variant" value="Cortex A.OMAP3530"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_34.projectspec">
					<filter.ref ref.id="filter_676552120353800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_OMAP3530_CortexA"/>
							<attribute key="device.variant" value="Cortex A.OMAP3530"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_35.projectspec">
					<filter.ref ref.id="filter_676552120353800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_OMAP3530_CortexA"/>
							<attribute key="device.variant" value="Cortex A.OMAP3530"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_36.projectspec">
					<filter.ref ref.id="filter_676552120353800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_OMAP3530_CortexA"/>
							<attribute key="device.variant" value="Cortex A.OMAP3530"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_37.projectspec">
					<filter.ref ref.id="filter_676552120353800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_OMAP3530_CortexA"/>
							<attribute key="device.variant" value="Cortex A.OMAP3530"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_38.projectspec">
					<filter.ref ref.id="filter_676552120353800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_OMAP3530_CortexA"/>
							<attribute key="device.variant" value="Cortex A.OMAP3530"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_39.projectspec">
					<filter.ref ref.id="filter_676552120353800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_OMAP3530_CortexA"/>
							<attribute key="device.variant" value="Cortex A.OMAP3530"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_41.projectspec">
					<filter.ref ref.id="filter_676552120353800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_OMAP3530_CortexA"/>
							<attribute key="device.variant" value="Cortex A.OMAP3530"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_42.projectspec">
					<filter.ref ref.id="filter_676552120353800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_OMAP3530_CortexA"/>
							<attribute key="device.variant" value="Cortex A.OMAP3530"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_43.projectspec">
					<filter.ref ref.id="filter_676552120353800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_OMAP3530_CortexA"/>
							<attribute key="device.variant" value="Cortex A.OMAP3530"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_40.projectspec">
					<filter.ref ref.id="filter_676552120353800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_OMAP3530_CortexA"/>
							<attribute key="device.variant" value="Cortex A.OMAP3530"/>
						</attributes>
					</type>
				</content>
				</contents>
				</contents>
			</contents>
			<contents name="OMAP3630" desc="OMAP3630" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_676552120538800">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>OMAP3630</tag>
					<tag>OMAP3</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_15.projectspec">
					<filter.ref ref.id="filter_676552120538800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_OMAP3630_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAP3630"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_16.projectspec">
					<filter.ref ref.id="filter_676552120538800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_OMAP3630_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAP3630"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_676552120627900">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>OMAP3630</tag>
					<tag>OMAP3</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_29.projectspec">
					<filter.ref ref.id="filter_676552120627900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_OMAP3630_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAP3630"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_18.projectspec">
					<filter.ref ref.id="filter_676552120627900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_OMAP3630_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAP3630"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_19.projectspec">
					<filter.ref ref.id="filter_676552120627900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_OMAP3630_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAP3630"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_20.projectspec">
					<filter.ref ref.id="filter_676552120627900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_OMAP3630_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAP3630"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_21.projectspec">
					<filter.ref ref.id="filter_676552120627900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_OMAP3630_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAP3630"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_22.projectspec">
					<filter.ref ref.id="filter_676552120627900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_OMAP3630_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAP3630"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_23.projectspec">
					<filter.ref ref.id="filter_676552120627900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_OMAP3630_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAP3630"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_24.projectspec">
					<filter.ref ref.id="filter_676552120627900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_OMAP3630_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAP3630"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_26.projectspec">
					<filter.ref ref.id="filter_676552120627900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_OMAP3630_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAP3630"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_27.projectspec">
					<filter.ref ref.id="filter_676552120627900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_OMAP3630_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAP3630"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_28.projectspec">
					<filter.ref ref.id="filter_676552120627900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_OMAP3630_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAP3630"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_25.projectspec">
					<filter.ref ref.id="filter_676552120627900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_OMAP3630_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAP3630"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="OMAP3630" desc="OMAP3630" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_676552121336400">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>OMAP3630</tag>
					<tag>OMAP3</tag>
					</search.tags>
				</filter>
				<contents name="GNU Target Examples" desc="SYS/BIOS Examples for GNU targets." customPageType="genericNote">
				<filter id="filter_676552122634000">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>OMAP3630</tag>
					<tag>OMAP3</tag>
					<tag>GNU Target Examples</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\com_ti_rtsc_sysbios_example_45.projectspec">
					<filter.ref ref.id="filter_676552122634000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_OMAP3630_CortexA"/>
							<attribute key="device.variant" value="Cortex A.OMAP3630"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\com_ti_rtsc_sysbios_example_46.projectspec">
					<filter.ref ref.id="filter_676552122634000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_OMAP3630_CortexA"/>
							<attribute key="device.variant" value="Cortex A.OMAP3630"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_676552122695100">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>OMAP3630</tag>
					<tag>OMAP3</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_59.projectspec">
					<filter.ref ref.id="filter_676552122695100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_OMAP3630_CortexA"/>
							<attribute key="device.variant" value="Cortex A.OMAP3630"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_48.projectspec">
					<filter.ref ref.id="filter_676552122695100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_OMAP3630_CortexA"/>
							<attribute key="device.variant" value="Cortex A.OMAP3630"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_49.projectspec">
					<filter.ref ref.id="filter_676552122695100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_OMAP3630_CortexA"/>
							<attribute key="device.variant" value="Cortex A.OMAP3630"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_50.projectspec">
					<filter.ref ref.id="filter_676552122695100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_OMAP3630_CortexA"/>
							<attribute key="device.variant" value="Cortex A.OMAP3630"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_51.projectspec">
					<filter.ref ref.id="filter_676552122695100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_OMAP3630_CortexA"/>
							<attribute key="device.variant" value="Cortex A.OMAP3630"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_52.projectspec">
					<filter.ref ref.id="filter_676552122695100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_OMAP3630_CortexA"/>
							<attribute key="device.variant" value="Cortex A.OMAP3630"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_53.projectspec">
					<filter.ref ref.id="filter_676552122695100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_OMAP3630_CortexA"/>
							<attribute key="device.variant" value="Cortex A.OMAP3630"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_54.projectspec">
					<filter.ref ref.id="filter_676552122695100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_OMAP3630_CortexA"/>
							<attribute key="device.variant" value="Cortex A.OMAP3630"/>
						</attributes>
					</type>
				</content>
				<content name="Semi-Hosting Example" desc="This example leverages Semi-Hosting for printf IO.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_60.projectspec">
					<filter.ref ref.id="filter_676552122695100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="semihost_OMAP3630_CortexA"/>
							<attribute key="device.variant" value="Cortex A.OMAP3630"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_56.projectspec">
					<filter.ref ref.id="filter_676552122695100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_OMAP3630_CortexA"/>
							<attribute key="device.variant" value="Cortex A.OMAP3630"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_57.projectspec">
					<filter.ref ref.id="filter_676552122695100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_OMAP3630_CortexA"/>
							<attribute key="device.variant" value="Cortex A.OMAP3630"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_58.projectspec">
					<filter.ref ref.id="filter_676552122695100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_OMAP3630_CortexA"/>
							<attribute key="device.variant" value="Cortex A.OMAP3630"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_55.projectspec">
					<filter.ref ref.id="filter_676552122695100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_OMAP3630_CortexA"/>
							<attribute key="device.variant" value="Cortex A.OMAP3630"/>
						</attributes>
					</type>
				</content>
				</contents>
				</contents>
				<contents name="TI Target Examples" desc="SYS/BIOS Examples for TI targets." customPageType="genericNote">
				<filter id="filter_676552123048300">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>OMAP3630</tag>
					<tag>OMAP3</tag>
					<tag>TI Target Examples</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\com_ti_rtsc_sysbios_example_30.projectspec">
					<filter.ref ref.id="filter_676552123048300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_OMAP3630_CortexA"/>
							<attribute key="device.variant" value="Cortex A.OMAP3630"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\com_ti_rtsc_sysbios_example_31.projectspec">
					<filter.ref ref.id="filter_676552123048300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_OMAP3630_CortexA"/>
							<attribute key="device.variant" value="Cortex A.OMAP3630"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_676552123083700">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>OMAP3630</tag>
					<tag>OMAP3</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_44.projectspec">
					<filter.ref ref.id="filter_676552123083700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_OMAP3630_CortexA"/>
							<attribute key="device.variant" value="Cortex A.OMAP3630"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_33.projectspec">
					<filter.ref ref.id="filter_676552123083700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_OMAP3630_CortexA"/>
							<attribute key="device.variant" value="Cortex A.OMAP3630"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_34.projectspec">
					<filter.ref ref.id="filter_676552123083700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_OMAP3630_CortexA"/>
							<attribute key="device.variant" value="Cortex A.OMAP3630"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_35.projectspec">
					<filter.ref ref.id="filter_676552123083700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_OMAP3630_CortexA"/>
							<attribute key="device.variant" value="Cortex A.OMAP3630"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_36.projectspec">
					<filter.ref ref.id="filter_676552123083700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_OMAP3630_CortexA"/>
							<attribute key="device.variant" value="Cortex A.OMAP3630"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_37.projectspec">
					<filter.ref ref.id="filter_676552123083700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_OMAP3630_CortexA"/>
							<attribute key="device.variant" value="Cortex A.OMAP3630"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_38.projectspec">
					<filter.ref ref.id="filter_676552123083700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_OMAP3630_CortexA"/>
							<attribute key="device.variant" value="Cortex A.OMAP3630"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_39.projectspec">
					<filter.ref ref.id="filter_676552123083700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_OMAP3630_CortexA"/>
							<attribute key="device.variant" value="Cortex A.OMAP3630"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_41.projectspec">
					<filter.ref ref.id="filter_676552123083700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_OMAP3630_CortexA"/>
							<attribute key="device.variant" value="Cortex A.OMAP3630"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_42.projectspec">
					<filter.ref ref.id="filter_676552123083700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_OMAP3630_CortexA"/>
							<attribute key="device.variant" value="Cortex A.OMAP3630"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_43.projectspec">
					<filter.ref ref.id="filter_676552123083700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_OMAP3630_CortexA"/>
							<attribute key="device.variant" value="Cortex A.OMAP3630"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_40.projectspec">
					<filter.ref ref.id="filter_676552123083700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_OMAP3630_CortexA"/>
							<attribute key="device.variant" value="Cortex A.OMAP3630"/>
						</attributes>
					</type>
				</content>
				</contents>
				</contents>
			</contents>
		</contents>
		<contents name="OMAP4" desc="OMAP4" icon="plugin://icons/obj16/devices.png">
			<contents name="Blaze_4430" desc="Blaze_4430" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_676552123619600">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>Blaze_4430</tag>
					<tag>OMAP4</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_15.projectspec">
					<filter.ref ref.id="filter_676552123619600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_Blaze_4430_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAP4430.Blaze_4430"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_16.projectspec">
					<filter.ref ref.id="filter_676552123619600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_Blaze_4430_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAP4430.Blaze_4430"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_676552123878200">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>Blaze_4430</tag>
					<tag>OMAP4</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_29.projectspec">
					<filter.ref ref.id="filter_676552123878200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_Blaze_4430_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAP4430.Blaze_4430"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_18.projectspec">
					<filter.ref ref.id="filter_676552123878200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_Blaze_4430_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAP4430.Blaze_4430"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_19.projectspec">
					<filter.ref ref.id="filter_676552123878200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_Blaze_4430_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAP4430.Blaze_4430"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_20.projectspec">
					<filter.ref ref.id="filter_676552123878200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_Blaze_4430_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAP4430.Blaze_4430"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_21.projectspec">
					<filter.ref ref.id="filter_676552123878200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_Blaze_4430_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAP4430.Blaze_4430"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_22.projectspec">
					<filter.ref ref.id="filter_676552123878200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_Blaze_4430_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAP4430.Blaze_4430"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_23.projectspec">
					<filter.ref ref.id="filter_676552123878200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_Blaze_4430_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAP4430.Blaze_4430"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_24.projectspec">
					<filter.ref ref.id="filter_676552123878200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_Blaze_4430_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAP4430.Blaze_4430"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_26.projectspec">
					<filter.ref ref.id="filter_676552123878200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_Blaze_4430_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAP4430.Blaze_4430"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_27.projectspec">
					<filter.ref ref.id="filter_676552123878200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_Blaze_4430_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAP4430.Blaze_4430"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_28.projectspec">
					<filter.ref ref.id="filter_676552123878200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_Blaze_4430_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAP4430.Blaze_4430"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_25.projectspec">
					<filter.ref ref.id="filter_676552123878200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_Blaze_4430_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAP4430.Blaze_4430"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="Blaze_4430" desc="Blaze_4430" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_676552124723200">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>Blaze_4430</tag>
					<tag>OMAP4</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_15.projectspec">
					<filter.ref ref.id="filter_676552124723200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_Blaze_4430_CortexM"/>
							<attribute key="device.variant" value="Cortex M.OMAP4430.Blaze_4430"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_16.projectspec">
					<filter.ref ref.id="filter_676552124723200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_Blaze_4430_CortexM"/>
							<attribute key="device.variant" value="Cortex M.OMAP4430.Blaze_4430"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_676552124817100">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>Blaze_4430</tag>
					<tag>OMAP4</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_29.projectspec">
					<filter.ref ref.id="filter_676552124817100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_Blaze_4430_CortexM"/>
							<attribute key="device.variant" value="Cortex M.OMAP4430.Blaze_4430"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_18.projectspec">
					<filter.ref ref.id="filter_676552124817100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_Blaze_4430_CortexM"/>
							<attribute key="device.variant" value="Cortex M.OMAP4430.Blaze_4430"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_19.projectspec">
					<filter.ref ref.id="filter_676552124817100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_Blaze_4430_CortexM"/>
							<attribute key="device.variant" value="Cortex M.OMAP4430.Blaze_4430"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_20.projectspec">
					<filter.ref ref.id="filter_676552124817100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_Blaze_4430_CortexM"/>
							<attribute key="device.variant" value="Cortex M.OMAP4430.Blaze_4430"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_21.projectspec">
					<filter.ref ref.id="filter_676552124817100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_Blaze_4430_CortexM"/>
							<attribute key="device.variant" value="Cortex M.OMAP4430.Blaze_4430"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_22.projectspec">
					<filter.ref ref.id="filter_676552124817100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_Blaze_4430_CortexM"/>
							<attribute key="device.variant" value="Cortex M.OMAP4430.Blaze_4430"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_23.projectspec">
					<filter.ref ref.id="filter_676552124817100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_Blaze_4430_CortexM"/>
							<attribute key="device.variant" value="Cortex M.OMAP4430.Blaze_4430"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_24.projectspec">
					<filter.ref ref.id="filter_676552124817100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_Blaze_4430_CortexM"/>
							<attribute key="device.variant" value="Cortex M.OMAP4430.Blaze_4430"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_26.projectspec">
					<filter.ref ref.id="filter_676552124817100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_Blaze_4430_CortexM"/>
							<attribute key="device.variant" value="Cortex M.OMAP4430.Blaze_4430"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_27.projectspec">
					<filter.ref ref.id="filter_676552124817100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_Blaze_4430_CortexM"/>
							<attribute key="device.variant" value="Cortex M.OMAP4430.Blaze_4430"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_28.projectspec">
					<filter.ref ref.id="filter_676552124817100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_Blaze_4430_CortexM"/>
							<attribute key="device.variant" value="Cortex M.OMAP4430.Blaze_4430"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_25.projectspec">
					<filter.ref ref.id="filter_676552124817100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_Blaze_4430_CortexM"/>
							<attribute key="device.variant" value="Cortex M.OMAP4430.Blaze_4430"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="Blaze_4460" desc="Blaze_4460" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_676552128524700">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>Blaze_4460</tag>
					<tag>OMAP4</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_15.projectspec">
					<filter.ref ref.id="filter_676552128524700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_Blaze_4460_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAP4460.Blaze_4460"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_16.projectspec">
					<filter.ref ref.id="filter_676552128524700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_Blaze_4460_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAP4460.Blaze_4460"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_676552128621500">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>Blaze_4460</tag>
					<tag>OMAP4</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_29.projectspec">
					<filter.ref ref.id="filter_676552128621500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_Blaze_4460_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAP4460.Blaze_4460"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_18.projectspec">
					<filter.ref ref.id="filter_676552128621500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_Blaze_4460_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAP4460.Blaze_4460"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_19.projectspec">
					<filter.ref ref.id="filter_676552128621500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_Blaze_4460_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAP4460.Blaze_4460"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_20.projectspec">
					<filter.ref ref.id="filter_676552128621500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_Blaze_4460_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAP4460.Blaze_4460"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_21.projectspec">
					<filter.ref ref.id="filter_676552128621500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_Blaze_4460_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAP4460.Blaze_4460"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_22.projectspec">
					<filter.ref ref.id="filter_676552128621500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_Blaze_4460_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAP4460.Blaze_4460"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_23.projectspec">
					<filter.ref ref.id="filter_676552128621500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_Blaze_4460_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAP4460.Blaze_4460"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_24.projectspec">
					<filter.ref ref.id="filter_676552128621500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_Blaze_4460_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAP4460.Blaze_4460"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_26.projectspec">
					<filter.ref ref.id="filter_676552128621500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_Blaze_4460_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAP4460.Blaze_4460"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_27.projectspec">
					<filter.ref ref.id="filter_676552128621500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_Blaze_4460_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAP4460.Blaze_4460"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_28.projectspec">
					<filter.ref ref.id="filter_676552128621500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_Blaze_4460_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAP4460.Blaze_4460"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_25.projectspec">
					<filter.ref ref.id="filter_676552128621500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_Blaze_4460_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAP4460.Blaze_4460"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="Blaze_4460" desc="Blaze_4460" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_676552129396600">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>Blaze_4460</tag>
					<tag>OMAP4</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_15.projectspec">
					<filter.ref ref.id="filter_676552129396600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_Blaze_4460_CortexM"/>
							<attribute key="device.variant" value="Cortex M.OMAP4460.Blaze_4460"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_16.projectspec">
					<filter.ref ref.id="filter_676552129396600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_Blaze_4460_CortexM"/>
							<attribute key="device.variant" value="Cortex M.OMAP4460.Blaze_4460"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_676552129488400">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>Blaze_4460</tag>
					<tag>OMAP4</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_29.projectspec">
					<filter.ref ref.id="filter_676552129488400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_Blaze_4460_CortexM"/>
							<attribute key="device.variant" value="Cortex M.OMAP4460.Blaze_4460"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_18.projectspec">
					<filter.ref ref.id="filter_676552129488400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_Blaze_4460_CortexM"/>
							<attribute key="device.variant" value="Cortex M.OMAP4460.Blaze_4460"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_19.projectspec">
					<filter.ref ref.id="filter_676552129488400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_Blaze_4460_CortexM"/>
							<attribute key="device.variant" value="Cortex M.OMAP4460.Blaze_4460"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_20.projectspec">
					<filter.ref ref.id="filter_676552129488400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_Blaze_4460_CortexM"/>
							<attribute key="device.variant" value="Cortex M.OMAP4460.Blaze_4460"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_21.projectspec">
					<filter.ref ref.id="filter_676552129488400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_Blaze_4460_CortexM"/>
							<attribute key="device.variant" value="Cortex M.OMAP4460.Blaze_4460"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_22.projectspec">
					<filter.ref ref.id="filter_676552129488400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_Blaze_4460_CortexM"/>
							<attribute key="device.variant" value="Cortex M.OMAP4460.Blaze_4460"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_23.projectspec">
					<filter.ref ref.id="filter_676552129488400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_Blaze_4460_CortexM"/>
							<attribute key="device.variant" value="Cortex M.OMAP4460.Blaze_4460"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_24.projectspec">
					<filter.ref ref.id="filter_676552129488400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_Blaze_4460_CortexM"/>
							<attribute key="device.variant" value="Cortex M.OMAP4460.Blaze_4460"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_26.projectspec">
					<filter.ref ref.id="filter_676552129488400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_Blaze_4460_CortexM"/>
							<attribute key="device.variant" value="Cortex M.OMAP4460.Blaze_4460"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_27.projectspec">
					<filter.ref ref.id="filter_676552129488400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_Blaze_4460_CortexM"/>
							<attribute key="device.variant" value="Cortex M.OMAP4460.Blaze_4460"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_28.projectspec">
					<filter.ref ref.id="filter_676552129488400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_Blaze_4460_CortexM"/>
							<attribute key="device.variant" value="Cortex M.OMAP4460.Blaze_4460"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_25.projectspec">
					<filter.ref ref.id="filter_676552129488400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_Blaze_4460_CortexM"/>
							<attribute key="device.variant" value="Cortex M.OMAP4460.Blaze_4460"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="OMAP4430" desc="OMAP4430" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_676552130281800">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>OMAP4430</tag>
					<tag>OMAP4</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_15.projectspec">
					<filter.ref ref.id="filter_676552130281800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_OMAP4430_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAP4430"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_16.projectspec">
					<filter.ref ref.id="filter_676552130281800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_OMAP4430_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAP4430"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_676552130367000">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>OMAP4430</tag>
					<tag>OMAP4</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_29.projectspec">
					<filter.ref ref.id="filter_676552130367000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_OMAP4430_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAP4430"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_18.projectspec">
					<filter.ref ref.id="filter_676552130367000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_OMAP4430_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAP4430"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_19.projectspec">
					<filter.ref ref.id="filter_676552130367000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_OMAP4430_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAP4430"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_20.projectspec">
					<filter.ref ref.id="filter_676552130367000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_OMAP4430_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAP4430"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_21.projectspec">
					<filter.ref ref.id="filter_676552130367000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_OMAP4430_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAP4430"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_22.projectspec">
					<filter.ref ref.id="filter_676552130367000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_OMAP4430_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAP4430"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_23.projectspec">
					<filter.ref ref.id="filter_676552130367000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_OMAP4430_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAP4430"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_24.projectspec">
					<filter.ref ref.id="filter_676552130367000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_OMAP4430_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAP4430"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_26.projectspec">
					<filter.ref ref.id="filter_676552130367000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_OMAP4430_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAP4430"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_27.projectspec">
					<filter.ref ref.id="filter_676552130367000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_OMAP4430_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAP4430"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_28.projectspec">
					<filter.ref ref.id="filter_676552130367000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_OMAP4430_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAP4430"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_25.projectspec">
					<filter.ref ref.id="filter_676552130367000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_OMAP4430_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAP4430"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="OMAP4430" desc="OMAP4430" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_676552131062400">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>OMAP4430</tag>
					<tag>OMAP4</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_15.projectspec">
					<filter.ref ref.id="filter_676552131062400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_OMAP4430_CortexM"/>
							<attribute key="device.variant" value="Cortex M.OMAP4430"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_16.projectspec">
					<filter.ref ref.id="filter_676552131062400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_OMAP4430_CortexM"/>
							<attribute key="device.variant" value="Cortex M.OMAP4430"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_676552131151100">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>OMAP4430</tag>
					<tag>OMAP4</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_29.projectspec">
					<filter.ref ref.id="filter_676552131151100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_OMAP4430_CortexM"/>
							<attribute key="device.variant" value="Cortex M.OMAP4430"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_18.projectspec">
					<filter.ref ref.id="filter_676552131151100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_OMAP4430_CortexM"/>
							<attribute key="device.variant" value="Cortex M.OMAP4430"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_19.projectspec">
					<filter.ref ref.id="filter_676552131151100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_OMAP4430_CortexM"/>
							<attribute key="device.variant" value="Cortex M.OMAP4430"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_20.projectspec">
					<filter.ref ref.id="filter_676552131151100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_OMAP4430_CortexM"/>
							<attribute key="device.variant" value="Cortex M.OMAP4430"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_21.projectspec">
					<filter.ref ref.id="filter_676552131151100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_OMAP4430_CortexM"/>
							<attribute key="device.variant" value="Cortex M.OMAP4430"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_22.projectspec">
					<filter.ref ref.id="filter_676552131151100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_OMAP4430_CortexM"/>
							<attribute key="device.variant" value="Cortex M.OMAP4430"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_23.projectspec">
					<filter.ref ref.id="filter_676552131151100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_OMAP4430_CortexM"/>
							<attribute key="device.variant" value="Cortex M.OMAP4430"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_24.projectspec">
					<filter.ref ref.id="filter_676552131151100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_OMAP4430_CortexM"/>
							<attribute key="device.variant" value="Cortex M.OMAP4430"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_26.projectspec">
					<filter.ref ref.id="filter_676552131151100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_OMAP4430_CortexM"/>
							<attribute key="device.variant" value="Cortex M.OMAP4430"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_27.projectspec">
					<filter.ref ref.id="filter_676552131151100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_OMAP4430_CortexM"/>
							<attribute key="device.variant" value="Cortex M.OMAP4430"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_28.projectspec">
					<filter.ref ref.id="filter_676552131151100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_OMAP4430_CortexM"/>
							<attribute key="device.variant" value="Cortex M.OMAP4430"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_25.projectspec">
					<filter.ref ref.id="filter_676552131151100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_OMAP4430_CortexM"/>
							<attribute key="device.variant" value="Cortex M.OMAP4430"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="OMAP4460" desc="OMAP4460" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_676552131903000">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>OMAP4460</tag>
					<tag>OMAP4</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_15.projectspec">
					<filter.ref ref.id="filter_676552131903000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_OMAP4460_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAP4460"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_16.projectspec">
					<filter.ref ref.id="filter_676552131903000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_OMAP4460_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAP4460"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_676552131994900">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>OMAP4460</tag>
					<tag>OMAP4</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_29.projectspec">
					<filter.ref ref.id="filter_676552131994900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_OMAP4460_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAP4460"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_18.projectspec">
					<filter.ref ref.id="filter_676552131994900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_OMAP4460_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAP4460"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_19.projectspec">
					<filter.ref ref.id="filter_676552131994900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_OMAP4460_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAP4460"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_20.projectspec">
					<filter.ref ref.id="filter_676552131994900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_OMAP4460_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAP4460"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_21.projectspec">
					<filter.ref ref.id="filter_676552131994900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_OMAP4460_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAP4460"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_22.projectspec">
					<filter.ref ref.id="filter_676552131994900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_OMAP4460_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAP4460"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_23.projectspec">
					<filter.ref ref.id="filter_676552131994900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_OMAP4460_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAP4460"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_24.projectspec">
					<filter.ref ref.id="filter_676552131994900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_OMAP4460_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAP4460"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_26.projectspec">
					<filter.ref ref.id="filter_676552131994900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_OMAP4460_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAP4460"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_27.projectspec">
					<filter.ref ref.id="filter_676552131994900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_OMAP4460_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAP4460"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_28.projectspec">
					<filter.ref ref.id="filter_676552131994900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_OMAP4460_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAP4460"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_25.projectspec">
					<filter.ref ref.id="filter_676552131994900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_OMAP4460_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAP4460"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="OMAP4460" desc="OMAP4460" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_676552132704100">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>OMAP4460</tag>
					<tag>OMAP4</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_15.projectspec">
					<filter.ref ref.id="filter_676552132704100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_OMAP4460_CortexM"/>
							<attribute key="device.variant" value="Cortex M.OMAP4460"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_16.projectspec">
					<filter.ref ref.id="filter_676552132704100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_OMAP4460_CortexM"/>
							<attribute key="device.variant" value="Cortex M.OMAP4460"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_676552132792700">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>OMAP4460</tag>
					<tag>OMAP4</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_29.projectspec">
					<filter.ref ref.id="filter_676552132792700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_OMAP4460_CortexM"/>
							<attribute key="device.variant" value="Cortex M.OMAP4460"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_18.projectspec">
					<filter.ref ref.id="filter_676552132792700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_OMAP4460_CortexM"/>
							<attribute key="device.variant" value="Cortex M.OMAP4460"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_19.projectspec">
					<filter.ref ref.id="filter_676552132792700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_OMAP4460_CortexM"/>
							<attribute key="device.variant" value="Cortex M.OMAP4460"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_20.projectspec">
					<filter.ref ref.id="filter_676552132792700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_OMAP4460_CortexM"/>
							<attribute key="device.variant" value="Cortex M.OMAP4460"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_21.projectspec">
					<filter.ref ref.id="filter_676552132792700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_OMAP4460_CortexM"/>
							<attribute key="device.variant" value="Cortex M.OMAP4460"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_22.projectspec">
					<filter.ref ref.id="filter_676552132792700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_OMAP4460_CortexM"/>
							<attribute key="device.variant" value="Cortex M.OMAP4460"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_23.projectspec">
					<filter.ref ref.id="filter_676552132792700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_OMAP4460_CortexM"/>
							<attribute key="device.variant" value="Cortex M.OMAP4460"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_24.projectspec">
					<filter.ref ref.id="filter_676552132792700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_OMAP4460_CortexM"/>
							<attribute key="device.variant" value="Cortex M.OMAP4460"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_26.projectspec">
					<filter.ref ref.id="filter_676552132792700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_OMAP4460_CortexM"/>
							<attribute key="device.variant" value="Cortex M.OMAP4460"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_27.projectspec">
					<filter.ref ref.id="filter_676552132792700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_OMAP4460_CortexM"/>
							<attribute key="device.variant" value="Cortex M.OMAP4460"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_28.projectspec">
					<filter.ref ref.id="filter_676552132792700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_OMAP4460_CortexM"/>
							<attribute key="device.variant" value="Cortex M.OMAP4460"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_25.projectspec">
					<filter.ref ref.id="filter_676552132792700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_OMAP4460_CortexM"/>
							<attribute key="device.variant" value="Cortex M.OMAP4460"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="PandaBoard" desc="PandaBoard" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_676552134811600">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>PandaBoard</tag>
					<tag>OMAP4</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_15.projectspec">
					<filter.ref ref.id="filter_676552134811600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_PandaBoard_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAP4430.PandaBoard"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_16.projectspec">
					<filter.ref ref.id="filter_676552134811600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_PandaBoard_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAP4430.PandaBoard"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_676552134936000">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>PandaBoard</tag>
					<tag>OMAP4</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_29.projectspec">
					<filter.ref ref.id="filter_676552134936000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_PandaBoard_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAP4430.PandaBoard"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_18.projectspec">
					<filter.ref ref.id="filter_676552134936000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_PandaBoard_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAP4430.PandaBoard"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_19.projectspec">
					<filter.ref ref.id="filter_676552134936000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_PandaBoard_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAP4430.PandaBoard"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_20.projectspec">
					<filter.ref ref.id="filter_676552134936000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_PandaBoard_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAP4430.PandaBoard"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_21.projectspec">
					<filter.ref ref.id="filter_676552134936000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_PandaBoard_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAP4430.PandaBoard"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_22.projectspec">
					<filter.ref ref.id="filter_676552134936000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_PandaBoard_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAP4430.PandaBoard"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_23.projectspec">
					<filter.ref ref.id="filter_676552134936000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_PandaBoard_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAP4430.PandaBoard"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_24.projectspec">
					<filter.ref ref.id="filter_676552134936000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_PandaBoard_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAP4430.PandaBoard"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_26.projectspec">
					<filter.ref ref.id="filter_676552134936000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_PandaBoard_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAP4430.PandaBoard"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_27.projectspec">
					<filter.ref ref.id="filter_676552134936000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_PandaBoard_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAP4430.PandaBoard"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_28.projectspec">
					<filter.ref ref.id="filter_676552134936000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_PandaBoard_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAP4430.PandaBoard"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_25.projectspec">
					<filter.ref ref.id="filter_676552134936000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_PandaBoard_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAP4430.PandaBoard"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="PandaBoard" desc="PandaBoard" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_676552135832400">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>PandaBoard</tag>
					<tag>OMAP4</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_15.projectspec">
					<filter.ref ref.id="filter_676552135832400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_PandaBoard_CortexM"/>
							<attribute key="device.variant" value="Cortex M.OMAP4430.PandaBoard"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_16.projectspec">
					<filter.ref ref.id="filter_676552135832400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_PandaBoard_CortexM"/>
							<attribute key="device.variant" value="Cortex M.OMAP4430.PandaBoard"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_676552135938800">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>PandaBoard</tag>
					<tag>OMAP4</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_29.projectspec">
					<filter.ref ref.id="filter_676552135938800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_PandaBoard_CortexM"/>
							<attribute key="device.variant" value="Cortex M.OMAP4430.PandaBoard"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_18.projectspec">
					<filter.ref ref.id="filter_676552135938800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_PandaBoard_CortexM"/>
							<attribute key="device.variant" value="Cortex M.OMAP4430.PandaBoard"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_19.projectspec">
					<filter.ref ref.id="filter_676552135938800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_PandaBoard_CortexM"/>
							<attribute key="device.variant" value="Cortex M.OMAP4430.PandaBoard"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_20.projectspec">
					<filter.ref ref.id="filter_676552135938800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_PandaBoard_CortexM"/>
							<attribute key="device.variant" value="Cortex M.OMAP4430.PandaBoard"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_21.projectspec">
					<filter.ref ref.id="filter_676552135938800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_PandaBoard_CortexM"/>
							<attribute key="device.variant" value="Cortex M.OMAP4430.PandaBoard"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_22.projectspec">
					<filter.ref ref.id="filter_676552135938800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_PandaBoard_CortexM"/>
							<attribute key="device.variant" value="Cortex M.OMAP4430.PandaBoard"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_23.projectspec">
					<filter.ref ref.id="filter_676552135938800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_PandaBoard_CortexM"/>
							<attribute key="device.variant" value="Cortex M.OMAP4430.PandaBoard"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_24.projectspec">
					<filter.ref ref.id="filter_676552135938800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_PandaBoard_CortexM"/>
							<attribute key="device.variant" value="Cortex M.OMAP4430.PandaBoard"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_26.projectspec">
					<filter.ref ref.id="filter_676552135938800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_PandaBoard_CortexM"/>
							<attribute key="device.variant" value="Cortex M.OMAP4430.PandaBoard"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_27.projectspec">
					<filter.ref ref.id="filter_676552135938800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_PandaBoard_CortexM"/>
							<attribute key="device.variant" value="Cortex M.OMAP4430.PandaBoard"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_28.projectspec">
					<filter.ref ref.id="filter_676552135938800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_PandaBoard_CortexM"/>
							<attribute key="device.variant" value="Cortex M.OMAP4430.PandaBoard"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_25.projectspec">
					<filter.ref ref.id="filter_676552135938800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_PandaBoard_CortexM"/>
							<attribute key="device.variant" value="Cortex M.OMAP4430.PandaBoard"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="PandaBoard_ES" desc="PandaBoard_ES" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_676552136778400">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>PandaBoard_ES</tag>
					<tag>OMAP4</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_15.projectspec">
					<filter.ref ref.id="filter_676552136778400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_PandaBoard_ES_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAP4460.PandaBoard_ES"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_16.projectspec">
					<filter.ref ref.id="filter_676552136778400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_PandaBoard_ES_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAP4460.PandaBoard_ES"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_676552136872400">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>PandaBoard_ES</tag>
					<tag>OMAP4</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_29.projectspec">
					<filter.ref ref.id="filter_676552136872400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_PandaBoard_ES_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAP4460.PandaBoard_ES"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_18.projectspec">
					<filter.ref ref.id="filter_676552136872400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_PandaBoard_ES_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAP4460.PandaBoard_ES"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_19.projectspec">
					<filter.ref ref.id="filter_676552136872400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_PandaBoard_ES_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAP4460.PandaBoard_ES"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_20.projectspec">
					<filter.ref ref.id="filter_676552136872400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_PandaBoard_ES_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAP4460.PandaBoard_ES"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_21.projectspec">
					<filter.ref ref.id="filter_676552136872400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_PandaBoard_ES_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAP4460.PandaBoard_ES"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_22.projectspec">
					<filter.ref ref.id="filter_676552136872400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_PandaBoard_ES_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAP4460.PandaBoard_ES"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_23.projectspec">
					<filter.ref ref.id="filter_676552136872400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_PandaBoard_ES_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAP4460.PandaBoard_ES"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_24.projectspec">
					<filter.ref ref.id="filter_676552136872400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_PandaBoard_ES_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAP4460.PandaBoard_ES"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_26.projectspec">
					<filter.ref ref.id="filter_676552136872400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_PandaBoard_ES_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAP4460.PandaBoard_ES"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_27.projectspec">
					<filter.ref ref.id="filter_676552136872400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_PandaBoard_ES_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAP4460.PandaBoard_ES"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_28.projectspec">
					<filter.ref ref.id="filter_676552136872400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_PandaBoard_ES_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAP4460.PandaBoard_ES"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_25.projectspec">
					<filter.ref ref.id="filter_676552136872400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_PandaBoard_ES_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAP4460.PandaBoard_ES"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="PandaBoard_ES" desc="PandaBoard_ES" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_676552137654800">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>PandaBoard_ES</tag>
					<tag>OMAP4</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_15.projectspec">
					<filter.ref ref.id="filter_676552137654800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_PandaBoard_ES_CortexM"/>
							<attribute key="device.variant" value="Cortex M.OMAP4460.PandaBoard_ES"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_16.projectspec">
					<filter.ref ref.id="filter_676552137654800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_PandaBoard_ES_CortexM"/>
							<attribute key="device.variant" value="Cortex M.OMAP4460.PandaBoard_ES"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_676552137755800">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>PandaBoard_ES</tag>
					<tag>OMAP4</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_29.projectspec">
					<filter.ref ref.id="filter_676552137755800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_PandaBoard_ES_CortexM"/>
							<attribute key="device.variant" value="Cortex M.OMAP4460.PandaBoard_ES"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_18.projectspec">
					<filter.ref ref.id="filter_676552137755800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_PandaBoard_ES_CortexM"/>
							<attribute key="device.variant" value="Cortex M.OMAP4460.PandaBoard_ES"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_19.projectspec">
					<filter.ref ref.id="filter_676552137755800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_PandaBoard_ES_CortexM"/>
							<attribute key="device.variant" value="Cortex M.OMAP4460.PandaBoard_ES"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_20.projectspec">
					<filter.ref ref.id="filter_676552137755800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_PandaBoard_ES_CortexM"/>
							<attribute key="device.variant" value="Cortex M.OMAP4460.PandaBoard_ES"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_21.projectspec">
					<filter.ref ref.id="filter_676552137755800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_PandaBoard_ES_CortexM"/>
							<attribute key="device.variant" value="Cortex M.OMAP4460.PandaBoard_ES"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_22.projectspec">
					<filter.ref ref.id="filter_676552137755800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_PandaBoard_ES_CortexM"/>
							<attribute key="device.variant" value="Cortex M.OMAP4460.PandaBoard_ES"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_23.projectspec">
					<filter.ref ref.id="filter_676552137755800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_PandaBoard_ES_CortexM"/>
							<attribute key="device.variant" value="Cortex M.OMAP4460.PandaBoard_ES"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_24.projectspec">
					<filter.ref ref.id="filter_676552137755800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_PandaBoard_ES_CortexM"/>
							<attribute key="device.variant" value="Cortex M.OMAP4460.PandaBoard_ES"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_26.projectspec">
					<filter.ref ref.id="filter_676552137755800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_PandaBoard_ES_CortexM"/>
							<attribute key="device.variant" value="Cortex M.OMAP4460.PandaBoard_ES"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_27.projectspec">
					<filter.ref ref.id="filter_676552137755800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_PandaBoard_ES_CortexM"/>
							<attribute key="device.variant" value="Cortex M.OMAP4460.PandaBoard_ES"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_28.projectspec">
					<filter.ref ref.id="filter_676552137755800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_PandaBoard_ES_CortexM"/>
							<attribute key="device.variant" value="Cortex M.OMAP4460.PandaBoard_ES"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_25.projectspec">
					<filter.ref ref.id="filter_676552137755800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_PandaBoard_ES_CortexM"/>
							<attribute key="device.variant" value="Cortex M.OMAP4460.PandaBoard_ES"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
		</contents>
		<contents name="OMAP5" desc="OMAP5" icon="plugin://icons/obj16/devices.png">
			<contents name="OMAP5430" desc="OMAP5430" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_676552138647100">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>OMAP5430</tag>
					<tag>OMAP5</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_15.projectspec">
					<filter.ref ref.id="filter_676552138647100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_OMAP5430_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAP5430"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_16.projectspec">
					<filter.ref ref.id="filter_676552138647100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_OMAP5430_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAP5430"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_676552138745300">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>OMAP5430</tag>
					<tag>OMAP5</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_29.projectspec">
					<filter.ref ref.id="filter_676552138745300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_OMAP5430_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAP5430"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_18.projectspec">
					<filter.ref ref.id="filter_676552138745300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_OMAP5430_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAP5430"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_19.projectspec">
					<filter.ref ref.id="filter_676552138745300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_OMAP5430_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAP5430"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_20.projectspec">
					<filter.ref ref.id="filter_676552138745300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_OMAP5430_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAP5430"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_21.projectspec">
					<filter.ref ref.id="filter_676552138745300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_OMAP5430_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAP5430"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_22.projectspec">
					<filter.ref ref.id="filter_676552138745300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_OMAP5430_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAP5430"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_23.projectspec">
					<filter.ref ref.id="filter_676552138745300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_OMAP5430_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAP5430"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_24.projectspec">
					<filter.ref ref.id="filter_676552138745300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_OMAP5430_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAP5430"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_26.projectspec">
					<filter.ref ref.id="filter_676552138745300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_OMAP5430_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAP5430"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_27.projectspec">
					<filter.ref ref.id="filter_676552138745300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_OMAP5430_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAP5430"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_28.projectspec">
					<filter.ref ref.id="filter_676552138745300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_OMAP5430_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAP5430"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_25.projectspec">
					<filter.ref ref.id="filter_676552138745300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_OMAP5430_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAP5430"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="OMAP5430" desc="OMAP5430" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_676552139447900">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>OMAP5430</tag>
					<tag>OMAP5</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_15.projectspec">
					<filter.ref ref.id="filter_676552139447900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_OMAP5430_CortexM"/>
							<attribute key="device.variant" value="Cortex M.OMAP5430"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_16.projectspec">
					<filter.ref ref.id="filter_676552139447900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_OMAP5430_CortexM"/>
							<attribute key="device.variant" value="Cortex M.OMAP5430"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_676552139535500">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>OMAP5430</tag>
					<tag>OMAP5</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_29.projectspec">
					<filter.ref ref.id="filter_676552139535500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_OMAP5430_CortexM"/>
							<attribute key="device.variant" value="Cortex M.OMAP5430"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_18.projectspec">
					<filter.ref ref.id="filter_676552139535500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_OMAP5430_CortexM"/>
							<attribute key="device.variant" value="Cortex M.OMAP5430"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_19.projectspec">
					<filter.ref ref.id="filter_676552139535500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_OMAP5430_CortexM"/>
							<attribute key="device.variant" value="Cortex M.OMAP5430"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_20.projectspec">
					<filter.ref ref.id="filter_676552139535500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_OMAP5430_CortexM"/>
							<attribute key="device.variant" value="Cortex M.OMAP5430"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_21.projectspec">
					<filter.ref ref.id="filter_676552139535500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_OMAP5430_CortexM"/>
							<attribute key="device.variant" value="Cortex M.OMAP5430"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_22.projectspec">
					<filter.ref ref.id="filter_676552139535500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_OMAP5430_CortexM"/>
							<attribute key="device.variant" value="Cortex M.OMAP5430"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_23.projectspec">
					<filter.ref ref.id="filter_676552139535500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_OMAP5430_CortexM"/>
							<attribute key="device.variant" value="Cortex M.OMAP5430"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_24.projectspec">
					<filter.ref ref.id="filter_676552139535500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_OMAP5430_CortexM"/>
							<attribute key="device.variant" value="Cortex M.OMAP5430"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_26.projectspec">
					<filter.ref ref.id="filter_676552139535500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_OMAP5430_CortexM"/>
							<attribute key="device.variant" value="Cortex M.OMAP5430"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_27.projectspec">
					<filter.ref ref.id="filter_676552139535500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_OMAP5430_CortexM"/>
							<attribute key="device.variant" value="Cortex M.OMAP5430"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_28.projectspec">
					<filter.ref ref.id="filter_676552139535500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_OMAP5430_CortexM"/>
							<attribute key="device.variant" value="Cortex M.OMAP5430"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_25.projectspec">
					<filter.ref ref.id="filter_676552139535500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_OMAP5430_CortexM"/>
							<attribute key="device.variant" value="Cortex M.OMAP5430"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="OMAP5432" desc="OMAP5432" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_676552141461900">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>OMAP5432</tag>
					<tag>OMAP5</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_15.projectspec">
					<filter.ref ref.id="filter_676552141461900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_OMAP5432_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAP5432"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_16.projectspec">
					<filter.ref ref.id="filter_676552141461900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_OMAP5432_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAP5432"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_676552141559300">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>OMAP5432</tag>
					<tag>OMAP5</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_29.projectspec">
					<filter.ref ref.id="filter_676552141559300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_OMAP5432_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAP5432"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_18.projectspec">
					<filter.ref ref.id="filter_676552141559300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_OMAP5432_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAP5432"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_19.projectspec">
					<filter.ref ref.id="filter_676552141559300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_OMAP5432_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAP5432"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_20.projectspec">
					<filter.ref ref.id="filter_676552141559300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_OMAP5432_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAP5432"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_21.projectspec">
					<filter.ref ref.id="filter_676552141559300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_OMAP5432_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAP5432"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_22.projectspec">
					<filter.ref ref.id="filter_676552141559300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_OMAP5432_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAP5432"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_23.projectspec">
					<filter.ref ref.id="filter_676552141559300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_OMAP5432_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAP5432"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_24.projectspec">
					<filter.ref ref.id="filter_676552141559300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_OMAP5432_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAP5432"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_26.projectspec">
					<filter.ref ref.id="filter_676552141559300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_OMAP5432_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAP5432"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_27.projectspec">
					<filter.ref ref.id="filter_676552141559300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_OMAP5432_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAP5432"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_28.projectspec">
					<filter.ref ref.id="filter_676552141559300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_OMAP5432_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAP5432"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_25.projectspec">
					<filter.ref ref.id="filter_676552141559300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_OMAP5432_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAP5432"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="OMAP5432" desc="OMAP5432" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_676552142267900">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>OMAP5432</tag>
					<tag>OMAP5</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_15.projectspec">
					<filter.ref ref.id="filter_676552142267900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_OMAP5432_CortexM"/>
							<attribute key="device.variant" value="Cortex M.OMAP5432"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_16.projectspec">
					<filter.ref ref.id="filter_676552142267900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_OMAP5432_CortexM"/>
							<attribute key="device.variant" value="Cortex M.OMAP5432"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_676552142356000">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>OMAP5432</tag>
					<tag>OMAP5</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_29.projectspec">
					<filter.ref ref.id="filter_676552142356000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_OMAP5432_CortexM"/>
							<attribute key="device.variant" value="Cortex M.OMAP5432"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_18.projectspec">
					<filter.ref ref.id="filter_676552142356000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_OMAP5432_CortexM"/>
							<attribute key="device.variant" value="Cortex M.OMAP5432"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_19.projectspec">
					<filter.ref ref.id="filter_676552142356000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_OMAP5432_CortexM"/>
							<attribute key="device.variant" value="Cortex M.OMAP5432"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_20.projectspec">
					<filter.ref ref.id="filter_676552142356000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_OMAP5432_CortexM"/>
							<attribute key="device.variant" value="Cortex M.OMAP5432"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_21.projectspec">
					<filter.ref ref.id="filter_676552142356000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_OMAP5432_CortexM"/>
							<attribute key="device.variant" value="Cortex M.OMAP5432"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_22.projectspec">
					<filter.ref ref.id="filter_676552142356000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_OMAP5432_CortexM"/>
							<attribute key="device.variant" value="Cortex M.OMAP5432"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_23.projectspec">
					<filter.ref ref.id="filter_676552142356000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_OMAP5432_CortexM"/>
							<attribute key="device.variant" value="Cortex M.OMAP5432"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_24.projectspec">
					<filter.ref ref.id="filter_676552142356000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_OMAP5432_CortexM"/>
							<attribute key="device.variant" value="Cortex M.OMAP5432"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_26.projectspec">
					<filter.ref ref.id="filter_676552142356000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_OMAP5432_CortexM"/>
							<attribute key="device.variant" value="Cortex M.OMAP5432"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_27.projectspec">
					<filter.ref ref.id="filter_676552142356000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_OMAP5432_CortexM"/>
							<attribute key="device.variant" value="Cortex M.OMAP5432"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_28.projectspec">
					<filter.ref ref.id="filter_676552142356000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_OMAP5432_CortexM"/>
							<attribute key="device.variant" value="Cortex M.OMAP5432"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_25.projectspec">
					<filter.ref ref.id="filter_676552142356000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_OMAP5432_CortexM"/>
							<attribute key="device.variant" value="Cortex M.OMAP5432"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="OMAP5432_UEVM" desc="OMAP5432_UEVM" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_676552143096000">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>OMAP5432_UEVM</tag>
					<tag>OMAP5</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_15.projectspec">
					<filter.ref ref.id="filter_676552143096000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_OMAP5432_UEVM_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAP5432.OMAP5432_UEVM"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_16.projectspec">
					<filter.ref ref.id="filter_676552143096000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_OMAP5432_UEVM_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAP5432.OMAP5432_UEVM"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_676552143188500">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>OMAP5432_UEVM</tag>
					<tag>OMAP5</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_29.projectspec">
					<filter.ref ref.id="filter_676552143188500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_OMAP5432_UEVM_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAP5432.OMAP5432_UEVM"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_18.projectspec">
					<filter.ref ref.id="filter_676552143188500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_OMAP5432_UEVM_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAP5432.OMAP5432_UEVM"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_19.projectspec">
					<filter.ref ref.id="filter_676552143188500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_OMAP5432_UEVM_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAP5432.OMAP5432_UEVM"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_20.projectspec">
					<filter.ref ref.id="filter_676552143188500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_OMAP5432_UEVM_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAP5432.OMAP5432_UEVM"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_21.projectspec">
					<filter.ref ref.id="filter_676552143188500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_OMAP5432_UEVM_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAP5432.OMAP5432_UEVM"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_22.projectspec">
					<filter.ref ref.id="filter_676552143188500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_OMAP5432_UEVM_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAP5432.OMAP5432_UEVM"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_23.projectspec">
					<filter.ref ref.id="filter_676552143188500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_OMAP5432_UEVM_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAP5432.OMAP5432_UEVM"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_24.projectspec">
					<filter.ref ref.id="filter_676552143188500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_OMAP5432_UEVM_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAP5432.OMAP5432_UEVM"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_26.projectspec">
					<filter.ref ref.id="filter_676552143188500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_OMAP5432_UEVM_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAP5432.OMAP5432_UEVM"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_27.projectspec">
					<filter.ref ref.id="filter_676552143188500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_OMAP5432_UEVM_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAP5432.OMAP5432_UEVM"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_28.projectspec">
					<filter.ref ref.id="filter_676552143188500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_OMAP5432_UEVM_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAP5432.OMAP5432_UEVM"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_25.projectspec">
					<filter.ref ref.id="filter_676552143188500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_OMAP5432_UEVM_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAP5432.OMAP5432_UEVM"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="OMAP5432_UEVM" desc="OMAP5432_UEVM" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_676552143986300">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>OMAP5432_UEVM</tag>
					<tag>OMAP5</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_15.projectspec">
					<filter.ref ref.id="filter_676552143986300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_OMAP5432_UEVM_CortexM"/>
							<attribute key="device.variant" value="Cortex M.OMAP5432.OMAP5432_UEVM"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_16.projectspec">
					<filter.ref ref.id="filter_676552143986300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_OMAP5432_UEVM_CortexM"/>
							<attribute key="device.variant" value="Cortex M.OMAP5432.OMAP5432_UEVM"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_676552144079700">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>OMAP5432_UEVM</tag>
					<tag>OMAP5</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_29.projectspec">
					<filter.ref ref.id="filter_676552144079700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_OMAP5432_UEVM_CortexM"/>
							<attribute key="device.variant" value="Cortex M.OMAP5432.OMAP5432_UEVM"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_18.projectspec">
					<filter.ref ref.id="filter_676552144079700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_OMAP5432_UEVM_CortexM"/>
							<attribute key="device.variant" value="Cortex M.OMAP5432.OMAP5432_UEVM"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_19.projectspec">
					<filter.ref ref.id="filter_676552144079700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_OMAP5432_UEVM_CortexM"/>
							<attribute key="device.variant" value="Cortex M.OMAP5432.OMAP5432_UEVM"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_20.projectspec">
					<filter.ref ref.id="filter_676552144079700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_OMAP5432_UEVM_CortexM"/>
							<attribute key="device.variant" value="Cortex M.OMAP5432.OMAP5432_UEVM"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_21.projectspec">
					<filter.ref ref.id="filter_676552144079700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_OMAP5432_UEVM_CortexM"/>
							<attribute key="device.variant" value="Cortex M.OMAP5432.OMAP5432_UEVM"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_22.projectspec">
					<filter.ref ref.id="filter_676552144079700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_OMAP5432_UEVM_CortexM"/>
							<attribute key="device.variant" value="Cortex M.OMAP5432.OMAP5432_UEVM"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_23.projectspec">
					<filter.ref ref.id="filter_676552144079700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_OMAP5432_UEVM_CortexM"/>
							<attribute key="device.variant" value="Cortex M.OMAP5432.OMAP5432_UEVM"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_24.projectspec">
					<filter.ref ref.id="filter_676552144079700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_OMAP5432_UEVM_CortexM"/>
							<attribute key="device.variant" value="Cortex M.OMAP5432.OMAP5432_UEVM"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_26.projectspec">
					<filter.ref ref.id="filter_676552144079700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_OMAP5432_UEVM_CortexM"/>
							<attribute key="device.variant" value="Cortex M.OMAP5432.OMAP5432_UEVM"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_27.projectspec">
					<filter.ref ref.id="filter_676552144079700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_OMAP5432_UEVM_CortexM"/>
							<attribute key="device.variant" value="Cortex M.OMAP5432.OMAP5432_UEVM"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_28.projectspec">
					<filter.ref ref.id="filter_676552144079700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_OMAP5432_UEVM_CortexM"/>
							<attribute key="device.variant" value="Cortex M.OMAP5432.OMAP5432_UEVM"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_25.projectspec">
					<filter.ref ref.id="filter_676552144079700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_OMAP5432_UEVM_CortexM"/>
							<attribute key="device.variant" value="Cortex M.OMAP5432.OMAP5432_UEVM"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
		</contents>
	</contents>
	<contents name="C6000" desc="C6000" icon="plugin://icons/obj16/devices.png">
		<contents name="Generic devices" desc="Generic devices" icon="plugin://icons/obj16/devices.png">
			<contents name="Generic C64x+ Device" desc="Generic C64x+ Device" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_676552176112700">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>Generic C64x+ Device</tag>
					<tag>Generic devices</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_0.projectspec">
					<filter.ref ref.id="filter_676552176112700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_GenericC64xpDevice"/>
							<attribute key="device.variant" value="com.ti.ccstudio.deviceModel.C6000.GenericC64xPlusDevice"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_1.projectspec">
					<filter.ref ref.id="filter_676552176112700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_GenericC64xpDevice"/>
							<attribute key="device.variant" value="com.ti.ccstudio.deviceModel.C6000.GenericC64xPlusDevice"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_676552176217200">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>Generic C64x+ Device</tag>
					<tag>Generic devices</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_14.projectspec">
					<filter.ref ref.id="filter_676552176217200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_GenericC64xpDevice"/>
							<attribute key="device.variant" value="com.ti.ccstudio.deviceModel.C6000.GenericC64xPlusDevice"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_3.projectspec">
					<filter.ref ref.id="filter_676552176217200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_GenericC64xpDevice"/>
							<attribute key="device.variant" value="com.ti.ccstudio.deviceModel.C6000.GenericC64xPlusDevice"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_4.projectspec">
					<filter.ref ref.id="filter_676552176217200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_GenericC64xpDevice"/>
							<attribute key="device.variant" value="com.ti.ccstudio.deviceModel.C6000.GenericC64xPlusDevice"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_5.projectspec">
					<filter.ref ref.id="filter_676552176217200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_GenericC64xpDevice"/>
							<attribute key="device.variant" value="com.ti.ccstudio.deviceModel.C6000.GenericC64xPlusDevice"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_6.projectspec">
					<filter.ref ref.id="filter_676552176217200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_GenericC64xpDevice"/>
							<attribute key="device.variant" value="com.ti.ccstudio.deviceModel.C6000.GenericC64xPlusDevice"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_7.projectspec">
					<filter.ref ref.id="filter_676552176217200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_GenericC64xpDevice"/>
							<attribute key="device.variant" value="com.ti.ccstudio.deviceModel.C6000.GenericC64xPlusDevice"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_8.projectspec">
					<filter.ref ref.id="filter_676552176217200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_GenericC64xpDevice"/>
							<attribute key="device.variant" value="com.ti.ccstudio.deviceModel.C6000.GenericC64xPlusDevice"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_9.projectspec">
					<filter.ref ref.id="filter_676552176217200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_GenericC64xpDevice"/>
							<attribute key="device.variant" value="com.ti.ccstudio.deviceModel.C6000.GenericC64xPlusDevice"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_11.projectspec">
					<filter.ref ref.id="filter_676552176217200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_GenericC64xpDevice"/>
							<attribute key="device.variant" value="com.ti.ccstudio.deviceModel.C6000.GenericC64xPlusDevice"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_12.projectspec">
					<filter.ref ref.id="filter_676552176217200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_GenericC64xpDevice"/>
							<attribute key="device.variant" value="com.ti.ccstudio.deviceModel.C6000.GenericC64xPlusDevice"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_13.projectspec">
					<filter.ref ref.id="filter_676552176217200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_GenericC64xpDevice"/>
							<attribute key="device.variant" value="com.ti.ccstudio.deviceModel.C6000.GenericC64xPlusDevice"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_10.projectspec">
					<filter.ref ref.id="filter_676552176217200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_GenericC64xpDevice"/>
							<attribute key="device.variant" value="com.ti.ccstudio.deviceModel.C6000.GenericC64xPlusDevice"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="Generic C66xx Device" desc="Generic C66xx Device" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_676552177717100">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>Generic C66xx Device</tag>
					<tag>Generic devices</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_0.projectspec">
					<filter.ref ref.id="filter_676552177717100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_GenericC66xxDevice"/>
							<attribute key="device.variant" value="com.ti.ccstudio.deviceModel.C6000.GenericC66xxDevice"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_1.projectspec">
					<filter.ref ref.id="filter_676552177717100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_GenericC66xxDevice"/>
							<attribute key="device.variant" value="com.ti.ccstudio.deviceModel.C6000.GenericC66xxDevice"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_676552177805800">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>Generic C66xx Device</tag>
					<tag>Generic devices</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_14.projectspec">
					<filter.ref ref.id="filter_676552177805800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_GenericC66xxDevice"/>
							<attribute key="device.variant" value="com.ti.ccstudio.deviceModel.C6000.GenericC66xxDevice"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_3.projectspec">
					<filter.ref ref.id="filter_676552177805800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_GenericC66xxDevice"/>
							<attribute key="device.variant" value="com.ti.ccstudio.deviceModel.C6000.GenericC66xxDevice"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_4.projectspec">
					<filter.ref ref.id="filter_676552177805800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_GenericC66xxDevice"/>
							<attribute key="device.variant" value="com.ti.ccstudio.deviceModel.C6000.GenericC66xxDevice"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_5.projectspec">
					<filter.ref ref.id="filter_676552177805800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_GenericC66xxDevice"/>
							<attribute key="device.variant" value="com.ti.ccstudio.deviceModel.C6000.GenericC66xxDevice"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_6.projectspec">
					<filter.ref ref.id="filter_676552177805800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_GenericC66xxDevice"/>
							<attribute key="device.variant" value="com.ti.ccstudio.deviceModel.C6000.GenericC66xxDevice"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_7.projectspec">
					<filter.ref ref.id="filter_676552177805800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_GenericC66xxDevice"/>
							<attribute key="device.variant" value="com.ti.ccstudio.deviceModel.C6000.GenericC66xxDevice"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_8.projectspec">
					<filter.ref ref.id="filter_676552177805800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_GenericC66xxDevice"/>
							<attribute key="device.variant" value="com.ti.ccstudio.deviceModel.C6000.GenericC66xxDevice"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_9.projectspec">
					<filter.ref ref.id="filter_676552177805800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_GenericC66xxDevice"/>
							<attribute key="device.variant" value="com.ti.ccstudio.deviceModel.C6000.GenericC66xxDevice"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_11.projectspec">
					<filter.ref ref.id="filter_676552177805800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_GenericC66xxDevice"/>
							<attribute key="device.variant" value="com.ti.ccstudio.deviceModel.C6000.GenericC66xxDevice"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_12.projectspec">
					<filter.ref ref.id="filter_676552177805800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_GenericC66xxDevice"/>
							<attribute key="device.variant" value="com.ti.ccstudio.deviceModel.C6000.GenericC66xxDevice"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_13.projectspec">
					<filter.ref ref.id="filter_676552177805800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_GenericC66xxDevice"/>
							<attribute key="device.variant" value="com.ti.ccstudio.deviceModel.C6000.GenericC66xxDevice"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_10.projectspec">
					<filter.ref ref.id="filter_676552177805800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_GenericC66xxDevice"/>
							<attribute key="device.variant" value="com.ti.ccstudio.deviceModel.C6000.GenericC66xxDevice"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="Generic C674x Device" desc="Generic C674x Device" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_676552178383600">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>Generic C674x Device</tag>
					<tag>Generic devices</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_0.projectspec">
					<filter.ref ref.id="filter_676552178383600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_GenericC674xDevice"/>
							<attribute key="device.variant" value="com.ti.ccstudio.deviceModel.C6000.GenericC674xDevice"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_1.projectspec">
					<filter.ref ref.id="filter_676552178383600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_GenericC674xDevice"/>
							<attribute key="device.variant" value="com.ti.ccstudio.deviceModel.C6000.GenericC674xDevice"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_676552178471000">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>Generic C674x Device</tag>
					<tag>Generic devices</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_14.projectspec">
					<filter.ref ref.id="filter_676552178471000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_GenericC674xDevice"/>
							<attribute key="device.variant" value="com.ti.ccstudio.deviceModel.C6000.GenericC674xDevice"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_3.projectspec">
					<filter.ref ref.id="filter_676552178471000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_GenericC674xDevice"/>
							<attribute key="device.variant" value="com.ti.ccstudio.deviceModel.C6000.GenericC674xDevice"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_4.projectspec">
					<filter.ref ref.id="filter_676552178471000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_GenericC674xDevice"/>
							<attribute key="device.variant" value="com.ti.ccstudio.deviceModel.C6000.GenericC674xDevice"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_5.projectspec">
					<filter.ref ref.id="filter_676552178471000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_GenericC674xDevice"/>
							<attribute key="device.variant" value="com.ti.ccstudio.deviceModel.C6000.GenericC674xDevice"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_6.projectspec">
					<filter.ref ref.id="filter_676552178471000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_GenericC674xDevice"/>
							<attribute key="device.variant" value="com.ti.ccstudio.deviceModel.C6000.GenericC674xDevice"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_7.projectspec">
					<filter.ref ref.id="filter_676552178471000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_GenericC674xDevice"/>
							<attribute key="device.variant" value="com.ti.ccstudio.deviceModel.C6000.GenericC674xDevice"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_8.projectspec">
					<filter.ref ref.id="filter_676552178471000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_GenericC674xDevice"/>
							<attribute key="device.variant" value="com.ti.ccstudio.deviceModel.C6000.GenericC674xDevice"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_9.projectspec">
					<filter.ref ref.id="filter_676552178471000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_GenericC674xDevice"/>
							<attribute key="device.variant" value="com.ti.ccstudio.deviceModel.C6000.GenericC674xDevice"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_11.projectspec">
					<filter.ref ref.id="filter_676552178471000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_GenericC674xDevice"/>
							<attribute key="device.variant" value="com.ti.ccstudio.deviceModel.C6000.GenericC674xDevice"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_12.projectspec">
					<filter.ref ref.id="filter_676552178471000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_GenericC674xDevice"/>
							<attribute key="device.variant" value="com.ti.ccstudio.deviceModel.C6000.GenericC674xDevice"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_13.projectspec">
					<filter.ref ref.id="filter_676552178471000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_GenericC674xDevice"/>
							<attribute key="device.variant" value="com.ti.ccstudio.deviceModel.C6000.GenericC674xDevice"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_10.projectspec">
					<filter.ref ref.id="filter_676552178471000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_GenericC674xDevice"/>
							<attribute key="device.variant" value="com.ti.ccstudio.deviceModel.C6000.GenericC674xDevice"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
		</contents>
		<contents name="C6-Integra C6A81xx" desc="C6-Integra C6A81xx" icon="plugin://icons/obj16/devices.png">
			<contents name="C6A8167" desc="C6A8167" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_676552180085300">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>C6A8167</tag>
					<tag>C6-Integra C6A81xx</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_0.projectspec">
					<filter.ref ref.id="filter_676552180085300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_C6A8167_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6A8167"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_1.projectspec">
					<filter.ref ref.id="filter_676552180085300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_C6A8167_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6A8167"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_676552180166500">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>C6A8167</tag>
					<tag>C6-Integra C6A81xx</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_14.projectspec">
					<filter.ref ref.id="filter_676552180166500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_C6A8167_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6A8167"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_3.projectspec">
					<filter.ref ref.id="filter_676552180166500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_C6A8167_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6A8167"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_4.projectspec">
					<filter.ref ref.id="filter_676552180166500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_C6A8167_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6A8167"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_5.projectspec">
					<filter.ref ref.id="filter_676552180166500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_C6A8167_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6A8167"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_6.projectspec">
					<filter.ref ref.id="filter_676552180166500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_C6A8167_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6A8167"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_7.projectspec">
					<filter.ref ref.id="filter_676552180166500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_C6A8167_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6A8167"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_8.projectspec">
					<filter.ref ref.id="filter_676552180166500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_C6A8167_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6A8167"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_9.projectspec">
					<filter.ref ref.id="filter_676552180166500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_C6A8167_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6A8167"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_11.projectspec">
					<filter.ref ref.id="filter_676552180166500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_C6A8167_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6A8167"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_12.projectspec">
					<filter.ref ref.id="filter_676552180166500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_C6A8167_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6A8167"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_13.projectspec">
					<filter.ref ref.id="filter_676552180166500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_C6A8167_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6A8167"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_10.projectspec">
					<filter.ref ref.id="filter_676552180166500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_C6A8167_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6A8167"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="C6A8168" desc="C6A8168" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_676552180694000">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>C6A8168</tag>
					<tag>C6-Integra C6A81xx</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_0.projectspec">
					<filter.ref ref.id="filter_676552180694000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_C6A8168_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6A8168"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_1.projectspec">
					<filter.ref ref.id="filter_676552180694000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_C6A8168_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6A8168"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_676552180773000">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>C6A8168</tag>
					<tag>C6-Integra C6A81xx</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_14.projectspec">
					<filter.ref ref.id="filter_676552180773000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_C6A8168_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6A8168"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_3.projectspec">
					<filter.ref ref.id="filter_676552180773000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_C6A8168_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6A8168"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_4.projectspec">
					<filter.ref ref.id="filter_676552180773000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_C6A8168_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6A8168"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_5.projectspec">
					<filter.ref ref.id="filter_676552180773000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_C6A8168_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6A8168"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_6.projectspec">
					<filter.ref ref.id="filter_676552180773000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_C6A8168_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6A8168"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_7.projectspec">
					<filter.ref ref.id="filter_676552180773000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_C6A8168_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6A8168"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_8.projectspec">
					<filter.ref ref.id="filter_676552180773000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_C6A8168_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6A8168"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_9.projectspec">
					<filter.ref ref.id="filter_676552180773000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_C6A8168_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6A8168"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_11.projectspec">
					<filter.ref ref.id="filter_676552180773000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_C6A8168_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6A8168"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_12.projectspec">
					<filter.ref ref.id="filter_676552180773000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_C6A8168_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6A8168"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_13.projectspec">
					<filter.ref ref.id="filter_676552180773000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_C6A8168_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6A8168"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_10.projectspec">
					<filter.ref ref.id="filter_676552180773000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_C6A8168_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6A8168"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
		</contents>
		<contents name="C645x High Performance DSP" desc="C645x High Performance DSP" icon="plugin://icons/obj16/devices.png">
			<contents name="DSK6455" desc="DSK6455" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_676552188826900">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>DSK6455</tag>
					<tag>C645x High Performance DSP</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_0.projectspec">
					<filter.ref ref.id="filter_676552188826900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_DSK6455"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6455.DSK6455"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_1.projectspec">
					<filter.ref ref.id="filter_676552188826900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_DSK6455"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6455.DSK6455"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_676552188929200">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>DSK6455</tag>
					<tag>C645x High Performance DSP</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_14.projectspec">
					<filter.ref ref.id="filter_676552188929200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_DSK6455"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6455.DSK6455"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_3.projectspec">
					<filter.ref ref.id="filter_676552188929200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_DSK6455"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6455.DSK6455"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_4.projectspec">
					<filter.ref ref.id="filter_676552188929200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_DSK6455"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6455.DSK6455"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_5.projectspec">
					<filter.ref ref.id="filter_676552188929200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_DSK6455"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6455.DSK6455"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_6.projectspec">
					<filter.ref ref.id="filter_676552188929200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_DSK6455"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6455.DSK6455"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_7.projectspec">
					<filter.ref ref.id="filter_676552188929200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_DSK6455"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6455.DSK6455"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_8.projectspec">
					<filter.ref ref.id="filter_676552188929200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_DSK6455"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6455.DSK6455"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_9.projectspec">
					<filter.ref ref.id="filter_676552188929200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_DSK6455"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6455.DSK6455"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_11.projectspec">
					<filter.ref ref.id="filter_676552188929200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_DSK6455"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6455.DSK6455"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_12.projectspec">
					<filter.ref ref.id="filter_676552188929200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_DSK6455"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6455.DSK6455"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_13.projectspec">
					<filter.ref ref.id="filter_676552188929200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_DSK6455"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6455.DSK6455"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_10.projectspec">
					<filter.ref ref.id="filter_676552188929200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_DSK6455"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6455.DSK6455"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="EVM6455 (TMS320C6455)" desc="EVM6455 (TMS320C6455)" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_676552189502400">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>EVM6455 (TMS320C6455)</tag>
					<tag>C645x High Performance DSP</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_0.projectspec">
					<filter.ref ref.id="filter_676552189502400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_EVM6455_TMS320C6455"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6455.EVM6455"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_1.projectspec">
					<filter.ref ref.id="filter_676552189502400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_EVM6455_TMS320C6455"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6455.EVM6455"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_676552189592300">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>EVM6455 (TMS320C6455)</tag>
					<tag>C645x High Performance DSP</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_14.projectspec">
					<filter.ref ref.id="filter_676552189592300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_EVM6455_TMS320C6455"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6455.EVM6455"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_3.projectspec">
					<filter.ref ref.id="filter_676552189592300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_EVM6455_TMS320C6455"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6455.EVM6455"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_4.projectspec">
					<filter.ref ref.id="filter_676552189592300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_EVM6455_TMS320C6455"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6455.EVM6455"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_5.projectspec">
					<filter.ref ref.id="filter_676552189592300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_EVM6455_TMS320C6455"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6455.EVM6455"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_6.projectspec">
					<filter.ref ref.id="filter_676552189592300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_EVM6455_TMS320C6455"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6455.EVM6455"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_7.projectspec">
					<filter.ref ref.id="filter_676552189592300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_EVM6455_TMS320C6455"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6455.EVM6455"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_8.projectspec">
					<filter.ref ref.id="filter_676552189592300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_EVM6455_TMS320C6455"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6455.EVM6455"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_9.projectspec">
					<filter.ref ref.id="filter_676552189592300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_EVM6455_TMS320C6455"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6455.EVM6455"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_11.projectspec">
					<filter.ref ref.id="filter_676552189592300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_EVM6455_TMS320C6455"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6455.EVM6455"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_12.projectspec">
					<filter.ref ref.id="filter_676552189592300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_EVM6455_TMS320C6455"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6455.EVM6455"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_13.projectspec">
					<filter.ref ref.id="filter_676552189592300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_EVM6455_TMS320C6455"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6455.EVM6455"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_10.projectspec">
					<filter.ref ref.id="filter_676552189592300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_EVM6455_TMS320C6455"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6455.EVM6455"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="EVMC6457 (TMS320C6457)" desc="EVMC6457 (TMS320C6457)" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_676552190158100">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>EVMC6457 (TMS320C6457)</tag>
					<tag>C645x High Performance DSP</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_0.projectspec">
					<filter.ref ref.id="filter_676552190158100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_EVMC6457_TMS320C6457"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6457.EVMC6457"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_1.projectspec">
					<filter.ref ref.id="filter_676552190158100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_EVMC6457_TMS320C6457"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6457.EVMC6457"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_676552190240300">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>EVMC6457 (TMS320C6457)</tag>
					<tag>C645x High Performance DSP</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_14.projectspec">
					<filter.ref ref.id="filter_676552190240300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_EVMC6457_TMS320C6457"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6457.EVMC6457"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_3.projectspec">
					<filter.ref ref.id="filter_676552190240300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_EVMC6457_TMS320C6457"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6457.EVMC6457"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_4.projectspec">
					<filter.ref ref.id="filter_676552190240300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_EVMC6457_TMS320C6457"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6457.EVMC6457"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_5.projectspec">
					<filter.ref ref.id="filter_676552190240300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_EVMC6457_TMS320C6457"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6457.EVMC6457"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_6.projectspec">
					<filter.ref ref.id="filter_676552190240300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_EVMC6457_TMS320C6457"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6457.EVMC6457"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_7.projectspec">
					<filter.ref ref.id="filter_676552190240300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_EVMC6457_TMS320C6457"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6457.EVMC6457"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_8.projectspec">
					<filter.ref ref.id="filter_676552190240300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_EVMC6457_TMS320C6457"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6457.EVMC6457"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_9.projectspec">
					<filter.ref ref.id="filter_676552190240300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_EVMC6457_TMS320C6457"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6457.EVMC6457"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_11.projectspec">
					<filter.ref ref.id="filter_676552190240300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_EVMC6457_TMS320C6457"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6457.EVMC6457"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_12.projectspec">
					<filter.ref ref.id="filter_676552190240300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_EVMC6457_TMS320C6457"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6457.EVMC6457"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_13.projectspec">
					<filter.ref ref.id="filter_676552190240300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_EVMC6457_TMS320C6457"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6457.EVMC6457"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_10.projectspec">
					<filter.ref ref.id="filter_676552190240300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_EVMC6457_TMS320C6457"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6457.EVMC6457"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="TMDSEVM6457L" desc="TMDSEVM6457L" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_676552190813000">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>TMDSEVM6457L</tag>
					<tag>C645x High Performance DSP</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_0.projectspec">
					<filter.ref ref.id="filter_676552190813000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_TMDSEVM6457L"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6457.TMDSEVM6457L"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_1.projectspec">
					<filter.ref ref.id="filter_676552190813000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_TMDSEVM6457L"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6457.TMDSEVM6457L"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_676552190895700">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>TMDSEVM6457L</tag>
					<tag>C645x High Performance DSP</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_14.projectspec">
					<filter.ref ref.id="filter_676552190895700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_TMDSEVM6457L"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6457.TMDSEVM6457L"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_3.projectspec">
					<filter.ref ref.id="filter_676552190895700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_TMDSEVM6457L"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6457.TMDSEVM6457L"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_4.projectspec">
					<filter.ref ref.id="filter_676552190895700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_TMDSEVM6457L"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6457.TMDSEVM6457L"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_5.projectspec">
					<filter.ref ref.id="filter_676552190895700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_TMDSEVM6457L"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6457.TMDSEVM6457L"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_6.projectspec">
					<filter.ref ref.id="filter_676552190895700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_TMDSEVM6457L"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6457.TMDSEVM6457L"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_7.projectspec">
					<filter.ref ref.id="filter_676552190895700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_TMDSEVM6457L"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6457.TMDSEVM6457L"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_8.projectspec">
					<filter.ref ref.id="filter_676552190895700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_TMDSEVM6457L"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6457.TMDSEVM6457L"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_9.projectspec">
					<filter.ref ref.id="filter_676552190895700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_TMDSEVM6457L"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6457.TMDSEVM6457L"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_11.projectspec">
					<filter.ref ref.id="filter_676552190895700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_TMDSEVM6457L"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6457.TMDSEVM6457L"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_12.projectspec">
					<filter.ref ref.id="filter_676552190895700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_TMDSEVM6457L"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6457.TMDSEVM6457L"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_13.projectspec">
					<filter.ref ref.id="filter_676552190895700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_TMDSEVM6457L"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6457.TMDSEVM6457L"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_10.projectspec">
					<filter.ref ref.id="filter_676552190895700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_TMDSEVM6457L"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6457.TMDSEVM6457L"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="TMS320C6452" desc="TMS320C6452" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_676552192464200">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>TMS320C6452</tag>
					<tag>C645x High Performance DSP</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_0.projectspec">
					<filter.ref ref.id="filter_676552192464200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_TMS320C6452"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6452"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_1.projectspec">
					<filter.ref ref.id="filter_676552192464200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_TMS320C6452"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6452"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_676552192550000">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>TMS320C6452</tag>
					<tag>C645x High Performance DSP</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_14.projectspec">
					<filter.ref ref.id="filter_676552192550000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_TMS320C6452"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6452"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_3.projectspec">
					<filter.ref ref.id="filter_676552192550000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_TMS320C6452"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6452"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_4.projectspec">
					<filter.ref ref.id="filter_676552192550000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_TMS320C6452"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6452"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_5.projectspec">
					<filter.ref ref.id="filter_676552192550000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_TMS320C6452"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6452"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_6.projectspec">
					<filter.ref ref.id="filter_676552192550000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_TMS320C6452"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6452"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_7.projectspec">
					<filter.ref ref.id="filter_676552192550000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_TMS320C6452"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6452"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_8.projectspec">
					<filter.ref ref.id="filter_676552192550000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_TMS320C6452"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6452"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_9.projectspec">
					<filter.ref ref.id="filter_676552192550000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_TMS320C6452"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6452"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_11.projectspec">
					<filter.ref ref.id="filter_676552192550000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_TMS320C6452"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6452"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_12.projectspec">
					<filter.ref ref.id="filter_676552192550000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_TMS320C6452"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6452"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_13.projectspec">
					<filter.ref ref.id="filter_676552192550000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_TMS320C6452"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6452"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_10.projectspec">
					<filter.ref ref.id="filter_676552192550000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_TMS320C6452"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6452"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="TMS320C6454" desc="TMS320C6454" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_676552193091900">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>TMS320C6454</tag>
					<tag>C645x High Performance DSP</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_0.projectspec">
					<filter.ref ref.id="filter_676552193091900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_TMS320C6454"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6454"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_1.projectspec">
					<filter.ref ref.id="filter_676552193091900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_TMS320C6454"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6454"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_676552193172100">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>TMS320C6454</tag>
					<tag>C645x High Performance DSP</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_14.projectspec">
					<filter.ref ref.id="filter_676552193172100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_TMS320C6454"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6454"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_3.projectspec">
					<filter.ref ref.id="filter_676552193172100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_TMS320C6454"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6454"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_4.projectspec">
					<filter.ref ref.id="filter_676552193172100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_TMS320C6454"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6454"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_5.projectspec">
					<filter.ref ref.id="filter_676552193172100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_TMS320C6454"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6454"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_6.projectspec">
					<filter.ref ref.id="filter_676552193172100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_TMS320C6454"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6454"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_7.projectspec">
					<filter.ref ref.id="filter_676552193172100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_TMS320C6454"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6454"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_8.projectspec">
					<filter.ref ref.id="filter_676552193172100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_TMS320C6454"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6454"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_9.projectspec">
					<filter.ref ref.id="filter_676552193172100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_TMS320C6454"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6454"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_11.projectspec">
					<filter.ref ref.id="filter_676552193172100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_TMS320C6454"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6454"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_12.projectspec">
					<filter.ref ref.id="filter_676552193172100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_TMS320C6454"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6454"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_13.projectspec">
					<filter.ref ref.id="filter_676552193172100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_TMS320C6454"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6454"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_10.projectspec">
					<filter.ref ref.id="filter_676552193172100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_TMS320C6454"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6454"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="TMS320C6455" desc="TMS320C6455" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_676552193718800">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>TMS320C6455</tag>
					<tag>C645x High Performance DSP</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_0.projectspec">
					<filter.ref ref.id="filter_676552193718800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_TMS320C6455"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6455"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_1.projectspec">
					<filter.ref ref.id="filter_676552193718800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_TMS320C6455"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6455"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_676552193799000">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>TMS320C6455</tag>
					<tag>C645x High Performance DSP</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_14.projectspec">
					<filter.ref ref.id="filter_676552193799000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_TMS320C6455"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6455"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_3.projectspec">
					<filter.ref ref.id="filter_676552193799000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_TMS320C6455"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6455"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_4.projectspec">
					<filter.ref ref.id="filter_676552193799000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_TMS320C6455"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6455"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_5.projectspec">
					<filter.ref ref.id="filter_676552193799000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_TMS320C6455"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6455"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_6.projectspec">
					<filter.ref ref.id="filter_676552193799000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_TMS320C6455"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6455"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_7.projectspec">
					<filter.ref ref.id="filter_676552193799000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_TMS320C6455"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6455"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_8.projectspec">
					<filter.ref ref.id="filter_676552193799000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_TMS320C6455"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6455"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_9.projectspec">
					<filter.ref ref.id="filter_676552193799000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_TMS320C6455"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6455"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_11.projectspec">
					<filter.ref ref.id="filter_676552193799000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_TMS320C6455"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6455"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_12.projectspec">
					<filter.ref ref.id="filter_676552193799000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_TMS320C6455"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6455"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_13.projectspec">
					<filter.ref ref.id="filter_676552193799000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_TMS320C6455"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6455"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_10.projectspec">
					<filter.ref ref.id="filter_676552193799000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_TMS320C6455"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6455"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="TMS320C6457" desc="TMS320C6457" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_676552194339300">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>TMS320C6457</tag>
					<tag>C645x High Performance DSP</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_0.projectspec">
					<filter.ref ref.id="filter_676552194339300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_TMS320C6457"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6457"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_1.projectspec">
					<filter.ref ref.id="filter_676552194339300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_TMS320C6457"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6457"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_676552194441300">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>TMS320C6457</tag>
					<tag>C645x High Performance DSP</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_14.projectspec">
					<filter.ref ref.id="filter_676552194441300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_TMS320C6457"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6457"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_3.projectspec">
					<filter.ref ref.id="filter_676552194441300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_TMS320C6457"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6457"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_4.projectspec">
					<filter.ref ref.id="filter_676552194441300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_TMS320C6457"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6457"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_5.projectspec">
					<filter.ref ref.id="filter_676552194441300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_TMS320C6457"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6457"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_6.projectspec">
					<filter.ref ref.id="filter_676552194441300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_TMS320C6457"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6457"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_7.projectspec">
					<filter.ref ref.id="filter_676552194441300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_TMS320C6457"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6457"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_8.projectspec">
					<filter.ref ref.id="filter_676552194441300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_TMS320C6457"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6457"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_9.projectspec">
					<filter.ref ref.id="filter_676552194441300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_TMS320C6457"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6457"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_11.projectspec">
					<filter.ref ref.id="filter_676552194441300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_TMS320C6457"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6457"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_12.projectspec">
					<filter.ref ref.id="filter_676552194441300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_TMS320C6457"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6457"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_13.projectspec">
					<filter.ref ref.id="filter_676552194441300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_TMS320C6457"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6457"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_10.projectspec">
					<filter.ref ref.id="filter_676552194441300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_TMS320C6457"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6457"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
		</contents>
		<contents name="C64xx Multicore DSP" desc="C64xx Multicore DSP" icon="plugin://icons/obj16/devices.png">
			<contents name="EVMC6472" desc="EVMC6472" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_676552195073200">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>EVMC6472</tag>
					<tag>C64xx Multicore DSP</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_0.projectspec">
					<filter.ref ref.id="filter_676552195073200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_EVMC6472"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6472.EVMC6472"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_1.projectspec">
					<filter.ref ref.id="filter_676552195073200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_EVMC6472"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6472.EVMC6472"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_676552195154100">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>EVMC6472</tag>
					<tag>C64xx Multicore DSP</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_14.projectspec">
					<filter.ref ref.id="filter_676552195154100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_EVMC6472"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6472.EVMC6472"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_3.projectspec">
					<filter.ref ref.id="filter_676552195154100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_EVMC6472"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6472.EVMC6472"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_4.projectspec">
					<filter.ref ref.id="filter_676552195154100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_EVMC6472"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6472.EVMC6472"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_5.projectspec">
					<filter.ref ref.id="filter_676552195154100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_EVMC6472"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6472.EVMC6472"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_6.projectspec">
					<filter.ref ref.id="filter_676552195154100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_EVMC6472"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6472.EVMC6472"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_7.projectspec">
					<filter.ref ref.id="filter_676552195154100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_EVMC6472"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6472.EVMC6472"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_8.projectspec">
					<filter.ref ref.id="filter_676552195154100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_EVMC6472"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6472.EVMC6472"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_9.projectspec">
					<filter.ref ref.id="filter_676552195154100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_EVMC6472"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6472.EVMC6472"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_11.projectspec">
					<filter.ref ref.id="filter_676552195154100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_EVMC6472"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6472.EVMC6472"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_12.projectspec">
					<filter.ref ref.id="filter_676552195154100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_EVMC6472"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6472.EVMC6472"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_13.projectspec">
					<filter.ref ref.id="filter_676552195154100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_EVMC6472"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6472.EVMC6472"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_10.projectspec">
					<filter.ref ref.id="filter_676552195154100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_EVMC6472"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6472.EVMC6472"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="TMDSEVM6474L" desc="TMDSEVM6474L" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_676552195699300">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>TMDSEVM6474L</tag>
					<tag>C64xx Multicore DSP</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_0.projectspec">
					<filter.ref ref.id="filter_676552195699300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_TMDSEVM6474L"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6474.TMDSEVM6474L"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_1.projectspec">
					<filter.ref ref.id="filter_676552195699300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_TMDSEVM6474L"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6474.TMDSEVM6474L"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_676552195780100">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>TMDSEVM6474L</tag>
					<tag>C64xx Multicore DSP</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_14.projectspec">
					<filter.ref ref.id="filter_676552195780100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_TMDSEVM6474L"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6474.TMDSEVM6474L"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_3.projectspec">
					<filter.ref ref.id="filter_676552195780100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_TMDSEVM6474L"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6474.TMDSEVM6474L"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_4.projectspec">
					<filter.ref ref.id="filter_676552195780100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_TMDSEVM6474L"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6474.TMDSEVM6474L"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_5.projectspec">
					<filter.ref ref.id="filter_676552195780100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_TMDSEVM6474L"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6474.TMDSEVM6474L"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_6.projectspec">
					<filter.ref ref.id="filter_676552195780100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_TMDSEVM6474L"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6474.TMDSEVM6474L"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_7.projectspec">
					<filter.ref ref.id="filter_676552195780100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_TMDSEVM6474L"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6474.TMDSEVM6474L"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_8.projectspec">
					<filter.ref ref.id="filter_676552195780100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_TMDSEVM6474L"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6474.TMDSEVM6474L"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_9.projectspec">
					<filter.ref ref.id="filter_676552195780100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_TMDSEVM6474L"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6474.TMDSEVM6474L"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_11.projectspec">
					<filter.ref ref.id="filter_676552195780100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_TMDSEVM6474L"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6474.TMDSEVM6474L"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_12.projectspec">
					<filter.ref ref.id="filter_676552195780100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_TMDSEVM6474L"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6474.TMDSEVM6474L"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_13.projectspec">
					<filter.ref ref.id="filter_676552195780100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_TMDSEVM6474L"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6474.TMDSEVM6474L"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_10.projectspec">
					<filter.ref ref.id="filter_676552195780100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_TMDSEVM6474L"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6474.TMDSEVM6474L"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="TMS320C6472" desc="TMS320C6472" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_676552197153600">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>TMS320C6472</tag>
					<tag>C64xx Multicore DSP</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_0.projectspec">
					<filter.ref ref.id="filter_676552197153600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_TMS320C6472"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6472"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_1.projectspec">
					<filter.ref ref.id="filter_676552197153600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_TMS320C6472"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6472"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_676552197235600">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>TMS320C6472</tag>
					<tag>C64xx Multicore DSP</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_14.projectspec">
					<filter.ref ref.id="filter_676552197235600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_TMS320C6472"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6472"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_3.projectspec">
					<filter.ref ref.id="filter_676552197235600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_TMS320C6472"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6472"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_4.projectspec">
					<filter.ref ref.id="filter_676552197235600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_TMS320C6472"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6472"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_5.projectspec">
					<filter.ref ref.id="filter_676552197235600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_TMS320C6472"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6472"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_6.projectspec">
					<filter.ref ref.id="filter_676552197235600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_TMS320C6472"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6472"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_7.projectspec">
					<filter.ref ref.id="filter_676552197235600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_TMS320C6472"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6472"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_8.projectspec">
					<filter.ref ref.id="filter_676552197235600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_TMS320C6472"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6472"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_9.projectspec">
					<filter.ref ref.id="filter_676552197235600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_TMS320C6472"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6472"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_11.projectspec">
					<filter.ref ref.id="filter_676552197235600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_TMS320C6472"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6472"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_12.projectspec">
					<filter.ref ref.id="filter_676552197235600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_TMS320C6472"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6472"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_13.projectspec">
					<filter.ref ref.id="filter_676552197235600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_TMS320C6472"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6472"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_10.projectspec">
					<filter.ref ref.id="filter_676552197235600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_TMS320C6472"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6472"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="TMS320C6474" desc="TMS320C6474" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_676552197761100">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>TMS320C6474</tag>
					<tag>C64xx Multicore DSP</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_0.projectspec">
					<filter.ref ref.id="filter_676552197761100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_TMS320C6474"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6474"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_1.projectspec">
					<filter.ref ref.id="filter_676552197761100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_TMS320C6474"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6474"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_676552197834800">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>TMS320C6474</tag>
					<tag>C64xx Multicore DSP</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_14.projectspec">
					<filter.ref ref.id="filter_676552197834800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_TMS320C6474"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6474"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_3.projectspec">
					<filter.ref ref.id="filter_676552197834800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_TMS320C6474"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6474"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_4.projectspec">
					<filter.ref ref.id="filter_676552197834800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_TMS320C6474"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6474"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_5.projectspec">
					<filter.ref ref.id="filter_676552197834800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_TMS320C6474"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6474"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_6.projectspec">
					<filter.ref ref.id="filter_676552197834800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_TMS320C6474"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6474"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_7.projectspec">
					<filter.ref ref.id="filter_676552197834800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_TMS320C6474"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6474"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_8.projectspec">
					<filter.ref ref.id="filter_676552197834800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_TMS320C6474"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6474"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_9.projectspec">
					<filter.ref ref.id="filter_676552197834800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_TMS320C6474"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6474"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_11.projectspec">
					<filter.ref ref.id="filter_676552197834800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_TMS320C6474"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6474"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_12.projectspec">
					<filter.ref ref.id="filter_676552197834800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_TMS320C6474"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6474"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_13.projectspec">
					<filter.ref ref.id="filter_676552197834800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_TMS320C6474"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6474"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_10.projectspec">
					<filter.ref ref.id="filter_676552197834800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_TMS320C6474"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6474"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="TMS320TCI6486" desc="TMS320TCI6486" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_676552198350800">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>TMS320TCI6486</tag>
					<tag>C64xx Multicore DSP</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_0.projectspec">
					<filter.ref ref.id="filter_676552198350800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_TMS320TCI6486"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320TCI6486"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_1.projectspec">
					<filter.ref ref.id="filter_676552198350800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_TMS320TCI6486"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320TCI6486"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_676552198443500">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>TMS320TCI6486</tag>
					<tag>C64xx Multicore DSP</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_14.projectspec">
					<filter.ref ref.id="filter_676552198443500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_TMS320TCI6486"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320TCI6486"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_3.projectspec">
					<filter.ref ref.id="filter_676552198443500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_TMS320TCI6486"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320TCI6486"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_4.projectspec">
					<filter.ref ref.id="filter_676552198443500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_TMS320TCI6486"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320TCI6486"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_5.projectspec">
					<filter.ref ref.id="filter_676552198443500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_TMS320TCI6486"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320TCI6486"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_6.projectspec">
					<filter.ref ref.id="filter_676552198443500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_TMS320TCI6486"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320TCI6486"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_7.projectspec">
					<filter.ref ref.id="filter_676552198443500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_TMS320TCI6486"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320TCI6486"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_8.projectspec">
					<filter.ref ref.id="filter_676552198443500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_TMS320TCI6486"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320TCI6486"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_9.projectspec">
					<filter.ref ref.id="filter_676552198443500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_TMS320TCI6486"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320TCI6486"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_11.projectspec">
					<filter.ref ref.id="filter_676552198443500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_TMS320TCI6486"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320TCI6486"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_12.projectspec">
					<filter.ref ref.id="filter_676552198443500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_TMS320TCI6486"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320TCI6486"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_13.projectspec">
					<filter.ref ref.id="filter_676552198443500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_TMS320TCI6486"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320TCI6486"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_10.projectspec">
					<filter.ref ref.id="filter_676552198443500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_TMS320TCI6486"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320TCI6486"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="TMS320TCI6487" desc="TMS320TCI6487" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_676552199238200">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>TMS320TCI6487</tag>
					<tag>C64xx Multicore DSP</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_0.projectspec">
					<filter.ref ref.id="filter_676552199238200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_TMS320TCI6487"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320TCI6487"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_1.projectspec">
					<filter.ref ref.id="filter_676552199238200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_TMS320TCI6487"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320TCI6487"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_676552199349500">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>TMS320TCI6487</tag>
					<tag>C64xx Multicore DSP</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_14.projectspec">
					<filter.ref ref.id="filter_676552199349500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_TMS320TCI6487"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320TCI6487"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_3.projectspec">
					<filter.ref ref.id="filter_676552199349500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_TMS320TCI6487"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320TCI6487"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_4.projectspec">
					<filter.ref ref.id="filter_676552199349500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_TMS320TCI6487"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320TCI6487"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_5.projectspec">
					<filter.ref ref.id="filter_676552199349500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_TMS320TCI6487"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320TCI6487"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_6.projectspec">
					<filter.ref ref.id="filter_676552199349500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_TMS320TCI6487"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320TCI6487"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_7.projectspec">
					<filter.ref ref.id="filter_676552199349500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_TMS320TCI6487"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320TCI6487"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_8.projectspec">
					<filter.ref ref.id="filter_676552199349500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_TMS320TCI6487"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320TCI6487"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_9.projectspec">
					<filter.ref ref.id="filter_676552199349500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_TMS320TCI6487"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320TCI6487"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_11.projectspec">
					<filter.ref ref.id="filter_676552199349500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_TMS320TCI6487"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320TCI6487"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_12.projectspec">
					<filter.ref ref.id="filter_676552199349500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_TMS320TCI6487"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320TCI6487"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_13.projectspec">
					<filter.ref ref.id="filter_676552199349500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_TMS320TCI6487"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320TCI6487"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_10.projectspec">
					<filter.ref ref.id="filter_676552199349500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_TMS320TCI6487"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320TCI6487"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="TMS320TCI6488" desc="TMS320TCI6488" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_676552199947500">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>TMS320TCI6488</tag>
					<tag>C64xx Multicore DSP</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_0.projectspec">
					<filter.ref ref.id="filter_676552199947500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_TMS320TCI6488"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320TCI6488"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_1.projectspec">
					<filter.ref ref.id="filter_676552199947500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_TMS320TCI6488"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320TCI6488"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_676552200033700">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>TMS320TCI6488</tag>
					<tag>C64xx Multicore DSP</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_14.projectspec">
					<filter.ref ref.id="filter_676552200033700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_TMS320TCI6488"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320TCI6488"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_3.projectspec">
					<filter.ref ref.id="filter_676552200033700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_TMS320TCI6488"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320TCI6488"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_4.projectspec">
					<filter.ref ref.id="filter_676552200033700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_TMS320TCI6488"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320TCI6488"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_5.projectspec">
					<filter.ref ref.id="filter_676552200033700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_TMS320TCI6488"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320TCI6488"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_6.projectspec">
					<filter.ref ref.id="filter_676552200033700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_TMS320TCI6488"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320TCI6488"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_7.projectspec">
					<filter.ref ref.id="filter_676552200033700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_TMS320TCI6488"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320TCI6488"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_8.projectspec">
					<filter.ref ref.id="filter_676552200033700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_TMS320TCI6488"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320TCI6488"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_9.projectspec">
					<filter.ref ref.id="filter_676552200033700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_TMS320TCI6488"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320TCI6488"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_11.projectspec">
					<filter.ref ref.id="filter_676552200033700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_TMS320TCI6488"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320TCI6488"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_12.projectspec">
					<filter.ref ref.id="filter_676552200033700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_TMS320TCI6488"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320TCI6488"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_13.projectspec">
					<filter.ref ref.id="filter_676552200033700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_TMS320TCI6488"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320TCI6488"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_10.projectspec">
					<filter.ref ref.id="filter_676552200033700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_TMS320TCI6488"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320TCI6488"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
		</contents>
		<contents name="C66xx Multicore DSP" desc="C66xx Multicore DSP" icon="plugin://icons/obj16/devices.png">
			<contents name="TCI6608" desc="TCI6608" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_676552200652500">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>TCI6608</tag>
					<tag>C66xx Multicore DSP</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_0.projectspec">
					<filter.ref ref.id="filter_676552200652500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_TCI6608"/>
							<attribute key="device.variant" value="TMS320C66XX.TCI6608"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_1.projectspec">
					<filter.ref ref.id="filter_676552200652500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_TCI6608"/>
							<attribute key="device.variant" value="TMS320C66XX.TCI6608"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_676552200733800">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>TCI6608</tag>
					<tag>C66xx Multicore DSP</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_14.projectspec">
					<filter.ref ref.id="filter_676552200733800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_TCI6608"/>
							<attribute key="device.variant" value="TMS320C66XX.TCI6608"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_3.projectspec">
					<filter.ref ref.id="filter_676552200733800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_TCI6608"/>
							<attribute key="device.variant" value="TMS320C66XX.TCI6608"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_4.projectspec">
					<filter.ref ref.id="filter_676552200733800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_TCI6608"/>
							<attribute key="device.variant" value="TMS320C66XX.TCI6608"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_5.projectspec">
					<filter.ref ref.id="filter_676552200733800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_TCI6608"/>
							<attribute key="device.variant" value="TMS320C66XX.TCI6608"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_6.projectspec">
					<filter.ref ref.id="filter_676552200733800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_TCI6608"/>
							<attribute key="device.variant" value="TMS320C66XX.TCI6608"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_7.projectspec">
					<filter.ref ref.id="filter_676552200733800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_TCI6608"/>
							<attribute key="device.variant" value="TMS320C66XX.TCI6608"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_8.projectspec">
					<filter.ref ref.id="filter_676552200733800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_TCI6608"/>
							<attribute key="device.variant" value="TMS320C66XX.TCI6608"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_9.projectspec">
					<filter.ref ref.id="filter_676552200733800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_TCI6608"/>
							<attribute key="device.variant" value="TMS320C66XX.TCI6608"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_11.projectspec">
					<filter.ref ref.id="filter_676552200733800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_TCI6608"/>
							<attribute key="device.variant" value="TMS320C66XX.TCI6608"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_12.projectspec">
					<filter.ref ref.id="filter_676552200733800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_TCI6608"/>
							<attribute key="device.variant" value="TMS320C66XX.TCI6608"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_13.projectspec">
					<filter.ref ref.id="filter_676552200733800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_TCI6608"/>
							<attribute key="device.variant" value="TMS320C66XX.TCI6608"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_10.projectspec">
					<filter.ref ref.id="filter_676552200733800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_TCI6608"/>
							<attribute key="device.variant" value="TMS320C66XX.TCI6608"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="TCI6614" desc="TCI6614" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_676552201273000">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>TCI6614</tag>
					<tag>C66xx Multicore DSP</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_0.projectspec">
					<filter.ref ref.id="filter_676552201273000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_TCI6614_TMS320C66XX"/>
							<attribute key="device.variant" value="TMS320C66XX.TCI6614"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_1.projectspec">
					<filter.ref ref.id="filter_676552201273000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_TCI6614_TMS320C66XX"/>
							<attribute key="device.variant" value="TMS320C66XX.TCI6614"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_676552201374200">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>TCI6614</tag>
					<tag>C66xx Multicore DSP</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_14.projectspec">
					<filter.ref ref.id="filter_676552201374200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_TCI6614_TMS320C66XX"/>
							<attribute key="device.variant" value="TMS320C66XX.TCI6614"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_3.projectspec">
					<filter.ref ref.id="filter_676552201374200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_TCI6614_TMS320C66XX"/>
							<attribute key="device.variant" value="TMS320C66XX.TCI6614"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_4.projectspec">
					<filter.ref ref.id="filter_676552201374200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_TCI6614_TMS320C66XX"/>
							<attribute key="device.variant" value="TMS320C66XX.TCI6614"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_5.projectspec">
					<filter.ref ref.id="filter_676552201374200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_TCI6614_TMS320C66XX"/>
							<attribute key="device.variant" value="TMS320C66XX.TCI6614"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_6.projectspec">
					<filter.ref ref.id="filter_676552201374200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_TCI6614_TMS320C66XX"/>
							<attribute key="device.variant" value="TMS320C66XX.TCI6614"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_7.projectspec">
					<filter.ref ref.id="filter_676552201374200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_TCI6614_TMS320C66XX"/>
							<attribute key="device.variant" value="TMS320C66XX.TCI6614"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_8.projectspec">
					<filter.ref ref.id="filter_676552201374200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_TCI6614_TMS320C66XX"/>
							<attribute key="device.variant" value="TMS320C66XX.TCI6614"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_9.projectspec">
					<filter.ref ref.id="filter_676552201374200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_TCI6614_TMS320C66XX"/>
							<attribute key="device.variant" value="TMS320C66XX.TCI6614"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_11.projectspec">
					<filter.ref ref.id="filter_676552201374200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_TCI6614_TMS320C66XX"/>
							<attribute key="device.variant" value="TMS320C66XX.TCI6614"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_12.projectspec">
					<filter.ref ref.id="filter_676552201374200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_TCI6614_TMS320C66XX"/>
							<attribute key="device.variant" value="TMS320C66XX.TCI6614"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_13.projectspec">
					<filter.ref ref.id="filter_676552201374200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_TCI6614_TMS320C66XX"/>
							<attribute key="device.variant" value="TMS320C66XX.TCI6614"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_10.projectspec">
					<filter.ref ref.id="filter_676552201374200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_TCI6614_TMS320C66XX"/>
							<attribute key="device.variant" value="TMS320C66XX.TCI6614"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="TCI6616" desc="TCI6616" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_676552201948000">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>TCI6616</tag>
					<tag>C66xx Multicore DSP</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_0.projectspec">
					<filter.ref ref.id="filter_676552201948000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_TCI6616"/>
							<attribute key="device.variant" value="TMS320C66XX.TCI6616"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_1.projectspec">
					<filter.ref ref.id="filter_676552201948000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_TCI6616"/>
							<attribute key="device.variant" value="TMS320C66XX.TCI6616"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_676552202031800">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>TCI6616</tag>
					<tag>C66xx Multicore DSP</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_14.projectspec">
					<filter.ref ref.id="filter_676552202031800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_TCI6616"/>
							<attribute key="device.variant" value="TMS320C66XX.TCI6616"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_3.projectspec">
					<filter.ref ref.id="filter_676552202031800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_TCI6616"/>
							<attribute key="device.variant" value="TMS320C66XX.TCI6616"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_4.projectspec">
					<filter.ref ref.id="filter_676552202031800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_TCI6616"/>
							<attribute key="device.variant" value="TMS320C66XX.TCI6616"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_5.projectspec">
					<filter.ref ref.id="filter_676552202031800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_TCI6616"/>
							<attribute key="device.variant" value="TMS320C66XX.TCI6616"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_6.projectspec">
					<filter.ref ref.id="filter_676552202031800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_TCI6616"/>
							<attribute key="device.variant" value="TMS320C66XX.TCI6616"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_7.projectspec">
					<filter.ref ref.id="filter_676552202031800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_TCI6616"/>
							<attribute key="device.variant" value="TMS320C66XX.TCI6616"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_8.projectspec">
					<filter.ref ref.id="filter_676552202031800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_TCI6616"/>
							<attribute key="device.variant" value="TMS320C66XX.TCI6616"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_9.projectspec">
					<filter.ref ref.id="filter_676552202031800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_TCI6616"/>
							<attribute key="device.variant" value="TMS320C66XX.TCI6616"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_11.projectspec">
					<filter.ref ref.id="filter_676552202031800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_TCI6616"/>
							<attribute key="device.variant" value="TMS320C66XX.TCI6616"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_12.projectspec">
					<filter.ref ref.id="filter_676552202031800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_TCI6616"/>
							<attribute key="device.variant" value="TMS320C66XX.TCI6616"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_13.projectspec">
					<filter.ref ref.id="filter_676552202031800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_TCI6616"/>
							<attribute key="device.variant" value="TMS320C66XX.TCI6616"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_10.projectspec">
					<filter.ref ref.id="filter_676552202031800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_TCI6616"/>
							<attribute key="device.variant" value="TMS320C66XX.TCI6616"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="TCI6618" desc="TCI6618" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_676552204566200">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>TCI6618</tag>
					<tag>C66xx Multicore DSP</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_0.projectspec">
					<filter.ref ref.id="filter_676552204566200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_TCI6618"/>
							<attribute key="device.variant" value="TMS320C66XX.TCI6618"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_1.projectspec">
					<filter.ref ref.id="filter_676552204566200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_TCI6618"/>
							<attribute key="device.variant" value="TMS320C66XX.TCI6618"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_676552204686100">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>TCI6618</tag>
					<tag>C66xx Multicore DSP</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_14.projectspec">
					<filter.ref ref.id="filter_676552204686100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_TCI6618"/>
							<attribute key="device.variant" value="TMS320C66XX.TCI6618"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_3.projectspec">
					<filter.ref ref.id="filter_676552204686100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_TCI6618"/>
							<attribute key="device.variant" value="TMS320C66XX.TCI6618"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_4.projectspec">
					<filter.ref ref.id="filter_676552204686100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_TCI6618"/>
							<attribute key="device.variant" value="TMS320C66XX.TCI6618"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_5.projectspec">
					<filter.ref ref.id="filter_676552204686100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_TCI6618"/>
							<attribute key="device.variant" value="TMS320C66XX.TCI6618"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_6.projectspec">
					<filter.ref ref.id="filter_676552204686100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_TCI6618"/>
							<attribute key="device.variant" value="TMS320C66XX.TCI6618"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_7.projectspec">
					<filter.ref ref.id="filter_676552204686100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_TCI6618"/>
							<attribute key="device.variant" value="TMS320C66XX.TCI6618"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_8.projectspec">
					<filter.ref ref.id="filter_676552204686100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_TCI6618"/>
							<attribute key="device.variant" value="TMS320C66XX.TCI6618"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_9.projectspec">
					<filter.ref ref.id="filter_676552204686100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_TCI6618"/>
							<attribute key="device.variant" value="TMS320C66XX.TCI6618"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_11.projectspec">
					<filter.ref ref.id="filter_676552204686100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_TCI6618"/>
							<attribute key="device.variant" value="TMS320C66XX.TCI6618"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_12.projectspec">
					<filter.ref ref.id="filter_676552204686100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_TCI6618"/>
							<attribute key="device.variant" value="TMS320C66XX.TCI6618"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_13.projectspec">
					<filter.ref ref.id="filter_676552204686100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_TCI6618"/>
							<attribute key="device.variant" value="TMS320C66XX.TCI6618"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_10.projectspec">
					<filter.ref ref.id="filter_676552204686100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_TCI6618"/>
							<attribute key="device.variant" value="TMS320C66XX.TCI6618"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="TMS320C6654" desc="TMS320C6654" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_676552205456400">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>TMS320C6654</tag>
					<tag>C66xx Multicore DSP</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_0.projectspec">
					<filter.ref ref.id="filter_676552205456400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_TMS320C6654"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6654"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_1.projectspec">
					<filter.ref ref.id="filter_676552205456400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_TMS320C6654"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6654"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_676552205535800">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>TMS320C6654</tag>
					<tag>C66xx Multicore DSP</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_14.projectspec">
					<filter.ref ref.id="filter_676552205535800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_TMS320C6654"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6654"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_3.projectspec">
					<filter.ref ref.id="filter_676552205535800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_TMS320C6654"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6654"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_4.projectspec">
					<filter.ref ref.id="filter_676552205535800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_TMS320C6654"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6654"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_5.projectspec">
					<filter.ref ref.id="filter_676552205535800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_TMS320C6654"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6654"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_6.projectspec">
					<filter.ref ref.id="filter_676552205535800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_TMS320C6654"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6654"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_7.projectspec">
					<filter.ref ref.id="filter_676552205535800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_TMS320C6654"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6654"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_8.projectspec">
					<filter.ref ref.id="filter_676552205535800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_TMS320C6654"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6654"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_9.projectspec">
					<filter.ref ref.id="filter_676552205535800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_TMS320C6654"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6654"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_11.projectspec">
					<filter.ref ref.id="filter_676552205535800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_TMS320C6654"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6654"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_12.projectspec">
					<filter.ref ref.id="filter_676552205535800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_TMS320C6654"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6654"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_13.projectspec">
					<filter.ref ref.id="filter_676552205535800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_TMS320C6654"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6654"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_10.projectspec">
					<filter.ref ref.id="filter_676552205535800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_TMS320C6654"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6654"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="TMS320C6655" desc="TMS320C6655" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_676552206071000">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>TMS320C6655</tag>
					<tag>C66xx Multicore DSP</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_0.projectspec">
					<filter.ref ref.id="filter_676552206071000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_TMS320C6655"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6655"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_1.projectspec">
					<filter.ref ref.id="filter_676552206071000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_TMS320C6655"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6655"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_676552206149000">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>TMS320C6655</tag>
					<tag>C66xx Multicore DSP</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_14.projectspec">
					<filter.ref ref.id="filter_676552206149000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_TMS320C6655"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6655"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_3.projectspec">
					<filter.ref ref.id="filter_676552206149000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_TMS320C6655"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6655"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_4.projectspec">
					<filter.ref ref.id="filter_676552206149000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_TMS320C6655"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6655"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_5.projectspec">
					<filter.ref ref.id="filter_676552206149000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_TMS320C6655"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6655"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_6.projectspec">
					<filter.ref ref.id="filter_676552206149000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_TMS320C6655"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6655"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_7.projectspec">
					<filter.ref ref.id="filter_676552206149000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_TMS320C6655"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6655"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_8.projectspec">
					<filter.ref ref.id="filter_676552206149000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_TMS320C6655"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6655"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_9.projectspec">
					<filter.ref ref.id="filter_676552206149000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_TMS320C6655"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6655"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_11.projectspec">
					<filter.ref ref.id="filter_676552206149000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_TMS320C6655"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6655"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_12.projectspec">
					<filter.ref ref.id="filter_676552206149000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_TMS320C6655"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6655"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_13.projectspec">
					<filter.ref ref.id="filter_676552206149000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_TMS320C6655"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6655"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_10.projectspec">
					<filter.ref ref.id="filter_676552206149000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_TMS320C6655"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6655"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="TMS320C6657" desc="TMS320C6657" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_676552206680900">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>TMS320C6657</tag>
					<tag>C66xx Multicore DSP</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_0.projectspec">
					<filter.ref ref.id="filter_676552206680900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_TMS320C6657"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6657"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_1.projectspec">
					<filter.ref ref.id="filter_676552206680900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_TMS320C6657"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6657"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_676552206759300">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>TMS320C6657</tag>
					<tag>C66xx Multicore DSP</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_14.projectspec">
					<filter.ref ref.id="filter_676552206759300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_TMS320C6657"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6657"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_3.projectspec">
					<filter.ref ref.id="filter_676552206759300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_TMS320C6657"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6657"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_4.projectspec">
					<filter.ref ref.id="filter_676552206759300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_TMS320C6657"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6657"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_5.projectspec">
					<filter.ref ref.id="filter_676552206759300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_TMS320C6657"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6657"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_6.projectspec">
					<filter.ref ref.id="filter_676552206759300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_TMS320C6657"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6657"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_7.projectspec">
					<filter.ref ref.id="filter_676552206759300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_TMS320C6657"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6657"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_8.projectspec">
					<filter.ref ref.id="filter_676552206759300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_TMS320C6657"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6657"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_9.projectspec">
					<filter.ref ref.id="filter_676552206759300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_TMS320C6657"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6657"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_11.projectspec">
					<filter.ref ref.id="filter_676552206759300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_TMS320C6657"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6657"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_12.projectspec">
					<filter.ref ref.id="filter_676552206759300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_TMS320C6657"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6657"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_13.projectspec">
					<filter.ref ref.id="filter_676552206759300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_TMS320C6657"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6657"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_10.projectspec">
					<filter.ref ref.id="filter_676552206759300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_TMS320C6657"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6657"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="TMS320C6670" desc="TMS320C6670" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_676552207290000">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>TMS320C6670</tag>
					<tag>C66xx Multicore DSP</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_0.projectspec">
					<filter.ref ref.id="filter_676552207290000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_TMS320C6670"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6670"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_1.projectspec">
					<filter.ref ref.id="filter_676552207290000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_TMS320C6670"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6670"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_676552207369000">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>TMS320C6670</tag>
					<tag>C66xx Multicore DSP</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_14.projectspec">
					<filter.ref ref.id="filter_676552207369000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_TMS320C6670"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6670"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_3.projectspec">
					<filter.ref ref.id="filter_676552207369000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_TMS320C6670"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6670"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_4.projectspec">
					<filter.ref ref.id="filter_676552207369000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_TMS320C6670"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6670"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_5.projectspec">
					<filter.ref ref.id="filter_676552207369000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_TMS320C6670"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6670"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_6.projectspec">
					<filter.ref ref.id="filter_676552207369000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_TMS320C6670"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6670"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_7.projectspec">
					<filter.ref ref.id="filter_676552207369000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_TMS320C6670"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6670"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_8.projectspec">
					<filter.ref ref.id="filter_676552207369000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_TMS320C6670"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6670"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_9.projectspec">
					<filter.ref ref.id="filter_676552207369000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_TMS320C6670"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6670"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_11.projectspec">
					<filter.ref ref.id="filter_676552207369000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_TMS320C6670"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6670"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_12.projectspec">
					<filter.ref ref.id="filter_676552207369000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_TMS320C6670"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6670"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_13.projectspec">
					<filter.ref ref.id="filter_676552207369000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_TMS320C6670"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6670"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_10.projectspec">
					<filter.ref ref.id="filter_676552207369000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_TMS320C6670"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6670"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="TMS320C6671" desc="TMS320C6671" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_676552207934200">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>TMS320C6671</tag>
					<tag>C66xx Multicore DSP</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_0.projectspec">
					<filter.ref ref.id="filter_676552207934200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_TMS320C6671"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6671"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_1.projectspec">
					<filter.ref ref.id="filter_676552207934200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_TMS320C6671"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6671"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_676552208012500">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>TMS320C6671</tag>
					<tag>C66xx Multicore DSP</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_14.projectspec">
					<filter.ref ref.id="filter_676552208012500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_TMS320C6671"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6671"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_3.projectspec">
					<filter.ref ref.id="filter_676552208012500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_TMS320C6671"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6671"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_4.projectspec">
					<filter.ref ref.id="filter_676552208012500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_TMS320C6671"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6671"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_5.projectspec">
					<filter.ref ref.id="filter_676552208012500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_TMS320C6671"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6671"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_6.projectspec">
					<filter.ref ref.id="filter_676552208012500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_TMS320C6671"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6671"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_7.projectspec">
					<filter.ref ref.id="filter_676552208012500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_TMS320C6671"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6671"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_8.projectspec">
					<filter.ref ref.id="filter_676552208012500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_TMS320C6671"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6671"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_9.projectspec">
					<filter.ref ref.id="filter_676552208012500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_TMS320C6671"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6671"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_11.projectspec">
					<filter.ref ref.id="filter_676552208012500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_TMS320C6671"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6671"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_12.projectspec">
					<filter.ref ref.id="filter_676552208012500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_TMS320C6671"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6671"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_13.projectspec">
					<filter.ref ref.id="filter_676552208012500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_TMS320C6671"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6671"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_10.projectspec">
					<filter.ref ref.id="filter_676552208012500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_TMS320C6671"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6671"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="TMS320C6672" desc="TMS320C6672" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_676552208555500">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>TMS320C6672</tag>
					<tag>C66xx Multicore DSP</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_0.projectspec">
					<filter.ref ref.id="filter_676552208555500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_TMS320C6672"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6672"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_1.projectspec">
					<filter.ref ref.id="filter_676552208555500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_TMS320C6672"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6672"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_676552208632200">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>TMS320C6672</tag>
					<tag>C66xx Multicore DSP</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_14.projectspec">
					<filter.ref ref.id="filter_676552208632200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_TMS320C6672"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6672"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_3.projectspec">
					<filter.ref ref.id="filter_676552208632200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_TMS320C6672"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6672"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_4.projectspec">
					<filter.ref ref.id="filter_676552208632200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_TMS320C6672"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6672"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_5.projectspec">
					<filter.ref ref.id="filter_676552208632200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_TMS320C6672"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6672"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_6.projectspec">
					<filter.ref ref.id="filter_676552208632200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_TMS320C6672"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6672"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_7.projectspec">
					<filter.ref ref.id="filter_676552208632200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_TMS320C6672"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6672"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_8.projectspec">
					<filter.ref ref.id="filter_676552208632200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_TMS320C6672"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6672"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_9.projectspec">
					<filter.ref ref.id="filter_676552208632200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_TMS320C6672"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6672"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_11.projectspec">
					<filter.ref ref.id="filter_676552208632200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_TMS320C6672"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6672"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_12.projectspec">
					<filter.ref ref.id="filter_676552208632200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_TMS320C6672"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6672"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_13.projectspec">
					<filter.ref ref.id="filter_676552208632200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_TMS320C6672"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6672"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_10.projectspec">
					<filter.ref ref.id="filter_676552208632200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_TMS320C6672"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6672"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="TMS320C6674" desc="TMS320C6674" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_676552209154000">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>TMS320C6674</tag>
					<tag>C66xx Multicore DSP</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_0.projectspec">
					<filter.ref ref.id="filter_676552209154000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_TMS320C6674"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6674"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_1.projectspec">
					<filter.ref ref.id="filter_676552209154000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_TMS320C6674"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6674"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_676552209232200">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>TMS320C6674</tag>
					<tag>C66xx Multicore DSP</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_14.projectspec">
					<filter.ref ref.id="filter_676552209232200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_TMS320C6674"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6674"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_3.projectspec">
					<filter.ref ref.id="filter_676552209232200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_TMS320C6674"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6674"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_4.projectspec">
					<filter.ref ref.id="filter_676552209232200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_TMS320C6674"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6674"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_5.projectspec">
					<filter.ref ref.id="filter_676552209232200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_TMS320C6674"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6674"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_6.projectspec">
					<filter.ref ref.id="filter_676552209232200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_TMS320C6674"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6674"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_7.projectspec">
					<filter.ref ref.id="filter_676552209232200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_TMS320C6674"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6674"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_8.projectspec">
					<filter.ref ref.id="filter_676552209232200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_TMS320C6674"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6674"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_9.projectspec">
					<filter.ref ref.id="filter_676552209232200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_TMS320C6674"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6674"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_11.projectspec">
					<filter.ref ref.id="filter_676552209232200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_TMS320C6674"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6674"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_12.projectspec">
					<filter.ref ref.id="filter_676552209232200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_TMS320C6674"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6674"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_13.projectspec">
					<filter.ref ref.id="filter_676552209232200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_TMS320C6674"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6674"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_10.projectspec">
					<filter.ref ref.id="filter_676552209232200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_TMS320C6674"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6674"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="TMS320C6678" desc="TMS320C6678" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_676552210601000">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>TMS320C6678</tag>
					<tag>C66xx Multicore DSP</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_0.projectspec">
					<filter.ref ref.id="filter_676552210601000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_TMS320C6678"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6678"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_1.projectspec">
					<filter.ref ref.id="filter_676552210601000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_TMS320C6678"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6678"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_676552210679700">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>TMS320C6678</tag>
					<tag>C66xx Multicore DSP</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_14.projectspec">
					<filter.ref ref.id="filter_676552210679700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_TMS320C6678"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6678"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_3.projectspec">
					<filter.ref ref.id="filter_676552210679700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_TMS320C6678"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6678"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_4.projectspec">
					<filter.ref ref.id="filter_676552210679700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_TMS320C6678"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6678"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_5.projectspec">
					<filter.ref ref.id="filter_676552210679700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_TMS320C6678"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6678"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_6.projectspec">
					<filter.ref ref.id="filter_676552210679700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_TMS320C6678"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6678"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_7.projectspec">
					<filter.ref ref.id="filter_676552210679700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_TMS320C6678"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6678"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_8.projectspec">
					<filter.ref ref.id="filter_676552210679700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_TMS320C6678"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6678"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_9.projectspec">
					<filter.ref ref.id="filter_676552210679700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_TMS320C6678"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6678"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_11.projectspec">
					<filter.ref ref.id="filter_676552210679700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_TMS320C6678"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6678"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_12.projectspec">
					<filter.ref ref.id="filter_676552210679700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_TMS320C6678"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6678"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_13.projectspec">
					<filter.ref ref.id="filter_676552210679700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_TMS320C6678"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6678"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_10.projectspec">
					<filter.ref ref.id="filter_676552210679700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_TMS320C6678"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6678"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
		</contents>
		<contents name="C674x Floating-point DSP" desc="C674x Floating-point DSP" icon="plugin://icons/obj16/devices.png">
			<contents name="EVMC6747" desc="EVMC6747" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_676552215117900">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>EVMC6747</tag>
					<tag>C674x Floating-point DSP</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_0.projectspec">
					<filter.ref ref.id="filter_676552215117900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_EVMC6747"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6747.EVMC6747"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_1.projectspec">
					<filter.ref ref.id="filter_676552215117900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_EVMC6747"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6747.EVMC6747"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_676552215219600">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>EVMC6747</tag>
					<tag>C674x Floating-point DSP</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_14.projectspec">
					<filter.ref ref.id="filter_676552215219600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_EVMC6747"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6747.EVMC6747"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_3.projectspec">
					<filter.ref ref.id="filter_676552215219600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_EVMC6747"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6747.EVMC6747"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_4.projectspec">
					<filter.ref ref.id="filter_676552215219600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_EVMC6747"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6747.EVMC6747"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_5.projectspec">
					<filter.ref ref.id="filter_676552215219600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_EVMC6747"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6747.EVMC6747"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_6.projectspec">
					<filter.ref ref.id="filter_676552215219600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_EVMC6747"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6747.EVMC6747"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_7.projectspec">
					<filter.ref ref.id="filter_676552215219600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_EVMC6747"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6747.EVMC6747"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_8.projectspec">
					<filter.ref ref.id="filter_676552215219600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_EVMC6747"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6747.EVMC6747"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_9.projectspec">
					<filter.ref ref.id="filter_676552215219600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_EVMC6747"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6747.EVMC6747"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_11.projectspec">
					<filter.ref ref.id="filter_676552215219600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_EVMC6747"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6747.EVMC6747"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_12.projectspec">
					<filter.ref ref.id="filter_676552215219600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_EVMC6747"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6747.EVMC6747"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_13.projectspec">
					<filter.ref ref.id="filter_676552215219600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_EVMC6747"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6747.EVMC6747"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_10.projectspec">
					<filter.ref ref.id="filter_676552215219600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_EVMC6747"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6747.EVMC6747"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="EVMC6748" desc="EVMC6748" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_676552217612000">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>EVMC6748</tag>
					<tag>C674x Floating-point DSP</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_0.projectspec">
					<filter.ref ref.id="filter_676552217612000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_EVMC6748"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6748.EVMC6748"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_1.projectspec">
					<filter.ref ref.id="filter_676552217612000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_EVMC6748"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6748.EVMC6748"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_676552217710800">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>EVMC6748</tag>
					<tag>C674x Floating-point DSP</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_14.projectspec">
					<filter.ref ref.id="filter_676552217710800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_EVMC6748"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6748.EVMC6748"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_3.projectspec">
					<filter.ref ref.id="filter_676552217710800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_EVMC6748"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6748.EVMC6748"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_4.projectspec">
					<filter.ref ref.id="filter_676552217710800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_EVMC6748"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6748.EVMC6748"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_5.projectspec">
					<filter.ref ref.id="filter_676552217710800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_EVMC6748"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6748.EVMC6748"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_6.projectspec">
					<filter.ref ref.id="filter_676552217710800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_EVMC6748"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6748.EVMC6748"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_7.projectspec">
					<filter.ref ref.id="filter_676552217710800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_EVMC6748"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6748.EVMC6748"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_8.projectspec">
					<filter.ref ref.id="filter_676552217710800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_EVMC6748"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6748.EVMC6748"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_9.projectspec">
					<filter.ref ref.id="filter_676552217710800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_EVMC6748"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6748.EVMC6748"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_11.projectspec">
					<filter.ref ref.id="filter_676552217710800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_EVMC6748"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6748.EVMC6748"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_12.projectspec">
					<filter.ref ref.id="filter_676552217710800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_EVMC6748"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6748.EVMC6748"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_13.projectspec">
					<filter.ref ref.id="filter_676552217710800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_EVMC6748"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6748.EVMC6748"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_10.projectspec">
					<filter.ref ref.id="filter_676552217710800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_EVMC6748"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6748.EVMC6748"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="LCDKC6748" desc="LCDKC6748" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_676552218332500">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>LCDKC6748</tag>
					<tag>C674x Floating-point DSP</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_0.projectspec">
					<filter.ref ref.id="filter_676552218332500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_LCDKC6748"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6748.LCDKC6748"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_1.projectspec">
					<filter.ref ref.id="filter_676552218332500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_LCDKC6748"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6748.LCDKC6748"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_676552218428700">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>LCDKC6748</tag>
					<tag>C674x Floating-point DSP</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_14.projectspec">
					<filter.ref ref.id="filter_676552218428700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_LCDKC6748"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6748.LCDKC6748"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_3.projectspec">
					<filter.ref ref.id="filter_676552218428700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_LCDKC6748"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6748.LCDKC6748"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_4.projectspec">
					<filter.ref ref.id="filter_676552218428700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_LCDKC6748"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6748.LCDKC6748"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_5.projectspec">
					<filter.ref ref.id="filter_676552218428700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_LCDKC6748"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6748.LCDKC6748"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_6.projectspec">
					<filter.ref ref.id="filter_676552218428700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_LCDKC6748"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6748.LCDKC6748"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_7.projectspec">
					<filter.ref ref.id="filter_676552218428700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_LCDKC6748"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6748.LCDKC6748"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_8.projectspec">
					<filter.ref ref.id="filter_676552218428700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_LCDKC6748"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6748.LCDKC6748"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_9.projectspec">
					<filter.ref ref.id="filter_676552218428700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_LCDKC6748"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6748.LCDKC6748"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_11.projectspec">
					<filter.ref ref.id="filter_676552218428700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_LCDKC6748"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6748.LCDKC6748"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_12.projectspec">
					<filter.ref ref.id="filter_676552218428700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_LCDKC6748"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6748.LCDKC6748"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_13.projectspec">
					<filter.ref ref.id="filter_676552218428700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_LCDKC6748"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6748.LCDKC6748"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_10.projectspec">
					<filter.ref ref.id="filter_676552218428700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_LCDKC6748"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6748.LCDKC6748"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="TMS320C6742" desc="TMS320C6742" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_676552219048200">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>TMS320C6742</tag>
					<tag>C674x Floating-point DSP</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_0.projectspec">
					<filter.ref ref.id="filter_676552219048200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_TMS320C6742"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6742"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_1.projectspec">
					<filter.ref ref.id="filter_676552219048200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_TMS320C6742"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6742"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_676552219133400">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>TMS320C6742</tag>
					<tag>C674x Floating-point DSP</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_14.projectspec">
					<filter.ref ref.id="filter_676552219133400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_TMS320C6742"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6742"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_3.projectspec">
					<filter.ref ref.id="filter_676552219133400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_TMS320C6742"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6742"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_4.projectspec">
					<filter.ref ref.id="filter_676552219133400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_TMS320C6742"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6742"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_5.projectspec">
					<filter.ref ref.id="filter_676552219133400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_TMS320C6742"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6742"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_6.projectspec">
					<filter.ref ref.id="filter_676552219133400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_TMS320C6742"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6742"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_7.projectspec">
					<filter.ref ref.id="filter_676552219133400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_TMS320C6742"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6742"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_8.projectspec">
					<filter.ref ref.id="filter_676552219133400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_TMS320C6742"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6742"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_9.projectspec">
					<filter.ref ref.id="filter_676552219133400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_TMS320C6742"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6742"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_11.projectspec">
					<filter.ref ref.id="filter_676552219133400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_TMS320C6742"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6742"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_12.projectspec">
					<filter.ref ref.id="filter_676552219133400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_TMS320C6742"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6742"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_13.projectspec">
					<filter.ref ref.id="filter_676552219133400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_TMS320C6742"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6742"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_10.projectspec">
					<filter.ref ref.id="filter_676552219133400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_TMS320C6742"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6742"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="TMS320C6743" desc="TMS320C6743" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_676552219715200">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>TMS320C6743</tag>
					<tag>C674x Floating-point DSP</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_0.projectspec">
					<filter.ref ref.id="filter_676552219715200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_TMS320C6743"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6743"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_1.projectspec">
					<filter.ref ref.id="filter_676552219715200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_TMS320C6743"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6743"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_676552219796100">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>TMS320C6743</tag>
					<tag>C674x Floating-point DSP</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_14.projectspec">
					<filter.ref ref.id="filter_676552219796100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_TMS320C6743"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6743"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_3.projectspec">
					<filter.ref ref.id="filter_676552219796100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_TMS320C6743"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6743"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_4.projectspec">
					<filter.ref ref.id="filter_676552219796100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_TMS320C6743"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6743"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_5.projectspec">
					<filter.ref ref.id="filter_676552219796100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_TMS320C6743"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6743"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_6.projectspec">
					<filter.ref ref.id="filter_676552219796100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_TMS320C6743"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6743"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_7.projectspec">
					<filter.ref ref.id="filter_676552219796100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_TMS320C6743"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6743"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_8.projectspec">
					<filter.ref ref.id="filter_676552219796100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_TMS320C6743"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6743"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_9.projectspec">
					<filter.ref ref.id="filter_676552219796100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_TMS320C6743"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6743"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_11.projectspec">
					<filter.ref ref.id="filter_676552219796100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_TMS320C6743"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6743"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_12.projectspec">
					<filter.ref ref.id="filter_676552219796100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_TMS320C6743"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6743"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_13.projectspec">
					<filter.ref ref.id="filter_676552219796100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_TMS320C6743"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6743"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_10.projectspec">
					<filter.ref ref.id="filter_676552219796100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_TMS320C6743"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6743"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="TMS320C6745" desc="TMS320C6745" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_676552220359500">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>TMS320C6745</tag>
					<tag>C674x Floating-point DSP</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_0.projectspec">
					<filter.ref ref.id="filter_676552220359500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_TMS320C6745"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6745"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_1.projectspec">
					<filter.ref ref.id="filter_676552220359500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_TMS320C6745"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6745"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_676552220440700">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>TMS320C6745</tag>
					<tag>C674x Floating-point DSP</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_14.projectspec">
					<filter.ref ref.id="filter_676552220440700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_TMS320C6745"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6745"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_3.projectspec">
					<filter.ref ref.id="filter_676552220440700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_TMS320C6745"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6745"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_4.projectspec">
					<filter.ref ref.id="filter_676552220440700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_TMS320C6745"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6745"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_5.projectspec">
					<filter.ref ref.id="filter_676552220440700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_TMS320C6745"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6745"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_6.projectspec">
					<filter.ref ref.id="filter_676552220440700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_TMS320C6745"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6745"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_7.projectspec">
					<filter.ref ref.id="filter_676552220440700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_TMS320C6745"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6745"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_8.projectspec">
					<filter.ref ref.id="filter_676552220440700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_TMS320C6745"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6745"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_9.projectspec">
					<filter.ref ref.id="filter_676552220440700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_TMS320C6745"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6745"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_11.projectspec">
					<filter.ref ref.id="filter_676552220440700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_TMS320C6745"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6745"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_12.projectspec">
					<filter.ref ref.id="filter_676552220440700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_TMS320C6745"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6745"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_13.projectspec">
					<filter.ref ref.id="filter_676552220440700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_TMS320C6745"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6745"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_10.projectspec">
					<filter.ref ref.id="filter_676552220440700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_TMS320C6745"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6745"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="TMS320C6746" desc="TMS320C6746" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_676552220979100">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>TMS320C6746</tag>
					<tag>C674x Floating-point DSP</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_0.projectspec">
					<filter.ref ref.id="filter_676552220979100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_TMS320C6746"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6746"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_1.projectspec">
					<filter.ref ref.id="filter_676552220979100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_TMS320C6746"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6746"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_676552221057000">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>TMS320C6746</tag>
					<tag>C674x Floating-point DSP</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_14.projectspec">
					<filter.ref ref.id="filter_676552221057000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_TMS320C6746"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6746"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_3.projectspec">
					<filter.ref ref.id="filter_676552221057000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_TMS320C6746"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6746"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_4.projectspec">
					<filter.ref ref.id="filter_676552221057000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_TMS320C6746"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6746"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_5.projectspec">
					<filter.ref ref.id="filter_676552221057000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_TMS320C6746"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6746"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_6.projectspec">
					<filter.ref ref.id="filter_676552221057000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_TMS320C6746"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6746"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_7.projectspec">
					<filter.ref ref.id="filter_676552221057000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_TMS320C6746"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6746"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_8.projectspec">
					<filter.ref ref.id="filter_676552221057000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_TMS320C6746"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6746"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_9.projectspec">
					<filter.ref ref.id="filter_676552221057000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_TMS320C6746"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6746"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_11.projectspec">
					<filter.ref ref.id="filter_676552221057000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_TMS320C6746"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6746"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_12.projectspec">
					<filter.ref ref.id="filter_676552221057000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_TMS320C6746"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6746"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_13.projectspec">
					<filter.ref ref.id="filter_676552221057000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_TMS320C6746"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6746"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_10.projectspec">
					<filter.ref ref.id="filter_676552221057000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_TMS320C6746"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6746"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="TMS320C6747" desc="TMS320C6747" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_676552221596300">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>TMS320C6747</tag>
					<tag>C674x Floating-point DSP</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_0.projectspec">
					<filter.ref ref.id="filter_676552221596300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_TMS320C6747"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6747"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_1.projectspec">
					<filter.ref ref.id="filter_676552221596300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_TMS320C6747"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6747"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_676552221674900">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>TMS320C6747</tag>
					<tag>C674x Floating-point DSP</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_14.projectspec">
					<filter.ref ref.id="filter_676552221674900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_TMS320C6747"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6747"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_3.projectspec">
					<filter.ref ref.id="filter_676552221674900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_TMS320C6747"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6747"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_4.projectspec">
					<filter.ref ref.id="filter_676552221674900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_TMS320C6747"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6747"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_5.projectspec">
					<filter.ref ref.id="filter_676552221674900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_TMS320C6747"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6747"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_6.projectspec">
					<filter.ref ref.id="filter_676552221674900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_TMS320C6747"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6747"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_7.projectspec">
					<filter.ref ref.id="filter_676552221674900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_TMS320C6747"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6747"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_8.projectspec">
					<filter.ref ref.id="filter_676552221674900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_TMS320C6747"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6747"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_9.projectspec">
					<filter.ref ref.id="filter_676552221674900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_TMS320C6747"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6747"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_11.projectspec">
					<filter.ref ref.id="filter_676552221674900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_TMS320C6747"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6747"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_12.projectspec">
					<filter.ref ref.id="filter_676552221674900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_TMS320C6747"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6747"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_13.projectspec">
					<filter.ref ref.id="filter_676552221674900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_TMS320C6747"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6747"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_10.projectspec">
					<filter.ref ref.id="filter_676552221674900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_TMS320C6747"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6747"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="TMS320C6748" desc="TMS320C6748" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_676552222210600">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>TMS320C6748</tag>
					<tag>C674x Floating-point DSP</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_0.projectspec">
					<filter.ref ref.id="filter_676552222210600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_TMS320C6748"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6748"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_1.projectspec">
					<filter.ref ref.id="filter_676552222210600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_TMS320C6748"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6748"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_676552222300100">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>TMS320C6748</tag>
					<tag>C674x Floating-point DSP</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_14.projectspec">
					<filter.ref ref.id="filter_676552222300100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_TMS320C6748"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6748"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_3.projectspec">
					<filter.ref ref.id="filter_676552222300100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_TMS320C6748"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6748"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_4.projectspec">
					<filter.ref ref.id="filter_676552222300100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_TMS320C6748"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6748"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_5.projectspec">
					<filter.ref ref.id="filter_676552222300100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_TMS320C6748"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6748"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_6.projectspec">
					<filter.ref ref.id="filter_676552222300100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_TMS320C6748"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6748"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_7.projectspec">
					<filter.ref ref.id="filter_676552222300100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_TMS320C6748"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6748"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_8.projectspec">
					<filter.ref ref.id="filter_676552222300100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_TMS320C6748"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6748"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_9.projectspec">
					<filter.ref ref.id="filter_676552222300100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_TMS320C6748"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6748"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_11.projectspec">
					<filter.ref ref.id="filter_676552222300100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_TMS320C6748"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6748"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_12.projectspec">
					<filter.ref ref.id="filter_676552222300100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_TMS320C6748"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6748"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_13.projectspec">
					<filter.ref ref.id="filter_676552222300100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_TMS320C6748"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6748"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_10.projectspec">
					<filter.ref ref.id="filter_676552222300100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_TMS320C6748"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6748"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
		</contents>
		<contents name="DaVinci DM37xx" desc="DaVinci DM37xx" icon="plugin://icons/obj16/devices.png">
			<contents name="BeagleBoard_xM" desc="BeagleBoard_xM" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_676552224105600">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>BeagleBoard_xM</tag>
					<tag>DaVinci DM37xx</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_0.projectspec">
					<filter.ref ref.id="filter_676552224105600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_BeagleBoard_xM_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.DM3730.BeagleBoard_xM"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_1.projectspec">
					<filter.ref ref.id="filter_676552224105600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_BeagleBoard_xM_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.DM3730.BeagleBoard_xM"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_676552224193300">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>BeagleBoard_xM</tag>
					<tag>DaVinci DM37xx</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_14.projectspec">
					<filter.ref ref.id="filter_676552224193300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_BeagleBoard_xM_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.DM3730.BeagleBoard_xM"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_3.projectspec">
					<filter.ref ref.id="filter_676552224193300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_BeagleBoard_xM_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.DM3730.BeagleBoard_xM"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_4.projectspec">
					<filter.ref ref.id="filter_676552224193300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_BeagleBoard_xM_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.DM3730.BeagleBoard_xM"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_5.projectspec">
					<filter.ref ref.id="filter_676552224193300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_BeagleBoard_xM_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.DM3730.BeagleBoard_xM"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_6.projectspec">
					<filter.ref ref.id="filter_676552224193300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_BeagleBoard_xM_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.DM3730.BeagleBoard_xM"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_7.projectspec">
					<filter.ref ref.id="filter_676552224193300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_BeagleBoard_xM_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.DM3730.BeagleBoard_xM"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_8.projectspec">
					<filter.ref ref.id="filter_676552224193300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_BeagleBoard_xM_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.DM3730.BeagleBoard_xM"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_9.projectspec">
					<filter.ref ref.id="filter_676552224193300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_BeagleBoard_xM_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.DM3730.BeagleBoard_xM"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_11.projectspec">
					<filter.ref ref.id="filter_676552224193300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_BeagleBoard_xM_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.DM3730.BeagleBoard_xM"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_12.projectspec">
					<filter.ref ref.id="filter_676552224193300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_BeagleBoard_xM_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.DM3730.BeagleBoard_xM"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_13.projectspec">
					<filter.ref ref.id="filter_676552224193300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_BeagleBoard_xM_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.DM3730.BeagleBoard_xM"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_10.projectspec">
					<filter.ref ref.id="filter_676552224193300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_BeagleBoard_xM_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.DM3730.BeagleBoard_xM"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="DM3725" desc="DM3725" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_676552224836600">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>DM3725</tag>
					<tag>DaVinci DM37xx</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_0.projectspec">
					<filter.ref ref.id="filter_676552224836600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_DM3725_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.DM3725"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_1.projectspec">
					<filter.ref ref.id="filter_676552224836600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_DM3725_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.DM3725"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_676552224921900">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>DM3725</tag>
					<tag>DaVinci DM37xx</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_14.projectspec">
					<filter.ref ref.id="filter_676552224921900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_DM3725_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.DM3725"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_3.projectspec">
					<filter.ref ref.id="filter_676552224921900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_DM3725_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.DM3725"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_4.projectspec">
					<filter.ref ref.id="filter_676552224921900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_DM3725_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.DM3725"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_5.projectspec">
					<filter.ref ref.id="filter_676552224921900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_DM3725_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.DM3725"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_6.projectspec">
					<filter.ref ref.id="filter_676552224921900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_DM3725_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.DM3725"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_7.projectspec">
					<filter.ref ref.id="filter_676552224921900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_DM3725_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.DM3725"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_8.projectspec">
					<filter.ref ref.id="filter_676552224921900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_DM3725_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.DM3725"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_9.projectspec">
					<filter.ref ref.id="filter_676552224921900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_DM3725_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.DM3725"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_11.projectspec">
					<filter.ref ref.id="filter_676552224921900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_DM3725_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.DM3725"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_12.projectspec">
					<filter.ref ref.id="filter_676552224921900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_DM3725_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.DM3725"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_13.projectspec">
					<filter.ref ref.id="filter_676552224921900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_DM3725_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.DM3725"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_10.projectspec">
					<filter.ref ref.id="filter_676552224921900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_DM3725_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.DM3725"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="DM3730" desc="DM3730" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_676552225488100">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>DM3730</tag>
					<tag>DaVinci DM37xx</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_0.projectspec">
					<filter.ref ref.id="filter_676552225488100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_DM3730_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.DM3730"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_1.projectspec">
					<filter.ref ref.id="filter_676552225488100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_DM3730_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.DM3730"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_676552225567600">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>DM3730</tag>
					<tag>DaVinci DM37xx</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_14.projectspec">
					<filter.ref ref.id="filter_676552225567600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_DM3730_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.DM3730"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_3.projectspec">
					<filter.ref ref.id="filter_676552225567600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_DM3730_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.DM3730"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_4.projectspec">
					<filter.ref ref.id="filter_676552225567600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_DM3730_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.DM3730"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_5.projectspec">
					<filter.ref ref.id="filter_676552225567600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_DM3730_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.DM3730"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_6.projectspec">
					<filter.ref ref.id="filter_676552225567600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_DM3730_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.DM3730"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_7.projectspec">
					<filter.ref ref.id="filter_676552225567600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_DM3730_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.DM3730"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_8.projectspec">
					<filter.ref ref.id="filter_676552225567600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_DM3730_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.DM3730"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_9.projectspec">
					<filter.ref ref.id="filter_676552225567600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_DM3730_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.DM3730"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_11.projectspec">
					<filter.ref ref.id="filter_676552225567600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_DM3730_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.DM3730"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_12.projectspec">
					<filter.ref ref.id="filter_676552225567600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_DM3730_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.DM3730"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_13.projectspec">
					<filter.ref ref.id="filter_676552225567600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_DM3730_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.DM3730"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_10.projectspec">
					<filter.ref ref.id="filter_676552225567600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_DM3730_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.DM3730"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="EVMDM3730" desc="EVMDM3730" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_676552226128900">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>EVMDM3730</tag>
					<tag>DaVinci DM37xx</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_0.projectspec">
					<filter.ref ref.id="filter_676552226128900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_EVMDM3730_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.DM3730.EVMDM3730"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_1.projectspec">
					<filter.ref ref.id="filter_676552226128900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_EVMDM3730_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.DM3730.EVMDM3730"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_676552226212900">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>EVMDM3730</tag>
					<tag>DaVinci DM37xx</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_14.projectspec">
					<filter.ref ref.id="filter_676552226212900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_EVMDM3730_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.DM3730.EVMDM3730"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_3.projectspec">
					<filter.ref ref.id="filter_676552226212900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_EVMDM3730_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.DM3730.EVMDM3730"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_4.projectspec">
					<filter.ref ref.id="filter_676552226212900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_EVMDM3730_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.DM3730.EVMDM3730"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_5.projectspec">
					<filter.ref ref.id="filter_676552226212900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_EVMDM3730_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.DM3730.EVMDM3730"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_6.projectspec">
					<filter.ref ref.id="filter_676552226212900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_EVMDM3730_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.DM3730.EVMDM3730"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_7.projectspec">
					<filter.ref ref.id="filter_676552226212900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_EVMDM3730_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.DM3730.EVMDM3730"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_8.projectspec">
					<filter.ref ref.id="filter_676552226212900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_EVMDM3730_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.DM3730.EVMDM3730"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_9.projectspec">
					<filter.ref ref.id="filter_676552226212900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_EVMDM3730_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.DM3730.EVMDM3730"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_11.projectspec">
					<filter.ref ref.id="filter_676552226212900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_EVMDM3730_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.DM3730.EVMDM3730"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_12.projectspec">
					<filter.ref ref.id="filter_676552226212900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_EVMDM3730_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.DM3730.EVMDM3730"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_13.projectspec">
					<filter.ref ref.id="filter_676552226212900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_EVMDM3730_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.DM3730.EVMDM3730"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_10.projectspec">
					<filter.ref ref.id="filter_676552226212900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_EVMDM3730_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.DM3730.EVMDM3730"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
		</contents>
		<contents name="DaVinci DM643x" desc="DaVinci DM643x" icon="plugin://icons/obj16/devices.png">
			<contents name="EVMDM6437" desc="EVMDM6437" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_676552226847600">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>EVMDM6437</tag>
					<tag>DaVinci DM643x</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_0.projectspec">
					<filter.ref ref.id="filter_676552226847600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_EVMDM6437"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM6437.EVMDM6437"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_1.projectspec">
					<filter.ref ref.id="filter_676552226847600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_EVMDM6437"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM6437.EVMDM6437"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_676552226930300">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>EVMDM6437</tag>
					<tag>DaVinci DM643x</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_14.projectspec">
					<filter.ref ref.id="filter_676552226930300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_EVMDM6437"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM6437.EVMDM6437"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_3.projectspec">
					<filter.ref ref.id="filter_676552226930300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_EVMDM6437"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM6437.EVMDM6437"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_4.projectspec">
					<filter.ref ref.id="filter_676552226930300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_EVMDM6437"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM6437.EVMDM6437"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_5.projectspec">
					<filter.ref ref.id="filter_676552226930300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_EVMDM6437"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM6437.EVMDM6437"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_6.projectspec">
					<filter.ref ref.id="filter_676552226930300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_EVMDM6437"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM6437.EVMDM6437"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_7.projectspec">
					<filter.ref ref.id="filter_676552226930300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_EVMDM6437"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM6437.EVMDM6437"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_8.projectspec">
					<filter.ref ref.id="filter_676552226930300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_EVMDM6437"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM6437.EVMDM6437"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_9.projectspec">
					<filter.ref ref.id="filter_676552226930300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_EVMDM6437"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM6437.EVMDM6437"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_11.projectspec">
					<filter.ref ref.id="filter_676552226930300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_EVMDM6437"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM6437.EVMDM6437"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_12.projectspec">
					<filter.ref ref.id="filter_676552226930300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_EVMDM6437"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM6437.EVMDM6437"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_13.projectspec">
					<filter.ref ref.id="filter_676552226930300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_EVMDM6437"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM6437.EVMDM6437"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_10.projectspec">
					<filter.ref ref.id="filter_676552226930300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_EVMDM6437"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM6437.EVMDM6437"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="TMS320DM6431" desc="TMS320DM6431" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_676552227490200">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>TMS320DM6431</tag>
					<tag>DaVinci DM643x</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_0.projectspec">
					<filter.ref ref.id="filter_676552227490200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_TMS320DM6431"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM6431"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_1.projectspec">
					<filter.ref ref.id="filter_676552227490200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_TMS320DM6431"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM6431"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_676552227570300">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>TMS320DM6431</tag>
					<tag>DaVinci DM643x</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_14.projectspec">
					<filter.ref ref.id="filter_676552227570300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_TMS320DM6431"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM6431"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_3.projectspec">
					<filter.ref ref.id="filter_676552227570300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_TMS320DM6431"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM6431"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_4.projectspec">
					<filter.ref ref.id="filter_676552227570300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_TMS320DM6431"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM6431"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_5.projectspec">
					<filter.ref ref.id="filter_676552227570300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_TMS320DM6431"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM6431"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_6.projectspec">
					<filter.ref ref.id="filter_676552227570300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_TMS320DM6431"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM6431"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_7.projectspec">
					<filter.ref ref.id="filter_676552227570300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_TMS320DM6431"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM6431"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_8.projectspec">
					<filter.ref ref.id="filter_676552227570300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_TMS320DM6431"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM6431"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_9.projectspec">
					<filter.ref ref.id="filter_676552227570300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_TMS320DM6431"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM6431"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_11.projectspec">
					<filter.ref ref.id="filter_676552227570300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_TMS320DM6431"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM6431"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_12.projectspec">
					<filter.ref ref.id="filter_676552227570300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_TMS320DM6431"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM6431"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_13.projectspec">
					<filter.ref ref.id="filter_676552227570300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_TMS320DM6431"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM6431"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_10.projectspec">
					<filter.ref ref.id="filter_676552227570300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_TMS320DM6431"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM6431"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="TMS320DM6433" desc="TMS320DM6433" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_676552228136200">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>TMS320DM6433</tag>
					<tag>DaVinci DM643x</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_0.projectspec">
					<filter.ref ref.id="filter_676552228136200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_TMS320DM6433"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM6433"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_1.projectspec">
					<filter.ref ref.id="filter_676552228136200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_TMS320DM6433"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM6433"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_676552228222800">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>TMS320DM6433</tag>
					<tag>DaVinci DM643x</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_14.projectspec">
					<filter.ref ref.id="filter_676552228222800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_TMS320DM6433"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM6433"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_3.projectspec">
					<filter.ref ref.id="filter_676552228222800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_TMS320DM6433"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM6433"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_4.projectspec">
					<filter.ref ref.id="filter_676552228222800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_TMS320DM6433"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM6433"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_5.projectspec">
					<filter.ref ref.id="filter_676552228222800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_TMS320DM6433"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM6433"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_6.projectspec">
					<filter.ref ref.id="filter_676552228222800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_TMS320DM6433"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM6433"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_7.projectspec">
					<filter.ref ref.id="filter_676552228222800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_TMS320DM6433"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM6433"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_8.projectspec">
					<filter.ref ref.id="filter_676552228222800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_TMS320DM6433"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM6433"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_9.projectspec">
					<filter.ref ref.id="filter_676552228222800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_TMS320DM6433"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM6433"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_11.projectspec">
					<filter.ref ref.id="filter_676552228222800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_TMS320DM6433"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM6433"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_12.projectspec">
					<filter.ref ref.id="filter_676552228222800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_TMS320DM6433"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM6433"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_13.projectspec">
					<filter.ref ref.id="filter_676552228222800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_TMS320DM6433"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM6433"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_10.projectspec">
					<filter.ref ref.id="filter_676552228222800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_TMS320DM6433"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM6433"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="TMS320DM6435" desc="TMS320DM6435" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_676552229957300">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>TMS320DM6435</tag>
					<tag>DaVinci DM643x</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_0.projectspec">
					<filter.ref ref.id="filter_676552229957300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_TMS320DM6435"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM6435"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_1.projectspec">
					<filter.ref ref.id="filter_676552229957300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_TMS320DM6435"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM6435"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_676552230038300">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>TMS320DM6435</tag>
					<tag>DaVinci DM643x</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_14.projectspec">
					<filter.ref ref.id="filter_676552230038300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_TMS320DM6435"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM6435"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_3.projectspec">
					<filter.ref ref.id="filter_676552230038300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_TMS320DM6435"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM6435"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_4.projectspec">
					<filter.ref ref.id="filter_676552230038300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_TMS320DM6435"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM6435"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_5.projectspec">
					<filter.ref ref.id="filter_676552230038300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_TMS320DM6435"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM6435"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_6.projectspec">
					<filter.ref ref.id="filter_676552230038300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_TMS320DM6435"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM6435"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_7.projectspec">
					<filter.ref ref.id="filter_676552230038300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_TMS320DM6435"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM6435"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_8.projectspec">
					<filter.ref ref.id="filter_676552230038300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_TMS320DM6435"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM6435"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_9.projectspec">
					<filter.ref ref.id="filter_676552230038300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_TMS320DM6435"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM6435"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_11.projectspec">
					<filter.ref ref.id="filter_676552230038300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_TMS320DM6435"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM6435"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_12.projectspec">
					<filter.ref ref.id="filter_676552230038300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_TMS320DM6435"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM6435"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_13.projectspec">
					<filter.ref ref.id="filter_676552230038300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_TMS320DM6435"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM6435"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_10.projectspec">
					<filter.ref ref.id="filter_676552230038300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_TMS320DM6435"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM6435"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="TMS320DM6437" desc="TMS320DM6437" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_676552230746200">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>TMS320DM6437</tag>
					<tag>DaVinci DM643x</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_0.projectspec">
					<filter.ref ref.id="filter_676552230746200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_TMS320DM6437"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM6437"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_1.projectspec">
					<filter.ref ref.id="filter_676552230746200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_TMS320DM6437"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM6437"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_676552230847500">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>TMS320DM6437</tag>
					<tag>DaVinci DM643x</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_14.projectspec">
					<filter.ref ref.id="filter_676552230847500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_TMS320DM6437"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM6437"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_3.projectspec">
					<filter.ref ref.id="filter_676552230847500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_TMS320DM6437"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM6437"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_4.projectspec">
					<filter.ref ref.id="filter_676552230847500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_TMS320DM6437"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM6437"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_5.projectspec">
					<filter.ref ref.id="filter_676552230847500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_TMS320DM6437"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM6437"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_6.projectspec">
					<filter.ref ref.id="filter_676552230847500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_TMS320DM6437"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM6437"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_7.projectspec">
					<filter.ref ref.id="filter_676552230847500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_TMS320DM6437"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM6437"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_8.projectspec">
					<filter.ref ref.id="filter_676552230847500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_TMS320DM6437"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM6437"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_9.projectspec">
					<filter.ref ref.id="filter_676552230847500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_TMS320DM6437"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM6437"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_11.projectspec">
					<filter.ref ref.id="filter_676552230847500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_TMS320DM6437"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM6437"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_12.projectspec">
					<filter.ref ref.id="filter_676552230847500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_TMS320DM6437"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM6437"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_13.projectspec">
					<filter.ref ref.id="filter_676552230847500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_TMS320DM6437"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM6437"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_10.projectspec">
					<filter.ref ref.id="filter_676552230847500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_TMS320DM6437"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM6437"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
		</contents>
		<contents name="DaVinci DM644x" desc="DaVinci DM644x" icon="plugin://icons/obj16/devices.png">
			<contents name="EVMDM6446" desc="EVMDM6446" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_676552231777400">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>EVMDM6446</tag>
					<tag>DaVinci DM644x</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_0.projectspec">
					<filter.ref ref.id="filter_676552231777400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_EVMDM6446_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM6446.EVMDM6446"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_1.projectspec">
					<filter.ref ref.id="filter_676552231777400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_EVMDM6446_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM6446.EVMDM6446"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_676552231867500">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>EVMDM6446</tag>
					<tag>DaVinci DM644x</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_14.projectspec">
					<filter.ref ref.id="filter_676552231867500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_EVMDM6446_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM6446.EVMDM6446"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_3.projectspec">
					<filter.ref ref.id="filter_676552231867500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_EVMDM6446_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM6446.EVMDM6446"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_4.projectspec">
					<filter.ref ref.id="filter_676552231867500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_EVMDM6446_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM6446.EVMDM6446"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_5.projectspec">
					<filter.ref ref.id="filter_676552231867500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_EVMDM6446_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM6446.EVMDM6446"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_6.projectspec">
					<filter.ref ref.id="filter_676552231867500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_EVMDM6446_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM6446.EVMDM6446"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_7.projectspec">
					<filter.ref ref.id="filter_676552231867500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_EVMDM6446_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM6446.EVMDM6446"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_8.projectspec">
					<filter.ref ref.id="filter_676552231867500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_EVMDM6446_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM6446.EVMDM6446"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_9.projectspec">
					<filter.ref ref.id="filter_676552231867500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_EVMDM6446_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM6446.EVMDM6446"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_11.projectspec">
					<filter.ref ref.id="filter_676552231867500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_EVMDM6446_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM6446.EVMDM6446"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_12.projectspec">
					<filter.ref ref.id="filter_676552231867500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_EVMDM6446_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM6446.EVMDM6446"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_13.projectspec">
					<filter.ref ref.id="filter_676552231867500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_EVMDM6446_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM6446.EVMDM6446"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_10.projectspec">
					<filter.ref ref.id="filter_676552231867500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_EVMDM6446_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM6446.EVMDM6446"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="TMS320DM6441" desc="TMS320DM6441" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_676552232470900">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>TMS320DM6441</tag>
					<tag>DaVinci DM644x</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_0.projectspec">
					<filter.ref ref.id="filter_676552232470900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_TMS320DM6441_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM6441"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_1.projectspec">
					<filter.ref ref.id="filter_676552232470900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_TMS320DM6441_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM6441"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_676552232562800">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>TMS320DM6441</tag>
					<tag>DaVinci DM644x</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_14.projectspec">
					<filter.ref ref.id="filter_676552232562800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_TMS320DM6441_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM6441"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_3.projectspec">
					<filter.ref ref.id="filter_676552232562800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_TMS320DM6441_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM6441"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_4.projectspec">
					<filter.ref ref.id="filter_676552232562800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_TMS320DM6441_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM6441"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_5.projectspec">
					<filter.ref ref.id="filter_676552232562800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_TMS320DM6441_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM6441"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_6.projectspec">
					<filter.ref ref.id="filter_676552232562800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_TMS320DM6441_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM6441"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_7.projectspec">
					<filter.ref ref.id="filter_676552232562800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_TMS320DM6441_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM6441"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_8.projectspec">
					<filter.ref ref.id="filter_676552232562800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_TMS320DM6441_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM6441"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_9.projectspec">
					<filter.ref ref.id="filter_676552232562800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_TMS320DM6441_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM6441"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_11.projectspec">
					<filter.ref ref.id="filter_676552232562800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_TMS320DM6441_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM6441"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_12.projectspec">
					<filter.ref ref.id="filter_676552232562800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_TMS320DM6441_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM6441"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_13.projectspec">
					<filter.ref ref.id="filter_676552232562800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_TMS320DM6441_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM6441"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_10.projectspec">
					<filter.ref ref.id="filter_676552232562800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_TMS320DM6441_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM6441"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="TMS320DM6443" desc="TMS320DM6443" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_676552233125500">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>TMS320DM6443</tag>
					<tag>DaVinci DM644x</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_0.projectspec">
					<filter.ref ref.id="filter_676552233125500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_TMS320DM6443_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM6443"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_1.projectspec">
					<filter.ref ref.id="filter_676552233125500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_TMS320DM6443_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM6443"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_676552233210100">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>TMS320DM6443</tag>
					<tag>DaVinci DM644x</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_14.projectspec">
					<filter.ref ref.id="filter_676552233210100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_TMS320DM6443_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM6443"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_3.projectspec">
					<filter.ref ref.id="filter_676552233210100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_TMS320DM6443_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM6443"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_4.projectspec">
					<filter.ref ref.id="filter_676552233210100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_TMS320DM6443_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM6443"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_5.projectspec">
					<filter.ref ref.id="filter_676552233210100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_TMS320DM6443_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM6443"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_6.projectspec">
					<filter.ref ref.id="filter_676552233210100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_TMS320DM6443_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM6443"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_7.projectspec">
					<filter.ref ref.id="filter_676552233210100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_TMS320DM6443_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM6443"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_8.projectspec">
					<filter.ref ref.id="filter_676552233210100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_TMS320DM6443_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM6443"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_9.projectspec">
					<filter.ref ref.id="filter_676552233210100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_TMS320DM6443_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM6443"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_11.projectspec">
					<filter.ref ref.id="filter_676552233210100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_TMS320DM6443_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM6443"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_12.projectspec">
					<filter.ref ref.id="filter_676552233210100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_TMS320DM6443_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM6443"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_13.projectspec">
					<filter.ref ref.id="filter_676552233210100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_TMS320DM6443_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM6443"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_10.projectspec">
					<filter.ref ref.id="filter_676552233210100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_TMS320DM6443_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM6443"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="TMS320DM6446" desc="TMS320DM6446" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_676552233812600">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>TMS320DM6446</tag>
					<tag>DaVinci DM644x</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_0.projectspec">
					<filter.ref ref.id="filter_676552233812600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_TMS320DM6446_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM6446"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_1.projectspec">
					<filter.ref ref.id="filter_676552233812600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_TMS320DM6446_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM6446"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_676552233903200">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>TMS320DM6446</tag>
					<tag>DaVinci DM644x</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_14.projectspec">
					<filter.ref ref.id="filter_676552233903200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_TMS320DM6446_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM6446"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_3.projectspec">
					<filter.ref ref.id="filter_676552233903200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_TMS320DM6446_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM6446"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_4.projectspec">
					<filter.ref ref.id="filter_676552233903200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_TMS320DM6446_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM6446"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_5.projectspec">
					<filter.ref ref.id="filter_676552233903200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_TMS320DM6446_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM6446"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_6.projectspec">
					<filter.ref ref.id="filter_676552233903200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_TMS320DM6446_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM6446"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_7.projectspec">
					<filter.ref ref.id="filter_676552233903200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_TMS320DM6446_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM6446"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_8.projectspec">
					<filter.ref ref.id="filter_676552233903200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_TMS320DM6446_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM6446"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_9.projectspec">
					<filter.ref ref.id="filter_676552233903200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_TMS320DM6446_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM6446"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_11.projectspec">
					<filter.ref ref.id="filter_676552233903200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_TMS320DM6446_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM6446"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_12.projectspec">
					<filter.ref ref.id="filter_676552233903200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_TMS320DM6446_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM6446"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_13.projectspec">
					<filter.ref ref.id="filter_676552233903200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_TMS320DM6446_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM6446"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_10.projectspec">
					<filter.ref ref.id="filter_676552233903200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_TMS320DM6446_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM6446"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
		</contents>
		<contents name="DaVinci DM646x" desc="DaVinci DM646x" icon="plugin://icons/obj16/devices.png">
			<contents name="EVMDM6467" desc="EVMDM6467" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_676552236126700">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>EVMDM6467</tag>
					<tag>DaVinci DM646x</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_0.projectspec">
					<filter.ref ref.id="filter_676552236126700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_EVMDM6467_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM6467.EVMDM6467"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_1.projectspec">
					<filter.ref ref.id="filter_676552236126700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_EVMDM6467_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM6467.EVMDM6467"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_676552236345600">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>EVMDM6467</tag>
					<tag>DaVinci DM646x</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_14.projectspec">
					<filter.ref ref.id="filter_676552236345600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_EVMDM6467_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM6467.EVMDM6467"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_3.projectspec">
					<filter.ref ref.id="filter_676552236345600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_EVMDM6467_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM6467.EVMDM6467"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_4.projectspec">
					<filter.ref ref.id="filter_676552236345600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_EVMDM6467_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM6467.EVMDM6467"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_5.projectspec">
					<filter.ref ref.id="filter_676552236345600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_EVMDM6467_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM6467.EVMDM6467"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_6.projectspec">
					<filter.ref ref.id="filter_676552236345600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_EVMDM6467_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM6467.EVMDM6467"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_7.projectspec">
					<filter.ref ref.id="filter_676552236345600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_EVMDM6467_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM6467.EVMDM6467"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_8.projectspec">
					<filter.ref ref.id="filter_676552236345600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_EVMDM6467_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM6467.EVMDM6467"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_9.projectspec">
					<filter.ref ref.id="filter_676552236345600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_EVMDM6467_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM6467.EVMDM6467"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_11.projectspec">
					<filter.ref ref.id="filter_676552236345600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_EVMDM6467_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM6467.EVMDM6467"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_12.projectspec">
					<filter.ref ref.id="filter_676552236345600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_EVMDM6467_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM6467.EVMDM6467"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_13.projectspec">
					<filter.ref ref.id="filter_676552236345600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_EVMDM6467_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM6467.EVMDM6467"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_10.projectspec">
					<filter.ref ref.id="filter_676552236345600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_EVMDM6467_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM6467.EVMDM6467"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="EVMDM6467T" desc="EVMDM6467T" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_676552237024300">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>EVMDM6467T</tag>
					<tag>DaVinci DM646x</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_0.projectspec">
					<filter.ref ref.id="filter_676552237024300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_EVMDM6467T_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM6467.EVMDM6467T"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_1.projectspec">
					<filter.ref ref.id="filter_676552237024300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_EVMDM6467T_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM6467.EVMDM6467T"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_676552237116800">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>EVMDM6467T</tag>
					<tag>DaVinci DM646x</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_14.projectspec">
					<filter.ref ref.id="filter_676552237116800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_EVMDM6467T_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM6467.EVMDM6467T"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_3.projectspec">
					<filter.ref ref.id="filter_676552237116800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_EVMDM6467T_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM6467.EVMDM6467T"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_4.projectspec">
					<filter.ref ref.id="filter_676552237116800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_EVMDM6467T_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM6467.EVMDM6467T"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_5.projectspec">
					<filter.ref ref.id="filter_676552237116800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_EVMDM6467T_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM6467.EVMDM6467T"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_6.projectspec">
					<filter.ref ref.id="filter_676552237116800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_EVMDM6467T_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM6467.EVMDM6467T"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_7.projectspec">
					<filter.ref ref.id="filter_676552237116800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_EVMDM6467T_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM6467.EVMDM6467T"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_8.projectspec">
					<filter.ref ref.id="filter_676552237116800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_EVMDM6467T_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM6467.EVMDM6467T"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_9.projectspec">
					<filter.ref ref.id="filter_676552237116800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_EVMDM6467T_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM6467.EVMDM6467T"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_11.projectspec">
					<filter.ref ref.id="filter_676552237116800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_EVMDM6467T_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM6467.EVMDM6467T"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_12.projectspec">
					<filter.ref ref.id="filter_676552237116800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_EVMDM6467T_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM6467.EVMDM6467T"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_13.projectspec">
					<filter.ref ref.id="filter_676552237116800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_EVMDM6467T_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM6467.EVMDM6467T"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_10.projectspec">
					<filter.ref ref.id="filter_676552237116800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_EVMDM6467T_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM6467.EVMDM6467T"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="TMS320DM6467" desc="TMS320DM6467" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_676552237705500">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>TMS320DM6467</tag>
					<tag>DaVinci DM646x</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_0.projectspec">
					<filter.ref ref.id="filter_676552237705500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_TMS320DM6467_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM6467"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_1.projectspec">
					<filter.ref ref.id="filter_676552237705500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_TMS320DM6467_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM6467"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_676552237788000">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>TMS320DM6467</tag>
					<tag>DaVinci DM646x</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_14.projectspec">
					<filter.ref ref.id="filter_676552237788000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_TMS320DM6467_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM6467"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_3.projectspec">
					<filter.ref ref.id="filter_676552237788000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_TMS320DM6467_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM6467"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_4.projectspec">
					<filter.ref ref.id="filter_676552237788000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_TMS320DM6467_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM6467"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_5.projectspec">
					<filter.ref ref.id="filter_676552237788000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_TMS320DM6467_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM6467"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_6.projectspec">
					<filter.ref ref.id="filter_676552237788000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_TMS320DM6467_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM6467"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_7.projectspec">
					<filter.ref ref.id="filter_676552237788000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_TMS320DM6467_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM6467"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_8.projectspec">
					<filter.ref ref.id="filter_676552237788000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_TMS320DM6467_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM6467"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_9.projectspec">
					<filter.ref ref.id="filter_676552237788000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_TMS320DM6467_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM6467"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_11.projectspec">
					<filter.ref ref.id="filter_676552237788000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_TMS320DM6467_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM6467"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_12.projectspec">
					<filter.ref ref.id="filter_676552237788000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_TMS320DM6467_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM6467"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_13.projectspec">
					<filter.ref ref.id="filter_676552237788000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_TMS320DM6467_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM6467"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_10.projectspec">
					<filter.ref ref.id="filter_676552237788000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_TMS320DM6467_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM6467"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
		</contents>
		<contents name="DaVinci DM64x" desc="DaVinci DM64x" icon="plugin://icons/obj16/devices.png">
			<contents name="EVMDM642" desc="EVMDM642" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_676552238377100">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>EVMDM642</tag>
					<tag>DaVinci DM64x</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_0.projectspec">
					<filter.ref ref.id="filter_676552238377100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_EVMDM642"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM642.EVMDM642"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_1.projectspec">
					<filter.ref ref.id="filter_676552238377100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_EVMDM642"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM642.EVMDM642"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_676552238460400">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>EVMDM642</tag>
					<tag>DaVinci DM64x</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_14.projectspec">
					<filter.ref ref.id="filter_676552238460400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_EVMDM642"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM642.EVMDM642"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_3.projectspec">
					<filter.ref ref.id="filter_676552238460400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_EVMDM642"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM642.EVMDM642"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_4.projectspec">
					<filter.ref ref.id="filter_676552238460400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_EVMDM642"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM642.EVMDM642"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_5.projectspec">
					<filter.ref ref.id="filter_676552238460400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_EVMDM642"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM642.EVMDM642"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_6.projectspec">
					<filter.ref ref.id="filter_676552238460400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_EVMDM642"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM642.EVMDM642"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_7.projectspec">
					<filter.ref ref.id="filter_676552238460400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_EVMDM642"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM642.EVMDM642"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_8.projectspec">
					<filter.ref ref.id="filter_676552238460400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_EVMDM642"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM642.EVMDM642"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_9.projectspec">
					<filter.ref ref.id="filter_676552238460400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_EVMDM642"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM642.EVMDM642"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_11.projectspec">
					<filter.ref ref.id="filter_676552238460400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_EVMDM642"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM642.EVMDM642"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_12.projectspec">
					<filter.ref ref.id="filter_676552238460400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_EVMDM642"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM642.EVMDM642"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_13.projectspec">
					<filter.ref ref.id="filter_676552238460400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_EVMDM642"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM642.EVMDM642"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_10.projectspec">
					<filter.ref ref.id="filter_676552238460400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_EVMDM642"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM642.EVMDM642"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="EVMDM648" desc="EVMDM648" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_676552239028400">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>EVMDM648</tag>
					<tag>DaVinci DM64x</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_0.projectspec">
					<filter.ref ref.id="filter_676552239028400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_EVMDM648"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM648.EVMDM648"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_1.projectspec">
					<filter.ref ref.id="filter_676552239028400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_EVMDM648"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM648.EVMDM648"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_676552239112000">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>EVMDM648</tag>
					<tag>DaVinci DM64x</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_14.projectspec">
					<filter.ref ref.id="filter_676552239112000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_EVMDM648"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM648.EVMDM648"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_3.projectspec">
					<filter.ref ref.id="filter_676552239112000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_EVMDM648"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM648.EVMDM648"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_4.projectspec">
					<filter.ref ref.id="filter_676552239112000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_EVMDM648"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM648.EVMDM648"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_5.projectspec">
					<filter.ref ref.id="filter_676552239112000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_EVMDM648"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM648.EVMDM648"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_6.projectspec">
					<filter.ref ref.id="filter_676552239112000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_EVMDM648"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM648.EVMDM648"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_7.projectspec">
					<filter.ref ref.id="filter_676552239112000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_EVMDM648"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM648.EVMDM648"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_8.projectspec">
					<filter.ref ref.id="filter_676552239112000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_EVMDM648"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM648.EVMDM648"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_9.projectspec">
					<filter.ref ref.id="filter_676552239112000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_EVMDM648"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM648.EVMDM648"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_11.projectspec">
					<filter.ref ref.id="filter_676552239112000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_EVMDM648"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM648.EVMDM648"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_12.projectspec">
					<filter.ref ref.id="filter_676552239112000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_EVMDM648"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM648.EVMDM648"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_13.projectspec">
					<filter.ref ref.id="filter_676552239112000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_EVMDM648"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM648.EVMDM648"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_10.projectspec">
					<filter.ref ref.id="filter_676552239112000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_EVMDM648"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM648.EVMDM648"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="TMS320DM640" desc="TMS320DM640" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_676552241973600">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>TMS320DM640</tag>
					<tag>DaVinci DM64x</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_0.projectspec">
					<filter.ref ref.id="filter_676552241973600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_TMS320DM640"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM640"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_1.projectspec">
					<filter.ref ref.id="filter_676552241973600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_TMS320DM640"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM640"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_676552242086000">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>TMS320DM640</tag>
					<tag>DaVinci DM64x</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_14.projectspec">
					<filter.ref ref.id="filter_676552242086000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_TMS320DM640"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM640"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_3.projectspec">
					<filter.ref ref.id="filter_676552242086000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_TMS320DM640"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM640"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_4.projectspec">
					<filter.ref ref.id="filter_676552242086000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_TMS320DM640"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM640"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_5.projectspec">
					<filter.ref ref.id="filter_676552242086000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_TMS320DM640"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM640"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_6.projectspec">
					<filter.ref ref.id="filter_676552242086000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_TMS320DM640"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM640"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_7.projectspec">
					<filter.ref ref.id="filter_676552242086000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_TMS320DM640"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM640"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_8.projectspec">
					<filter.ref ref.id="filter_676552242086000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_TMS320DM640"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM640"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_9.projectspec">
					<filter.ref ref.id="filter_676552242086000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_TMS320DM640"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM640"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_11.projectspec">
					<filter.ref ref.id="filter_676552242086000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_TMS320DM640"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM640"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_12.projectspec">
					<filter.ref ref.id="filter_676552242086000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_TMS320DM640"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM640"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_13.projectspec">
					<filter.ref ref.id="filter_676552242086000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_TMS320DM640"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM640"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_10.projectspec">
					<filter.ref ref.id="filter_676552242086000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_TMS320DM640"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM640"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="TMS320DM641" desc="TMS320DM641" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_676552242760200">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>TMS320DM641</tag>
					<tag>DaVinci DM64x</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_0.projectspec">
					<filter.ref ref.id="filter_676552242760200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_TMS320DM641"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM641"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_1.projectspec">
					<filter.ref ref.id="filter_676552242760200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_TMS320DM641"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM641"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_676552242854700">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>TMS320DM641</tag>
					<tag>DaVinci DM64x</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_14.projectspec">
					<filter.ref ref.id="filter_676552242854700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_TMS320DM641"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM641"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_3.projectspec">
					<filter.ref ref.id="filter_676552242854700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_TMS320DM641"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM641"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_4.projectspec">
					<filter.ref ref.id="filter_676552242854700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_TMS320DM641"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM641"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_5.projectspec">
					<filter.ref ref.id="filter_676552242854700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_TMS320DM641"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM641"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_6.projectspec">
					<filter.ref ref.id="filter_676552242854700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_TMS320DM641"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM641"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_7.projectspec">
					<filter.ref ref.id="filter_676552242854700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_TMS320DM641"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM641"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_8.projectspec">
					<filter.ref ref.id="filter_676552242854700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_TMS320DM641"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM641"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_9.projectspec">
					<filter.ref ref.id="filter_676552242854700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_TMS320DM641"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM641"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_11.projectspec">
					<filter.ref ref.id="filter_676552242854700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_TMS320DM641"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM641"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_12.projectspec">
					<filter.ref ref.id="filter_676552242854700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_TMS320DM641"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM641"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_13.projectspec">
					<filter.ref ref.id="filter_676552242854700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_TMS320DM641"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM641"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_10.projectspec">
					<filter.ref ref.id="filter_676552242854700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_TMS320DM641"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM641"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="TMS320DM642" desc="TMS320DM642" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_676552243472600">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>TMS320DM642</tag>
					<tag>DaVinci DM64x</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_0.projectspec">
					<filter.ref ref.id="filter_676552243472600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_TMS320DM642"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM642"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_1.projectspec">
					<filter.ref ref.id="filter_676552243472600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_TMS320DM642"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM642"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_676552243549300">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>TMS320DM642</tag>
					<tag>DaVinci DM64x</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_14.projectspec">
					<filter.ref ref.id="filter_676552243549300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_TMS320DM642"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM642"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_3.projectspec">
					<filter.ref ref.id="filter_676552243549300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_TMS320DM642"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM642"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_4.projectspec">
					<filter.ref ref.id="filter_676552243549300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_TMS320DM642"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM642"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_5.projectspec">
					<filter.ref ref.id="filter_676552243549300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_TMS320DM642"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM642"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_6.projectspec">
					<filter.ref ref.id="filter_676552243549300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_TMS320DM642"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM642"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_7.projectspec">
					<filter.ref ref.id="filter_676552243549300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_TMS320DM642"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM642"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_8.projectspec">
					<filter.ref ref.id="filter_676552243549300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_TMS320DM642"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM642"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_9.projectspec">
					<filter.ref ref.id="filter_676552243549300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_TMS320DM642"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM642"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_11.projectspec">
					<filter.ref ref.id="filter_676552243549300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_TMS320DM642"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM642"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_12.projectspec">
					<filter.ref ref.id="filter_676552243549300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_TMS320DM642"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM642"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_13.projectspec">
					<filter.ref ref.id="filter_676552243549300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_TMS320DM642"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM642"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_10.projectspec">
					<filter.ref ref.id="filter_676552243549300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_TMS320DM642"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM642"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="TMS320DM643" desc="TMS320DM643" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_676552244085600">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>TMS320DM643</tag>
					<tag>DaVinci DM64x</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_0.projectspec">
					<filter.ref ref.id="filter_676552244085600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_TMS320DM643"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM643"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_1.projectspec">
					<filter.ref ref.id="filter_676552244085600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_TMS320DM643"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM643"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_676552244162700">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>TMS320DM643</tag>
					<tag>DaVinci DM64x</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_14.projectspec">
					<filter.ref ref.id="filter_676552244162700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_TMS320DM643"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM643"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_3.projectspec">
					<filter.ref ref.id="filter_676552244162700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_TMS320DM643"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM643"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_4.projectspec">
					<filter.ref ref.id="filter_676552244162700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_TMS320DM643"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM643"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_5.projectspec">
					<filter.ref ref.id="filter_676552244162700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_TMS320DM643"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM643"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_6.projectspec">
					<filter.ref ref.id="filter_676552244162700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_TMS320DM643"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM643"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_7.projectspec">
					<filter.ref ref.id="filter_676552244162700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_TMS320DM643"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM643"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_8.projectspec">
					<filter.ref ref.id="filter_676552244162700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_TMS320DM643"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM643"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_9.projectspec">
					<filter.ref ref.id="filter_676552244162700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_TMS320DM643"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM643"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_11.projectspec">
					<filter.ref ref.id="filter_676552244162700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_TMS320DM643"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM643"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_12.projectspec">
					<filter.ref ref.id="filter_676552244162700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_TMS320DM643"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM643"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_13.projectspec">
					<filter.ref ref.id="filter_676552244162700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_TMS320DM643"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM643"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_10.projectspec">
					<filter.ref ref.id="filter_676552244162700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_TMS320DM643"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM643"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="TMS320DM647" desc="TMS320DM647" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_676552244689000">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>TMS320DM647</tag>
					<tag>DaVinci DM64x</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_0.projectspec">
					<filter.ref ref.id="filter_676552244689000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_TMS320DM647"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM647"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_1.projectspec">
					<filter.ref ref.id="filter_676552244689000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_TMS320DM647"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM647"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_676552244766400">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>TMS320DM647</tag>
					<tag>DaVinci DM64x</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_14.projectspec">
					<filter.ref ref.id="filter_676552244766400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_TMS320DM647"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM647"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_3.projectspec">
					<filter.ref ref.id="filter_676552244766400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_TMS320DM647"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM647"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_4.projectspec">
					<filter.ref ref.id="filter_676552244766400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_TMS320DM647"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM647"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_5.projectspec">
					<filter.ref ref.id="filter_676552244766400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_TMS320DM647"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM647"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_6.projectspec">
					<filter.ref ref.id="filter_676552244766400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_TMS320DM647"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM647"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_7.projectspec">
					<filter.ref ref.id="filter_676552244766400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_TMS320DM647"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM647"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_8.projectspec">
					<filter.ref ref.id="filter_676552244766400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_TMS320DM647"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM647"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_9.projectspec">
					<filter.ref ref.id="filter_676552244766400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_TMS320DM647"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM647"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_11.projectspec">
					<filter.ref ref.id="filter_676552244766400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_TMS320DM647"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM647"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_12.projectspec">
					<filter.ref ref.id="filter_676552244766400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_TMS320DM647"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM647"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_13.projectspec">
					<filter.ref ref.id="filter_676552244766400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_TMS320DM647"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM647"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_10.projectspec">
					<filter.ref ref.id="filter_676552244766400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_TMS320DM647"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM647"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="TMS320DM648" desc="TMS320DM648" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_676552245339900">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>TMS320DM648</tag>
					<tag>DaVinci DM64x</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_0.projectspec">
					<filter.ref ref.id="filter_676552245339900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_TMS320DM648"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM648"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_1.projectspec">
					<filter.ref ref.id="filter_676552245339900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_TMS320DM648"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM648"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_676552245416400">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>TMS320DM648</tag>
					<tag>DaVinci DM64x</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_14.projectspec">
					<filter.ref ref.id="filter_676552245416400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_TMS320DM648"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM648"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_3.projectspec">
					<filter.ref ref.id="filter_676552245416400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_TMS320DM648"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM648"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_4.projectspec">
					<filter.ref ref.id="filter_676552245416400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_TMS320DM648"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM648"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_5.projectspec">
					<filter.ref ref.id="filter_676552245416400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_TMS320DM648"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM648"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_6.projectspec">
					<filter.ref ref.id="filter_676552245416400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_TMS320DM648"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM648"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_7.projectspec">
					<filter.ref ref.id="filter_676552245416400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_TMS320DM648"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM648"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_8.projectspec">
					<filter.ref ref.id="filter_676552245416400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_TMS320DM648"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM648"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_9.projectspec">
					<filter.ref ref.id="filter_676552245416400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_TMS320DM648"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM648"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_11.projectspec">
					<filter.ref ref.id="filter_676552245416400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_TMS320DM648"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM648"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_12.projectspec">
					<filter.ref ref.id="filter_676552245416400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_TMS320DM648"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM648"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_13.projectspec">
					<filter.ref ref.id="filter_676552245416400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_TMS320DM648"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM648"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_10.projectspec">
					<filter.ref ref.id="filter_676552245416400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_TMS320DM648"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM648"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
		</contents>
		<contents name="DaVinci DM81xx" desc="DaVinci DM81xx" icon="plugin://icons/obj16/devices.png">
			<contents name="DM8146" desc="DM8146" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_676552245982900">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>DM8146</tag>
					<tag>DaVinci DM81xx</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_0.projectspec">
					<filter.ref ref.id="filter_676552245982900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_DM8146_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320DM8146"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_1.projectspec">
					<filter.ref ref.id="filter_676552245982900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_DM8146_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320DM8146"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_676552246063600">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>DM8146</tag>
					<tag>DaVinci DM81xx</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_14.projectspec">
					<filter.ref ref.id="filter_676552246063600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_DM8146_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320DM8146"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_3.projectspec">
					<filter.ref ref.id="filter_676552246063600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_DM8146_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320DM8146"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_4.projectspec">
					<filter.ref ref.id="filter_676552246063600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_DM8146_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320DM8146"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_5.projectspec">
					<filter.ref ref.id="filter_676552246063600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_DM8146_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320DM8146"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_6.projectspec">
					<filter.ref ref.id="filter_676552246063600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_DM8146_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320DM8146"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_7.projectspec">
					<filter.ref ref.id="filter_676552246063600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_DM8146_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320DM8146"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_8.projectspec">
					<filter.ref ref.id="filter_676552246063600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_DM8146_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320DM8146"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_9.projectspec">
					<filter.ref ref.id="filter_676552246063600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_DM8146_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320DM8146"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_11.projectspec">
					<filter.ref ref.id="filter_676552246063600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_DM8146_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320DM8146"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_12.projectspec">
					<filter.ref ref.id="filter_676552246063600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_DM8146_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320DM8146"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_13.projectspec">
					<filter.ref ref.id="filter_676552246063600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_DM8146_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320DM8146"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_10.projectspec">
					<filter.ref ref.id="filter_676552246063600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_DM8146_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320DM8146"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="DM8147" desc="DM8147" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_676552246629400">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>DM8147</tag>
					<tag>DaVinci DM81xx</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_0.projectspec">
					<filter.ref ref.id="filter_676552246629400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_DM8147_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320DM8147"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_1.projectspec">
					<filter.ref ref.id="filter_676552246629400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_DM8147_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320DM8147"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_676552246710600">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>DM8147</tag>
					<tag>DaVinci DM81xx</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_14.projectspec">
					<filter.ref ref.id="filter_676552246710600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_DM8147_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320DM8147"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_3.projectspec">
					<filter.ref ref.id="filter_676552246710600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_DM8147_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320DM8147"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_4.projectspec">
					<filter.ref ref.id="filter_676552246710600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_DM8147_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320DM8147"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_5.projectspec">
					<filter.ref ref.id="filter_676552246710600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_DM8147_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320DM8147"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_6.projectspec">
					<filter.ref ref.id="filter_676552246710600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_DM8147_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320DM8147"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_7.projectspec">
					<filter.ref ref.id="filter_676552246710600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_DM8147_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320DM8147"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_8.projectspec">
					<filter.ref ref.id="filter_676552246710600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_DM8147_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320DM8147"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_9.projectspec">
					<filter.ref ref.id="filter_676552246710600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_DM8147_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320DM8147"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_11.projectspec">
					<filter.ref ref.id="filter_676552246710600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_DM8147_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320DM8147"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_12.projectspec">
					<filter.ref ref.id="filter_676552246710600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_DM8147_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320DM8147"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_13.projectspec">
					<filter.ref ref.id="filter_676552246710600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_DM8147_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320DM8147"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_10.projectspec">
					<filter.ref ref.id="filter_676552246710600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_DM8147_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320DM8147"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="DM8148" desc="DM8148" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_676552248218300">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>DM8148</tag>
					<tag>DaVinci DM81xx</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_0.projectspec">
					<filter.ref ref.id="filter_676552248218300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_DM8148_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320DM8148"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_1.projectspec">
					<filter.ref ref.id="filter_676552248218300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_DM8148_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320DM8148"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_676552248331200">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>DM8148</tag>
					<tag>DaVinci DM81xx</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_14.projectspec">
					<filter.ref ref.id="filter_676552248331200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_DM8148_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320DM8148"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_3.projectspec">
					<filter.ref ref.id="filter_676552248331200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_DM8148_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320DM8148"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_4.projectspec">
					<filter.ref ref.id="filter_676552248331200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_DM8148_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320DM8148"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_5.projectspec">
					<filter.ref ref.id="filter_676552248331200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_DM8148_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320DM8148"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_6.projectspec">
					<filter.ref ref.id="filter_676552248331200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_DM8148_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320DM8148"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_7.projectspec">
					<filter.ref ref.id="filter_676552248331200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_DM8148_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320DM8148"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_8.projectspec">
					<filter.ref ref.id="filter_676552248331200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_DM8148_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320DM8148"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_9.projectspec">
					<filter.ref ref.id="filter_676552248331200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_DM8148_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320DM8148"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_11.projectspec">
					<filter.ref ref.id="filter_676552248331200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_DM8148_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320DM8148"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_12.projectspec">
					<filter.ref ref.id="filter_676552248331200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_DM8148_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320DM8148"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_13.projectspec">
					<filter.ref ref.id="filter_676552248331200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_DM8148_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320DM8148"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_10.projectspec">
					<filter.ref ref.id="filter_676552248331200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_DM8148_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320DM8148"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="DM8165" desc="DM8165" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_676552249033000">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>DM8165</tag>
					<tag>DaVinci DM81xx</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_0.projectspec">
					<filter.ref ref.id="filter_676552249033000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_DM8165_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320DM8165"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_1.projectspec">
					<filter.ref ref.id="filter_676552249033000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_DM8165_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320DM8165"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_676552249137700">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>DM8165</tag>
					<tag>DaVinci DM81xx</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_14.projectspec">
					<filter.ref ref.id="filter_676552249137700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_DM8165_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320DM8165"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_3.projectspec">
					<filter.ref ref.id="filter_676552249137700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_DM8165_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320DM8165"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_4.projectspec">
					<filter.ref ref.id="filter_676552249137700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_DM8165_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320DM8165"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_5.projectspec">
					<filter.ref ref.id="filter_676552249137700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_DM8165_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320DM8165"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_6.projectspec">
					<filter.ref ref.id="filter_676552249137700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_DM8165_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320DM8165"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_7.projectspec">
					<filter.ref ref.id="filter_676552249137700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_DM8165_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320DM8165"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_8.projectspec">
					<filter.ref ref.id="filter_676552249137700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_DM8165_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320DM8165"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_9.projectspec">
					<filter.ref ref.id="filter_676552249137700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_DM8165_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320DM8165"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_11.projectspec">
					<filter.ref ref.id="filter_676552249137700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_DM8165_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320DM8165"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_12.projectspec">
					<filter.ref ref.id="filter_676552249137700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_DM8165_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320DM8165"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_13.projectspec">
					<filter.ref ref.id="filter_676552249137700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_DM8165_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320DM8165"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_10.projectspec">
					<filter.ref ref.id="filter_676552249137700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_DM8165_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320DM8165"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="DM8166" desc="DM8166" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_676552249757400">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>DM8166</tag>
					<tag>DaVinci DM81xx</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_0.projectspec">
					<filter.ref ref.id="filter_676552249757400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_DM8166_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320DM8166"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_1.projectspec">
					<filter.ref ref.id="filter_676552249757400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_DM8166_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320DM8166"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_676552249843500">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>DM8166</tag>
					<tag>DaVinci DM81xx</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_14.projectspec">
					<filter.ref ref.id="filter_676552249843500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_DM8166_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320DM8166"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_3.projectspec">
					<filter.ref ref.id="filter_676552249843500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_DM8166_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320DM8166"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_4.projectspec">
					<filter.ref ref.id="filter_676552249843500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_DM8166_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320DM8166"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_5.projectspec">
					<filter.ref ref.id="filter_676552249843500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_DM8166_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320DM8166"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_6.projectspec">
					<filter.ref ref.id="filter_676552249843500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_DM8166_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320DM8166"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_7.projectspec">
					<filter.ref ref.id="filter_676552249843500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_DM8166_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320DM8166"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_8.projectspec">
					<filter.ref ref.id="filter_676552249843500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_DM8166_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320DM8166"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_9.projectspec">
					<filter.ref ref.id="filter_676552249843500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_DM8166_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320DM8166"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_11.projectspec">
					<filter.ref ref.id="filter_676552249843500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_DM8166_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320DM8166"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_12.projectspec">
					<filter.ref ref.id="filter_676552249843500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_DM8166_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320DM8166"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_13.projectspec">
					<filter.ref ref.id="filter_676552249843500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_DM8166_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320DM8166"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_10.projectspec">
					<filter.ref ref.id="filter_676552249843500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_DM8166_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320DM8166"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="DM8167" desc="DM8167" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_676552250407200">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>DM8167</tag>
					<tag>DaVinci DM81xx</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_0.projectspec">
					<filter.ref ref.id="filter_676552250407200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_DM8167_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320DM8167"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_1.projectspec">
					<filter.ref ref.id="filter_676552250407200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_DM8167_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320DM8167"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_676552250491200">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>DM8167</tag>
					<tag>DaVinci DM81xx</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_14.projectspec">
					<filter.ref ref.id="filter_676552250491200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_DM8167_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320DM8167"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_3.projectspec">
					<filter.ref ref.id="filter_676552250491200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_DM8167_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320DM8167"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_4.projectspec">
					<filter.ref ref.id="filter_676552250491200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_DM8167_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320DM8167"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_5.projectspec">
					<filter.ref ref.id="filter_676552250491200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_DM8167_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320DM8167"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_6.projectspec">
					<filter.ref ref.id="filter_676552250491200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_DM8167_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320DM8167"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_7.projectspec">
					<filter.ref ref.id="filter_676552250491200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_DM8167_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320DM8167"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_8.projectspec">
					<filter.ref ref.id="filter_676552250491200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_DM8167_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320DM8167"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_9.projectspec">
					<filter.ref ref.id="filter_676552250491200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_DM8167_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320DM8167"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_11.projectspec">
					<filter.ref ref.id="filter_676552250491200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_DM8167_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320DM8167"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_12.projectspec">
					<filter.ref ref.id="filter_676552250491200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_DM8167_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320DM8167"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_13.projectspec">
					<filter.ref ref.id="filter_676552250491200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_DM8167_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320DM8167"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_10.projectspec">
					<filter.ref ref.id="filter_676552250491200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_DM8167_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320DM8167"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="DM8168" desc="DM8168" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_676552251153300">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>DM8168</tag>
					<tag>DaVinci DM81xx</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_0.projectspec">
					<filter.ref ref.id="filter_676552251153300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_DM8168_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320DM8168"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_1.projectspec">
					<filter.ref ref.id="filter_676552251153300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_DM8168_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320DM8168"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_676552251242600">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>DM8168</tag>
					<tag>DaVinci DM81xx</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_14.projectspec">
					<filter.ref ref.id="filter_676552251242600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_DM8168_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320DM8168"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_3.projectspec">
					<filter.ref ref.id="filter_676552251242600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_DM8168_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320DM8168"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_4.projectspec">
					<filter.ref ref.id="filter_676552251242600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_DM8168_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320DM8168"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_5.projectspec">
					<filter.ref ref.id="filter_676552251242600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_DM8168_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320DM8168"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_6.projectspec">
					<filter.ref ref.id="filter_676552251242600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_DM8168_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320DM8168"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_7.projectspec">
					<filter.ref ref.id="filter_676552251242600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_DM8168_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320DM8168"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_8.projectspec">
					<filter.ref ref.id="filter_676552251242600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_DM8168_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320DM8168"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_9.projectspec">
					<filter.ref ref.id="filter_676552251242600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_DM8168_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320DM8168"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_11.projectspec">
					<filter.ref ref.id="filter_676552251242600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_DM8168_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320DM8168"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_12.projectspec">
					<filter.ref ref.id="filter_676552251242600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_DM8168_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320DM8168"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_13.projectspec">
					<filter.ref ref.id="filter_676552251242600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_DM8168_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320DM8168"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_10.projectspec">
					<filter.ref ref.id="filter_676552251242600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_DM8168_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320DM8168"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="EVMDM8148" desc="EVMDM8148" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_676552251845500">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>EVMDM8148</tag>
					<tag>DaVinci DM81xx</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_0.projectspec">
					<filter.ref ref.id="filter_676552251845500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_EVMDM8148_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320DM8148.EVMDM8148"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_1.projectspec">
					<filter.ref ref.id="filter_676552251845500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_EVMDM8148_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320DM8148.EVMDM8148"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_676552251943200">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>EVMDM8148</tag>
					<tag>DaVinci DM81xx</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_14.projectspec">
					<filter.ref ref.id="filter_676552251943200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_EVMDM8148_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320DM8148.EVMDM8148"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_3.projectspec">
					<filter.ref ref.id="filter_676552251943200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_EVMDM8148_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320DM8148.EVMDM8148"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_4.projectspec">
					<filter.ref ref.id="filter_676552251943200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_EVMDM8148_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320DM8148.EVMDM8148"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_5.projectspec">
					<filter.ref ref.id="filter_676552251943200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_EVMDM8148_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320DM8148.EVMDM8148"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_6.projectspec">
					<filter.ref ref.id="filter_676552251943200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_EVMDM8148_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320DM8148.EVMDM8148"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_7.projectspec">
					<filter.ref ref.id="filter_676552251943200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_EVMDM8148_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320DM8148.EVMDM8148"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_8.projectspec">
					<filter.ref ref.id="filter_676552251943200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_EVMDM8148_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320DM8148.EVMDM8148"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_9.projectspec">
					<filter.ref ref.id="filter_676552251943200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_EVMDM8148_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320DM8148.EVMDM8148"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_11.projectspec">
					<filter.ref ref.id="filter_676552251943200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_EVMDM8148_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320DM8148.EVMDM8148"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_12.projectspec">
					<filter.ref ref.id="filter_676552251943200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_EVMDM8148_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320DM8148.EVMDM8148"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_13.projectspec">
					<filter.ref ref.id="filter_676552251943200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_EVMDM8148_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320DM8148.EVMDM8148"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_10.projectspec">
					<filter.ref ref.id="filter_676552251943200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_EVMDM8148_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320DM8148.EVMDM8148"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="EVMDM8168" desc="EVMDM8168" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_676552252641500">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>EVMDM8168</tag>
					<tag>DaVinci DM81xx</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_0.projectspec">
					<filter.ref ref.id="filter_676552252641500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_EVMDM8168_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320DM8168.EVMDM8168"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_1.projectspec">
					<filter.ref ref.id="filter_676552252641500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_EVMDM8168_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320DM8168.EVMDM8168"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_676552252728800">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>EVMDM8168</tag>
					<tag>DaVinci DM81xx</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_14.projectspec">
					<filter.ref ref.id="filter_676552252728800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_EVMDM8168_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320DM8168.EVMDM8168"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_3.projectspec">
					<filter.ref ref.id="filter_676552252728800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_EVMDM8168_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320DM8168.EVMDM8168"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_4.projectspec">
					<filter.ref ref.id="filter_676552252728800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_EVMDM8168_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320DM8168.EVMDM8168"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_5.projectspec">
					<filter.ref ref.id="filter_676552252728800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_EVMDM8168_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320DM8168.EVMDM8168"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_6.projectspec">
					<filter.ref ref.id="filter_676552252728800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_EVMDM8168_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320DM8168.EVMDM8168"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_7.projectspec">
					<filter.ref ref.id="filter_676552252728800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_EVMDM8168_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320DM8168.EVMDM8168"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_8.projectspec">
					<filter.ref ref.id="filter_676552252728800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_EVMDM8168_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320DM8168.EVMDM8168"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_9.projectspec">
					<filter.ref ref.id="filter_676552252728800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_EVMDM8168_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320DM8168.EVMDM8168"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_11.projectspec">
					<filter.ref ref.id="filter_676552252728800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_EVMDM8168_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320DM8168.EVMDM8168"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_12.projectspec">
					<filter.ref ref.id="filter_676552252728800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_EVMDM8168_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320DM8168.EVMDM8168"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_13.projectspec">
					<filter.ref ref.id="filter_676552252728800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_EVMDM8168_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320DM8168.EVMDM8168"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_10.projectspec">
					<filter.ref ref.id="filter_676552252728800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_EVMDM8168_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320DM8168.EVMDM8168"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
		</contents>
		<contents name="OMAP-L1x" desc="OMAP-L1x" icon="plugin://icons/obj16/devices.png">
			<contents name="EVMOMAPL137" desc="EVMOMAPL137" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_676552254716000">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>EVMOMAPL137</tag>
					<tag>OMAP-L1x</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_0.projectspec">
					<filter.ref ref.id="filter_676552254716000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_EVMOMAPL137_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.OMAPL137.EVMOMAPL137"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_1.projectspec">
					<filter.ref ref.id="filter_676552254716000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_EVMOMAPL137_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.OMAPL137.EVMOMAPL137"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_676552254830800">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>EVMOMAPL137</tag>
					<tag>OMAP-L1x</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_14.projectspec">
					<filter.ref ref.id="filter_676552254830800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_EVMOMAPL137_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.OMAPL137.EVMOMAPL137"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_3.projectspec">
					<filter.ref ref.id="filter_676552254830800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_EVMOMAPL137_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.OMAPL137.EVMOMAPL137"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_4.projectspec">
					<filter.ref ref.id="filter_676552254830800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_EVMOMAPL137_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.OMAPL137.EVMOMAPL137"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_5.projectspec">
					<filter.ref ref.id="filter_676552254830800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_EVMOMAPL137_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.OMAPL137.EVMOMAPL137"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_6.projectspec">
					<filter.ref ref.id="filter_676552254830800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_EVMOMAPL137_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.OMAPL137.EVMOMAPL137"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_7.projectspec">
					<filter.ref ref.id="filter_676552254830800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_EVMOMAPL137_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.OMAPL137.EVMOMAPL137"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_8.projectspec">
					<filter.ref ref.id="filter_676552254830800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_EVMOMAPL137_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.OMAPL137.EVMOMAPL137"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_9.projectspec">
					<filter.ref ref.id="filter_676552254830800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_EVMOMAPL137_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.OMAPL137.EVMOMAPL137"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_11.projectspec">
					<filter.ref ref.id="filter_676552254830800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_EVMOMAPL137_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.OMAPL137.EVMOMAPL137"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_12.projectspec">
					<filter.ref ref.id="filter_676552254830800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_EVMOMAPL137_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.OMAPL137.EVMOMAPL137"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_13.projectspec">
					<filter.ref ref.id="filter_676552254830800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_EVMOMAPL137_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.OMAPL137.EVMOMAPL137"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_10.projectspec">
					<filter.ref ref.id="filter_676552254830800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_EVMOMAPL137_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.OMAPL137.EVMOMAPL137"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="EVMOMAPL138" desc="EVMOMAPL138" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_676552255522300">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>EVMOMAPL138</tag>
					<tag>OMAP-L1x</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_0.projectspec">
					<filter.ref ref.id="filter_676552255522300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_EVMOMAPL138_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.OMAPL138.EVMOMAPL138"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_1.projectspec">
					<filter.ref ref.id="filter_676552255522300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_EVMOMAPL138_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.OMAPL138.EVMOMAPL138"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_676552255605900">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>EVMOMAPL138</tag>
					<tag>OMAP-L1x</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_14.projectspec">
					<filter.ref ref.id="filter_676552255605900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_EVMOMAPL138_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.OMAPL138.EVMOMAPL138"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_3.projectspec">
					<filter.ref ref.id="filter_676552255605900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_EVMOMAPL138_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.OMAPL138.EVMOMAPL138"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_4.projectspec">
					<filter.ref ref.id="filter_676552255605900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_EVMOMAPL138_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.OMAPL138.EVMOMAPL138"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_5.projectspec">
					<filter.ref ref.id="filter_676552255605900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_EVMOMAPL138_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.OMAPL138.EVMOMAPL138"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_6.projectspec">
					<filter.ref ref.id="filter_676552255605900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_EVMOMAPL138_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.OMAPL138.EVMOMAPL138"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_7.projectspec">
					<filter.ref ref.id="filter_676552255605900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_EVMOMAPL138_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.OMAPL138.EVMOMAPL138"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_8.projectspec">
					<filter.ref ref.id="filter_676552255605900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_EVMOMAPL138_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.OMAPL138.EVMOMAPL138"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_9.projectspec">
					<filter.ref ref.id="filter_676552255605900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_EVMOMAPL138_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.OMAPL138.EVMOMAPL138"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_11.projectspec">
					<filter.ref ref.id="filter_676552255605900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_EVMOMAPL138_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.OMAPL138.EVMOMAPL138"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_12.projectspec">
					<filter.ref ref.id="filter_676552255605900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_EVMOMAPL138_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.OMAPL138.EVMOMAPL138"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_13.projectspec">
					<filter.ref ref.id="filter_676552255605900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_EVMOMAPL138_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.OMAPL138.EVMOMAPL138"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_10.projectspec">
					<filter.ref ref.id="filter_676552255605900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_EVMOMAPL138_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.OMAPL138.EVMOMAPL138"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="EXPKITOMAPL138" desc="EXPKITOMAPL138" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_676552256173200">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>EXPKITOMAPL138</tag>
					<tag>OMAP-L1x</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_0.projectspec">
					<filter.ref ref.id="filter_676552256173200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_EXPKITOMAPL138_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.OMAPL138.EXPKITOMAPL138"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_1.projectspec">
					<filter.ref ref.id="filter_676552256173200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_EXPKITOMAPL138_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.OMAPL138.EXPKITOMAPL138"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_676552256257700">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>EXPKITOMAPL138</tag>
					<tag>OMAP-L1x</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_14.projectspec">
					<filter.ref ref.id="filter_676552256257700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_EXPKITOMAPL138_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.OMAPL138.EXPKITOMAPL138"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_3.projectspec">
					<filter.ref ref.id="filter_676552256257700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_EXPKITOMAPL138_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.OMAPL138.EXPKITOMAPL138"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_4.projectspec">
					<filter.ref ref.id="filter_676552256257700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_EXPKITOMAPL138_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.OMAPL138.EXPKITOMAPL138"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_5.projectspec">
					<filter.ref ref.id="filter_676552256257700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_EXPKITOMAPL138_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.OMAPL138.EXPKITOMAPL138"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_6.projectspec">
					<filter.ref ref.id="filter_676552256257700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_EXPKITOMAPL138_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.OMAPL138.EXPKITOMAPL138"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_7.projectspec">
					<filter.ref ref.id="filter_676552256257700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_EXPKITOMAPL138_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.OMAPL138.EXPKITOMAPL138"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_8.projectspec">
					<filter.ref ref.id="filter_676552256257700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_EXPKITOMAPL138_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.OMAPL138.EXPKITOMAPL138"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_9.projectspec">
					<filter.ref ref.id="filter_676552256257700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_EXPKITOMAPL138_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.OMAPL138.EXPKITOMAPL138"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_11.projectspec">
					<filter.ref ref.id="filter_676552256257700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_EXPKITOMAPL138_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.OMAPL138.EXPKITOMAPL138"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_12.projectspec">
					<filter.ref ref.id="filter_676552256257700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_EXPKITOMAPL138_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.OMAPL138.EXPKITOMAPL138"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_13.projectspec">
					<filter.ref ref.id="filter_676552256257700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_EXPKITOMAPL138_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.OMAPL138.EXPKITOMAPL138"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_10.projectspec">
					<filter.ref ref.id="filter_676552256257700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_EXPKITOMAPL138_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.OMAPL138.EXPKITOMAPL138"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="LCDKOMAPL138" desc="LCDKOMAPL138" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_676552256813700">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>LCDKOMAPL138</tag>
					<tag>OMAP-L1x</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_0.projectspec">
					<filter.ref ref.id="filter_676552256813700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_LCDKOMAPL138_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.OMAPL138.LCDKOMAPL138"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_1.projectspec">
					<filter.ref ref.id="filter_676552256813700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_LCDKOMAPL138_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.OMAPL138.LCDKOMAPL138"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_676552256895100">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>LCDKOMAPL138</tag>
					<tag>OMAP-L1x</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_14.projectspec">
					<filter.ref ref.id="filter_676552256895100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_LCDKOMAPL138_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.OMAPL138.LCDKOMAPL138"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_3.projectspec">
					<filter.ref ref.id="filter_676552256895100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_LCDKOMAPL138_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.OMAPL138.LCDKOMAPL138"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_4.projectspec">
					<filter.ref ref.id="filter_676552256895100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_LCDKOMAPL138_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.OMAPL138.LCDKOMAPL138"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_5.projectspec">
					<filter.ref ref.id="filter_676552256895100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_LCDKOMAPL138_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.OMAPL138.LCDKOMAPL138"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_6.projectspec">
					<filter.ref ref.id="filter_676552256895100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_LCDKOMAPL138_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.OMAPL138.LCDKOMAPL138"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_7.projectspec">
					<filter.ref ref.id="filter_676552256895100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_LCDKOMAPL138_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.OMAPL138.LCDKOMAPL138"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_8.projectspec">
					<filter.ref ref.id="filter_676552256895100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_LCDKOMAPL138_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.OMAPL138.LCDKOMAPL138"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_9.projectspec">
					<filter.ref ref.id="filter_676552256895100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_LCDKOMAPL138_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.OMAPL138.LCDKOMAPL138"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_11.projectspec">
					<filter.ref ref.id="filter_676552256895100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_LCDKOMAPL138_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.OMAPL138.LCDKOMAPL138"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_12.projectspec">
					<filter.ref ref.id="filter_676552256895100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_LCDKOMAPL138_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.OMAPL138.LCDKOMAPL138"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_13.projectspec">
					<filter.ref ref.id="filter_676552256895100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_LCDKOMAPL138_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.OMAPL138.LCDKOMAPL138"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_10.projectspec">
					<filter.ref ref.id="filter_676552256895100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_LCDKOMAPL138_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.OMAPL138.LCDKOMAPL138"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="OMAPL132" desc="OMAPL132" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_676552257449800">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>OMAPL132</tag>
					<tag>OMAP-L1x</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_0.projectspec">
					<filter.ref ref.id="filter_676552257449800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_OMAPL132_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.OMAPL132"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_1.projectspec">
					<filter.ref ref.id="filter_676552257449800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_OMAPL132_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.OMAPL132"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_676552257529400">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>OMAPL132</tag>
					<tag>OMAP-L1x</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_14.projectspec">
					<filter.ref ref.id="filter_676552257529400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_OMAPL132_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.OMAPL132"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_3.projectspec">
					<filter.ref ref.id="filter_676552257529400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_OMAPL132_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.OMAPL132"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_4.projectspec">
					<filter.ref ref.id="filter_676552257529400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_OMAPL132_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.OMAPL132"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_5.projectspec">
					<filter.ref ref.id="filter_676552257529400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_OMAPL132_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.OMAPL132"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_6.projectspec">
					<filter.ref ref.id="filter_676552257529400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_OMAPL132_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.OMAPL132"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_7.projectspec">
					<filter.ref ref.id="filter_676552257529400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_OMAPL132_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.OMAPL132"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_8.projectspec">
					<filter.ref ref.id="filter_676552257529400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_OMAPL132_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.OMAPL132"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_9.projectspec">
					<filter.ref ref.id="filter_676552257529400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_OMAPL132_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.OMAPL132"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_11.projectspec">
					<filter.ref ref.id="filter_676552257529400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_OMAPL132_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.OMAPL132"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_12.projectspec">
					<filter.ref ref.id="filter_676552257529400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_OMAPL132_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.OMAPL132"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_13.projectspec">
					<filter.ref ref.id="filter_676552257529400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_OMAPL132_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.OMAPL132"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_10.projectspec">
					<filter.ref ref.id="filter_676552257529400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_OMAPL132_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.OMAPL132"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="OMAPL137" desc="OMAPL137" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_676552258064500">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>OMAPL137</tag>
					<tag>OMAP-L1x</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_0.projectspec">
					<filter.ref ref.id="filter_676552258064500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_OMAPL137_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.OMAPL137"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_1.projectspec">
					<filter.ref ref.id="filter_676552258064500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_OMAPL137_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.OMAPL137"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_676552258142800">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>OMAPL137</tag>
					<tag>OMAP-L1x</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_14.projectspec">
					<filter.ref ref.id="filter_676552258142800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_OMAPL137_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.OMAPL137"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_3.projectspec">
					<filter.ref ref.id="filter_676552258142800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_OMAPL137_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.OMAPL137"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_4.projectspec">
					<filter.ref ref.id="filter_676552258142800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_OMAPL137_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.OMAPL137"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_5.projectspec">
					<filter.ref ref.id="filter_676552258142800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_OMAPL137_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.OMAPL137"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_6.projectspec">
					<filter.ref ref.id="filter_676552258142800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_OMAPL137_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.OMAPL137"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_7.projectspec">
					<filter.ref ref.id="filter_676552258142800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_OMAPL137_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.OMAPL137"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_8.projectspec">
					<filter.ref ref.id="filter_676552258142800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_OMAPL137_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.OMAPL137"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_9.projectspec">
					<filter.ref ref.id="filter_676552258142800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_OMAPL137_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.OMAPL137"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_11.projectspec">
					<filter.ref ref.id="filter_676552258142800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_OMAPL137_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.OMAPL137"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_12.projectspec">
					<filter.ref ref.id="filter_676552258142800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_OMAPL137_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.OMAPL137"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_13.projectspec">
					<filter.ref ref.id="filter_676552258142800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_OMAPL137_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.OMAPL137"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_10.projectspec">
					<filter.ref ref.id="filter_676552258142800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_OMAPL137_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.OMAPL137"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="OMAPL138" desc="OMAPL138" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_676552258674200">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>OMAPL138</tag>
					<tag>OMAP-L1x</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_0.projectspec">
					<filter.ref ref.id="filter_676552258674200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_OMAPL138_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.OMAPL138"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_1.projectspec">
					<filter.ref ref.id="filter_676552258674200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_OMAPL138_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.OMAPL138"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_676552258754200">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>OMAPL138</tag>
					<tag>OMAP-L1x</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_14.projectspec">
					<filter.ref ref.id="filter_676552258754200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_OMAPL138_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.OMAPL138"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_3.projectspec">
					<filter.ref ref.id="filter_676552258754200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_OMAPL138_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.OMAPL138"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_4.projectspec">
					<filter.ref ref.id="filter_676552258754200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_OMAPL138_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.OMAPL138"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_5.projectspec">
					<filter.ref ref.id="filter_676552258754200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_OMAPL138_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.OMAPL138"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_6.projectspec">
					<filter.ref ref.id="filter_676552258754200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_OMAPL138_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.OMAPL138"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_7.projectspec">
					<filter.ref ref.id="filter_676552258754200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_OMAPL138_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.OMAPL138"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_8.projectspec">
					<filter.ref ref.id="filter_676552258754200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_OMAPL138_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.OMAPL138"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_9.projectspec">
					<filter.ref ref.id="filter_676552258754200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_OMAPL138_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.OMAPL138"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_11.projectspec">
					<filter.ref ref.id="filter_676552258754200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_OMAPL138_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.OMAPL138"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_12.projectspec">
					<filter.ref ref.id="filter_676552258754200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_OMAPL138_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.OMAPL138"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_13.projectspec">
					<filter.ref ref.id="filter_676552258754200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_OMAPL138_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.OMAPL138"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_10.projectspec">
					<filter.ref ref.id="filter_676552258754200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_OMAPL138_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.OMAPL138"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
		</contents>
		<contents name="OMAP3" desc="OMAP3" icon="plugin://icons/obj16/devices.png">
			<contents name="BeagleBoard" desc="BeagleBoard" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_676552260230400">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>BeagleBoard</tag>
					<tag>OMAP3</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_0.projectspec">
					<filter.ref ref.id="filter_676552260230400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_BeagleBoard_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP3530.BeagleBoard"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_1.projectspec">
					<filter.ref ref.id="filter_676552260230400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_BeagleBoard_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP3530.BeagleBoard"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_676552260353300">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>BeagleBoard</tag>
					<tag>OMAP3</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_14.projectspec">
					<filter.ref ref.id="filter_676552260353300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_BeagleBoard_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP3530.BeagleBoard"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_3.projectspec">
					<filter.ref ref.id="filter_676552260353300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_BeagleBoard_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP3530.BeagleBoard"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_4.projectspec">
					<filter.ref ref.id="filter_676552260353300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_BeagleBoard_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP3530.BeagleBoard"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_5.projectspec">
					<filter.ref ref.id="filter_676552260353300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_BeagleBoard_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP3530.BeagleBoard"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_6.projectspec">
					<filter.ref ref.id="filter_676552260353300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_BeagleBoard_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP3530.BeagleBoard"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_7.projectspec">
					<filter.ref ref.id="filter_676552260353300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_BeagleBoard_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP3530.BeagleBoard"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_8.projectspec">
					<filter.ref ref.id="filter_676552260353300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_BeagleBoard_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP3530.BeagleBoard"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_9.projectspec">
					<filter.ref ref.id="filter_676552260353300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_BeagleBoard_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP3530.BeagleBoard"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_11.projectspec">
					<filter.ref ref.id="filter_676552260353300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_BeagleBoard_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP3530.BeagleBoard"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_12.projectspec">
					<filter.ref ref.id="filter_676552260353300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_BeagleBoard_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP3530.BeagleBoard"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_13.projectspec">
					<filter.ref ref.id="filter_676552260353300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_BeagleBoard_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP3530.BeagleBoard"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_10.projectspec">
					<filter.ref ref.id="filter_676552260353300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_BeagleBoard_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP3530.BeagleBoard"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="EVMOMAP3530" desc="EVMOMAP3530" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_676552261067200">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>EVMOMAP3530</tag>
					<tag>OMAP3</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_0.projectspec">
					<filter.ref ref.id="filter_676552261067200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_EVMOMAP3530_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP3530.EVMOMAP3530"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_1.projectspec">
					<filter.ref ref.id="filter_676552261067200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_EVMOMAP3530_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP3530.EVMOMAP3530"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_676552261170700">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>EVMOMAP3530</tag>
					<tag>OMAP3</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_14.projectspec">
					<filter.ref ref.id="filter_676552261170700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_EVMOMAP3530_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP3530.EVMOMAP3530"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_3.projectspec">
					<filter.ref ref.id="filter_676552261170700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_EVMOMAP3530_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP3530.EVMOMAP3530"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_4.projectspec">
					<filter.ref ref.id="filter_676552261170700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_EVMOMAP3530_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP3530.EVMOMAP3530"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_5.projectspec">
					<filter.ref ref.id="filter_676552261170700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_EVMOMAP3530_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP3530.EVMOMAP3530"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_6.projectspec">
					<filter.ref ref.id="filter_676552261170700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_EVMOMAP3530_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP3530.EVMOMAP3530"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_7.projectspec">
					<filter.ref ref.id="filter_676552261170700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_EVMOMAP3530_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP3530.EVMOMAP3530"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_8.projectspec">
					<filter.ref ref.id="filter_676552261170700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_EVMOMAP3530_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP3530.EVMOMAP3530"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_9.projectspec">
					<filter.ref ref.id="filter_676552261170700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_EVMOMAP3530_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP3530.EVMOMAP3530"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_11.projectspec">
					<filter.ref ref.id="filter_676552261170700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_EVMOMAP3530_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP3530.EVMOMAP3530"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_12.projectspec">
					<filter.ref ref.id="filter_676552261170700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_EVMOMAP3530_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP3530.EVMOMAP3530"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_13.projectspec">
					<filter.ref ref.id="filter_676552261170700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_EVMOMAP3530_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP3530.EVMOMAP3530"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_10.projectspec">
					<filter.ref ref.id="filter_676552261170700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_EVMOMAP3530_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP3530.EVMOMAP3530"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="OMAP3430" desc="OMAP3430" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_676552261782100">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>OMAP3430</tag>
					<tag>OMAP3</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_0.projectspec">
					<filter.ref ref.id="filter_676552261782100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_OMAP3430_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP3430"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_1.projectspec">
					<filter.ref ref.id="filter_676552261782100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_OMAP3430_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP3430"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_676552261863100">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>OMAP3430</tag>
					<tag>OMAP3</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_14.projectspec">
					<filter.ref ref.id="filter_676552261863100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_OMAP3430_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP3430"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_3.projectspec">
					<filter.ref ref.id="filter_676552261863100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_OMAP3430_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP3430"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_4.projectspec">
					<filter.ref ref.id="filter_676552261863100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_OMAP3430_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP3430"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_5.projectspec">
					<filter.ref ref.id="filter_676552261863100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_OMAP3430_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP3430"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_6.projectspec">
					<filter.ref ref.id="filter_676552261863100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_OMAP3430_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP3430"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_7.projectspec">
					<filter.ref ref.id="filter_676552261863100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_OMAP3430_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP3430"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_8.projectspec">
					<filter.ref ref.id="filter_676552261863100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_OMAP3430_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP3430"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_9.projectspec">
					<filter.ref ref.id="filter_676552261863100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_OMAP3430_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP3430"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_11.projectspec">
					<filter.ref ref.id="filter_676552261863100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_OMAP3430_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP3430"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_12.projectspec">
					<filter.ref ref.id="filter_676552261863100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_OMAP3430_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP3430"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_13.projectspec">
					<filter.ref ref.id="filter_676552261863100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_OMAP3430_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP3430"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_10.projectspec">
					<filter.ref ref.id="filter_676552261863100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_OMAP3430_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP3430"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="OMAP3525" desc="OMAP3525" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_676552262401200">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>OMAP3525</tag>
					<tag>OMAP3</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_0.projectspec">
					<filter.ref ref.id="filter_676552262401200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_OMAP3525_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP3525"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_1.projectspec">
					<filter.ref ref.id="filter_676552262401200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_OMAP3525_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP3525"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_676552262481500">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>OMAP3525</tag>
					<tag>OMAP3</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_14.projectspec">
					<filter.ref ref.id="filter_676552262481500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_OMAP3525_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP3525"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_3.projectspec">
					<filter.ref ref.id="filter_676552262481500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_OMAP3525_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP3525"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_4.projectspec">
					<filter.ref ref.id="filter_676552262481500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_OMAP3525_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP3525"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_5.projectspec">
					<filter.ref ref.id="filter_676552262481500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_OMAP3525_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP3525"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_6.projectspec">
					<filter.ref ref.id="filter_676552262481500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_OMAP3525_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP3525"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_7.projectspec">
					<filter.ref ref.id="filter_676552262481500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_OMAP3525_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP3525"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_8.projectspec">
					<filter.ref ref.id="filter_676552262481500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_OMAP3525_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP3525"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_9.projectspec">
					<filter.ref ref.id="filter_676552262481500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_OMAP3525_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP3525"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_11.projectspec">
					<filter.ref ref.id="filter_676552262481500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_OMAP3525_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP3525"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_12.projectspec">
					<filter.ref ref.id="filter_676552262481500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_OMAP3525_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP3525"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_13.projectspec">
					<filter.ref ref.id="filter_676552262481500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_OMAP3525_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP3525"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_10.projectspec">
					<filter.ref ref.id="filter_676552262481500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_OMAP3525_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP3525"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="OMAP3530" desc="OMAP3530" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_676552263017300">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>OMAP3530</tag>
					<tag>OMAP3</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_0.projectspec">
					<filter.ref ref.id="filter_676552263017300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_OMAP3530_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP3530"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_1.projectspec">
					<filter.ref ref.id="filter_676552263017300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_OMAP3530_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP3530"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_676552263095900">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>OMAP3530</tag>
					<tag>OMAP3</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_14.projectspec">
					<filter.ref ref.id="filter_676552263095900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_OMAP3530_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP3530"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_3.projectspec">
					<filter.ref ref.id="filter_676552263095900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_OMAP3530_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP3530"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_4.projectspec">
					<filter.ref ref.id="filter_676552263095900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_OMAP3530_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP3530"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_5.projectspec">
					<filter.ref ref.id="filter_676552263095900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_OMAP3530_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP3530"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_6.projectspec">
					<filter.ref ref.id="filter_676552263095900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_OMAP3530_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP3530"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_7.projectspec">
					<filter.ref ref.id="filter_676552263095900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_OMAP3530_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP3530"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_8.projectspec">
					<filter.ref ref.id="filter_676552263095900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_OMAP3530_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP3530"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_9.projectspec">
					<filter.ref ref.id="filter_676552263095900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_OMAP3530_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP3530"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_11.projectspec">
					<filter.ref ref.id="filter_676552263095900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_OMAP3530_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP3530"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_12.projectspec">
					<filter.ref ref.id="filter_676552263095900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_OMAP3530_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP3530"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_13.projectspec">
					<filter.ref ref.id="filter_676552263095900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_OMAP3530_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP3530"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_10.projectspec">
					<filter.ref ref.id="filter_676552263095900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_OMAP3530_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP3530"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="OMAP3630" desc="OMAP3630" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_676552263638100">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>OMAP3630</tag>
					<tag>OMAP3</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_0.projectspec">
					<filter.ref ref.id="filter_676552263638100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_OMAP3630_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP3630"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_1.projectspec">
					<filter.ref ref.id="filter_676552263638100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_OMAP3630_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP3630"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_676552263716400">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>OMAP3630</tag>
					<tag>OMAP3</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_14.projectspec">
					<filter.ref ref.id="filter_676552263716400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_OMAP3630_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP3630"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_3.projectspec">
					<filter.ref ref.id="filter_676552263716400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_OMAP3630_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP3630"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_4.projectspec">
					<filter.ref ref.id="filter_676552263716400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_OMAP3630_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP3630"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_5.projectspec">
					<filter.ref ref.id="filter_676552263716400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_OMAP3630_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP3630"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_6.projectspec">
					<filter.ref ref.id="filter_676552263716400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_OMAP3630_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP3630"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_7.projectspec">
					<filter.ref ref.id="filter_676552263716400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_OMAP3630_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP3630"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_8.projectspec">
					<filter.ref ref.id="filter_676552263716400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_OMAP3630_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP3630"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_9.projectspec">
					<filter.ref ref.id="filter_676552263716400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_OMAP3630_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP3630"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_11.projectspec">
					<filter.ref ref.id="filter_676552263716400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_OMAP3630_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP3630"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_12.projectspec">
					<filter.ref ref.id="filter_676552263716400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_OMAP3630_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP3630"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_13.projectspec">
					<filter.ref ref.id="filter_676552263716400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_OMAP3630_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP3630"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_10.projectspec">
					<filter.ref ref.id="filter_676552263716400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_OMAP3630_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP3630"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
		</contents>
		<contents name="OMAP4" desc="OMAP4" icon="plugin://icons/obj16/devices.png">
			<contents name="Blaze_4430" desc="Blaze_4430" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_676552264274000">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>Blaze_4430</tag>
					<tag>OMAP4</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_0.projectspec">
					<filter.ref ref.id="filter_676552264274000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_Blaze_4430_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP4430.Blaze_4430"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_1.projectspec">
					<filter.ref ref.id="filter_676552264274000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_Blaze_4430_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP4430.Blaze_4430"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_676552264356300">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>Blaze_4430</tag>
					<tag>OMAP4</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_14.projectspec">
					<filter.ref ref.id="filter_676552264356300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_Blaze_4430_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP4430.Blaze_4430"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_3.projectspec">
					<filter.ref ref.id="filter_676552264356300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_Blaze_4430_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP4430.Blaze_4430"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_4.projectspec">
					<filter.ref ref.id="filter_676552264356300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_Blaze_4430_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP4430.Blaze_4430"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_5.projectspec">
					<filter.ref ref.id="filter_676552264356300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_Blaze_4430_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP4430.Blaze_4430"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_6.projectspec">
					<filter.ref ref.id="filter_676552264356300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_Blaze_4430_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP4430.Blaze_4430"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_7.projectspec">
					<filter.ref ref.id="filter_676552264356300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_Blaze_4430_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP4430.Blaze_4430"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_8.projectspec">
					<filter.ref ref.id="filter_676552264356300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_Blaze_4430_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP4430.Blaze_4430"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_9.projectspec">
					<filter.ref ref.id="filter_676552264356300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_Blaze_4430_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP4430.Blaze_4430"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_11.projectspec">
					<filter.ref ref.id="filter_676552264356300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_Blaze_4430_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP4430.Blaze_4430"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_12.projectspec">
					<filter.ref ref.id="filter_676552264356300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_Blaze_4430_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP4430.Blaze_4430"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_13.projectspec">
					<filter.ref ref.id="filter_676552264356300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_Blaze_4430_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP4430.Blaze_4430"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_10.projectspec">
					<filter.ref ref.id="filter_676552264356300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_Blaze_4430_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP4430.Blaze_4430"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="Blaze_4460" desc="Blaze_4460" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_676552264954900">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>Blaze_4460</tag>
					<tag>OMAP4</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_0.projectspec">
					<filter.ref ref.id="filter_676552264954900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_Blaze_4460_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP4460.Blaze_4460"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_1.projectspec">
					<filter.ref ref.id="filter_676552264954900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_Blaze_4460_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP4460.Blaze_4460"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_676552265039400">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>Blaze_4460</tag>
					<tag>OMAP4</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_14.projectspec">
					<filter.ref ref.id="filter_676552265039400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_Blaze_4460_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP4460.Blaze_4460"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_3.projectspec">
					<filter.ref ref.id="filter_676552265039400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_Blaze_4460_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP4460.Blaze_4460"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_4.projectspec">
					<filter.ref ref.id="filter_676552265039400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_Blaze_4460_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP4460.Blaze_4460"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_5.projectspec">
					<filter.ref ref.id="filter_676552265039400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_Blaze_4460_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP4460.Blaze_4460"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_6.projectspec">
					<filter.ref ref.id="filter_676552265039400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_Blaze_4460_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP4460.Blaze_4460"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_7.projectspec">
					<filter.ref ref.id="filter_676552265039400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_Blaze_4460_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP4460.Blaze_4460"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_8.projectspec">
					<filter.ref ref.id="filter_676552265039400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_Blaze_4460_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP4460.Blaze_4460"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_9.projectspec">
					<filter.ref ref.id="filter_676552265039400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_Blaze_4460_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP4460.Blaze_4460"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_11.projectspec">
					<filter.ref ref.id="filter_676552265039400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_Blaze_4460_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP4460.Blaze_4460"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_12.projectspec">
					<filter.ref ref.id="filter_676552265039400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_Blaze_4460_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP4460.Blaze_4460"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_13.projectspec">
					<filter.ref ref.id="filter_676552265039400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_Blaze_4460_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP4460.Blaze_4460"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_10.projectspec">
					<filter.ref ref.id="filter_676552265039400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_Blaze_4460_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP4460.Blaze_4460"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="OMAP4430" desc="OMAP4430" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_676552266683100">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>OMAP4430</tag>
					<tag>OMAP4</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_0.projectspec">
					<filter.ref ref.id="filter_676552266683100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_OMAP4430_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP4430"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_1.projectspec">
					<filter.ref ref.id="filter_676552266683100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_OMAP4430_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP4430"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_676552266875100">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>OMAP4430</tag>
					<tag>OMAP4</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_14.projectspec">
					<filter.ref ref.id="filter_676552266875100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_OMAP4430_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP4430"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_3.projectspec">
					<filter.ref ref.id="filter_676552266875100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_OMAP4430_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP4430"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_4.projectspec">
					<filter.ref ref.id="filter_676552266875100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_OMAP4430_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP4430"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_5.projectspec">
					<filter.ref ref.id="filter_676552266875100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_OMAP4430_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP4430"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_6.projectspec">
					<filter.ref ref.id="filter_676552266875100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_OMAP4430_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP4430"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_7.projectspec">
					<filter.ref ref.id="filter_676552266875100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_OMAP4430_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP4430"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_8.projectspec">
					<filter.ref ref.id="filter_676552266875100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_OMAP4430_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP4430"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_9.projectspec">
					<filter.ref ref.id="filter_676552266875100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_OMAP4430_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP4430"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_11.projectspec">
					<filter.ref ref.id="filter_676552266875100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_OMAP4430_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP4430"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_12.projectspec">
					<filter.ref ref.id="filter_676552266875100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_OMAP4430_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP4430"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_13.projectspec">
					<filter.ref ref.id="filter_676552266875100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_OMAP4430_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP4430"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_10.projectspec">
					<filter.ref ref.id="filter_676552266875100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_OMAP4430_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP4430"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="OMAP4460" desc="OMAP4460" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_676552267609800">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>OMAP4460</tag>
					<tag>OMAP4</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_0.projectspec">
					<filter.ref ref.id="filter_676552267609800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_OMAP4460_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP4460"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_1.projectspec">
					<filter.ref ref.id="filter_676552267609800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_OMAP4460_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP4460"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_676552267727500">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>OMAP4460</tag>
					<tag>OMAP4</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_14.projectspec">
					<filter.ref ref.id="filter_676552267727500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_OMAP4460_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP4460"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_3.projectspec">
					<filter.ref ref.id="filter_676552267727500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_OMAP4460_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP4460"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_4.projectspec">
					<filter.ref ref.id="filter_676552267727500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_OMAP4460_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP4460"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_5.projectspec">
					<filter.ref ref.id="filter_676552267727500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_OMAP4460_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP4460"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_6.projectspec">
					<filter.ref ref.id="filter_676552267727500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_OMAP4460_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP4460"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_7.projectspec">
					<filter.ref ref.id="filter_676552267727500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_OMAP4460_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP4460"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_8.projectspec">
					<filter.ref ref.id="filter_676552267727500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_OMAP4460_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP4460"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_9.projectspec">
					<filter.ref ref.id="filter_676552267727500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_OMAP4460_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP4460"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_11.projectspec">
					<filter.ref ref.id="filter_676552267727500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_OMAP4460_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP4460"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_12.projectspec">
					<filter.ref ref.id="filter_676552267727500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_OMAP4460_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP4460"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_13.projectspec">
					<filter.ref ref.id="filter_676552267727500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_OMAP4460_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP4460"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_10.projectspec">
					<filter.ref ref.id="filter_676552267727500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_OMAP4460_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP4460"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="PandaBoard" desc="PandaBoard" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_676552268367200">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>PandaBoard</tag>
					<tag>OMAP4</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_0.projectspec">
					<filter.ref ref.id="filter_676552268367200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_PandaBoard_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP4430.PandaBoard"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_1.projectspec">
					<filter.ref ref.id="filter_676552268367200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_PandaBoard_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP4430.PandaBoard"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_676552268463800">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>PandaBoard</tag>
					<tag>OMAP4</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_14.projectspec">
					<filter.ref ref.id="filter_676552268463800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_PandaBoard_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP4430.PandaBoard"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_3.projectspec">
					<filter.ref ref.id="filter_676552268463800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_PandaBoard_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP4430.PandaBoard"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_4.projectspec">
					<filter.ref ref.id="filter_676552268463800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_PandaBoard_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP4430.PandaBoard"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_5.projectspec">
					<filter.ref ref.id="filter_676552268463800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_PandaBoard_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP4430.PandaBoard"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_6.projectspec">
					<filter.ref ref.id="filter_676552268463800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_PandaBoard_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP4430.PandaBoard"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_7.projectspec">
					<filter.ref ref.id="filter_676552268463800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_PandaBoard_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP4430.PandaBoard"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_8.projectspec">
					<filter.ref ref.id="filter_676552268463800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_PandaBoard_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP4430.PandaBoard"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_9.projectspec">
					<filter.ref ref.id="filter_676552268463800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_PandaBoard_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP4430.PandaBoard"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_11.projectspec">
					<filter.ref ref.id="filter_676552268463800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_PandaBoard_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP4430.PandaBoard"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_12.projectspec">
					<filter.ref ref.id="filter_676552268463800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_PandaBoard_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP4430.PandaBoard"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_13.projectspec">
					<filter.ref ref.id="filter_676552268463800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_PandaBoard_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP4430.PandaBoard"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_10.projectspec">
					<filter.ref ref.id="filter_676552268463800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_PandaBoard_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP4430.PandaBoard"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="PandaBoard_ES" desc="PandaBoard_ES" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_676552269111700">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>PandaBoard_ES</tag>
					<tag>OMAP4</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_0.projectspec">
					<filter.ref ref.id="filter_676552269111700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_PandaBoard_ES_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP4460.PandaBoard_ES"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_1.projectspec">
					<filter.ref ref.id="filter_676552269111700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_PandaBoard_ES_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP4460.PandaBoard_ES"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_676552269208900">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>PandaBoard_ES</tag>
					<tag>OMAP4</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_14.projectspec">
					<filter.ref ref.id="filter_676552269208900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_PandaBoard_ES_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP4460.PandaBoard_ES"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_3.projectspec">
					<filter.ref ref.id="filter_676552269208900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_PandaBoard_ES_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP4460.PandaBoard_ES"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_4.projectspec">
					<filter.ref ref.id="filter_676552269208900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_PandaBoard_ES_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP4460.PandaBoard_ES"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_5.projectspec">
					<filter.ref ref.id="filter_676552269208900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_PandaBoard_ES_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP4460.PandaBoard_ES"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_6.projectspec">
					<filter.ref ref.id="filter_676552269208900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_PandaBoard_ES_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP4460.PandaBoard_ES"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_7.projectspec">
					<filter.ref ref.id="filter_676552269208900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_PandaBoard_ES_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP4460.PandaBoard_ES"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_8.projectspec">
					<filter.ref ref.id="filter_676552269208900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_PandaBoard_ES_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP4460.PandaBoard_ES"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_9.projectspec">
					<filter.ref ref.id="filter_676552269208900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_PandaBoard_ES_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP4460.PandaBoard_ES"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_11.projectspec">
					<filter.ref ref.id="filter_676552269208900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_PandaBoard_ES_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP4460.PandaBoard_ES"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_12.projectspec">
					<filter.ref ref.id="filter_676552269208900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_PandaBoard_ES_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP4460.PandaBoard_ES"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_13.projectspec">
					<filter.ref ref.id="filter_676552269208900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_PandaBoard_ES_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP4460.PandaBoard_ES"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_10.projectspec">
					<filter.ref ref.id="filter_676552269208900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_PandaBoard_ES_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP4460.PandaBoard_ES"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
		</contents>
		<contents name="OMAP5" desc="OMAP5" icon="plugin://icons/obj16/devices.png">
			<contents name="OMAP5430" desc="OMAP5430" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_676552270046800">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>OMAP5430</tag>
					<tag>OMAP5</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_0.projectspec">
					<filter.ref ref.id="filter_676552270046800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_OMAP5430_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP5430"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_1.projectspec">
					<filter.ref ref.id="filter_676552270046800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_OMAP5430_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP5430"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_676552270142500">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>OMAP5430</tag>
					<tag>OMAP5</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_14.projectspec">
					<filter.ref ref.id="filter_676552270142500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_OMAP5430_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP5430"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_3.projectspec">
					<filter.ref ref.id="filter_676552270142500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_OMAP5430_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP5430"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_4.projectspec">
					<filter.ref ref.id="filter_676552270142500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_OMAP5430_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP5430"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_5.projectspec">
					<filter.ref ref.id="filter_676552270142500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_OMAP5430_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP5430"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_6.projectspec">
					<filter.ref ref.id="filter_676552270142500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_OMAP5430_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP5430"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_7.projectspec">
					<filter.ref ref.id="filter_676552270142500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_OMAP5430_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP5430"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_8.projectspec">
					<filter.ref ref.id="filter_676552270142500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_OMAP5430_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP5430"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_9.projectspec">
					<filter.ref ref.id="filter_676552270142500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_OMAP5430_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP5430"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_11.projectspec">
					<filter.ref ref.id="filter_676552270142500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_OMAP5430_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP5430"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_12.projectspec">
					<filter.ref ref.id="filter_676552270142500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_OMAP5430_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP5430"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_13.projectspec">
					<filter.ref ref.id="filter_676552270142500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_OMAP5430_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP5430"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_10.projectspec">
					<filter.ref ref.id="filter_676552270142500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_OMAP5430_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP5430"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="OMAP5432" desc="OMAP5432" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_676552270759200">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>OMAP5432</tag>
					<tag>OMAP5</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_0.projectspec">
					<filter.ref ref.id="filter_676552270759200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_OMAP5432_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP5432"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_1.projectspec">
					<filter.ref ref.id="filter_676552270759200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_OMAP5432_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP5432"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_676552270847700">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>OMAP5432</tag>
					<tag>OMAP5</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_14.projectspec">
					<filter.ref ref.id="filter_676552270847700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_OMAP5432_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP5432"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_3.projectspec">
					<filter.ref ref.id="filter_676552270847700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_OMAP5432_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP5432"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_4.projectspec">
					<filter.ref ref.id="filter_676552270847700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_OMAP5432_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP5432"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_5.projectspec">
					<filter.ref ref.id="filter_676552270847700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_OMAP5432_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP5432"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_6.projectspec">
					<filter.ref ref.id="filter_676552270847700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_OMAP5432_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP5432"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_7.projectspec">
					<filter.ref ref.id="filter_676552270847700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_OMAP5432_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP5432"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_8.projectspec">
					<filter.ref ref.id="filter_676552270847700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_OMAP5432_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP5432"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_9.projectspec">
					<filter.ref ref.id="filter_676552270847700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_OMAP5432_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP5432"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_11.projectspec">
					<filter.ref ref.id="filter_676552270847700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_OMAP5432_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP5432"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_12.projectspec">
					<filter.ref ref.id="filter_676552270847700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_OMAP5432_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP5432"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_13.projectspec">
					<filter.ref ref.id="filter_676552270847700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_OMAP5432_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP5432"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_10.projectspec">
					<filter.ref ref.id="filter_676552270847700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_OMAP5432_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP5432"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="OMAP5432_UEVM" desc="OMAP5432_UEVM" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_676552271435200">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>OMAP5432_UEVM</tag>
					<tag>OMAP5</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_0.projectspec">
					<filter.ref ref.id="filter_676552271435200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_OMAP5432_UEVM_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP5432.OMAP5432_UEVM"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_1.projectspec">
					<filter.ref ref.id="filter_676552271435200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_OMAP5432_UEVM_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP5432.OMAP5432_UEVM"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_676552271524300">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>OMAP5432_UEVM</tag>
					<tag>OMAP5</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_14.projectspec">
					<filter.ref ref.id="filter_676552271524300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_OMAP5432_UEVM_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP5432.OMAP5432_UEVM"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_3.projectspec">
					<filter.ref ref.id="filter_676552271524300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_OMAP5432_UEVM_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP5432.OMAP5432_UEVM"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_4.projectspec">
					<filter.ref ref.id="filter_676552271524300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_OMAP5432_UEVM_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP5432.OMAP5432_UEVM"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_5.projectspec">
					<filter.ref ref.id="filter_676552271524300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_OMAP5432_UEVM_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP5432.OMAP5432_UEVM"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_6.projectspec">
					<filter.ref ref.id="filter_676552271524300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_OMAP5432_UEVM_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP5432.OMAP5432_UEVM"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_7.projectspec">
					<filter.ref ref.id="filter_676552271524300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_OMAP5432_UEVM_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP5432.OMAP5432_UEVM"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_8.projectspec">
					<filter.ref ref.id="filter_676552271524300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_OMAP5432_UEVM_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP5432.OMAP5432_UEVM"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_9.projectspec">
					<filter.ref ref.id="filter_676552271524300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_OMAP5432_UEVM_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP5432.OMAP5432_UEVM"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_11.projectspec">
					<filter.ref ref.id="filter_676552271524300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_OMAP5432_UEVM_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP5432.OMAP5432_UEVM"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_12.projectspec">
					<filter.ref ref.id="filter_676552271524300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_OMAP5432_UEVM_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP5432.OMAP5432_UEVM"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_13.projectspec">
					<filter.ref ref.id="filter_676552271524300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_OMAP5432_UEVM_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP5432.OMAP5432_UEVM"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_10.projectspec">
					<filter.ref ref.id="filter_676552271524300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_OMAP5432_UEVM_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP5432.OMAP5432_UEVM"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
		</contents>
		<contents name="TCI High Performance DSP" desc="TCI High Performance DSP" icon="plugin://icons/obj16/devices.png">
			<contents name="DSKTCI6482" desc="DSKTCI6482" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_676552274188100">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>DSKTCI6482</tag>
					<tag>TCI High Performance DSP</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_0.projectspec">
					<filter.ref ref.id="filter_676552274188100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_DSKTCI6482"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320TCI6482.DSKTCI6482"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_1.projectspec">
					<filter.ref ref.id="filter_676552274188100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_DSKTCI6482"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320TCI6482.DSKTCI6482"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_676552274306700">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>DSKTCI6482</tag>
					<tag>TCI High Performance DSP</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_14.projectspec">
					<filter.ref ref.id="filter_676552274306700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_DSKTCI6482"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320TCI6482.DSKTCI6482"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_3.projectspec">
					<filter.ref ref.id="filter_676552274306700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_DSKTCI6482"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320TCI6482.DSKTCI6482"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_4.projectspec">
					<filter.ref ref.id="filter_676552274306700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_DSKTCI6482"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320TCI6482.DSKTCI6482"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_5.projectspec">
					<filter.ref ref.id="filter_676552274306700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_DSKTCI6482"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320TCI6482.DSKTCI6482"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_6.projectspec">
					<filter.ref ref.id="filter_676552274306700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_DSKTCI6482"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320TCI6482.DSKTCI6482"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_7.projectspec">
					<filter.ref ref.id="filter_676552274306700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_DSKTCI6482"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320TCI6482.DSKTCI6482"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_8.projectspec">
					<filter.ref ref.id="filter_676552274306700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_DSKTCI6482"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320TCI6482.DSKTCI6482"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_9.projectspec">
					<filter.ref ref.id="filter_676552274306700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_DSKTCI6482"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320TCI6482.DSKTCI6482"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_11.projectspec">
					<filter.ref ref.id="filter_676552274306700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_DSKTCI6482"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320TCI6482.DSKTCI6482"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_12.projectspec">
					<filter.ref ref.id="filter_676552274306700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_DSKTCI6482"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320TCI6482.DSKTCI6482"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_13.projectspec">
					<filter.ref ref.id="filter_676552274306700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_DSKTCI6482"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320TCI6482.DSKTCI6482"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_10.projectspec">
					<filter.ref ref.id="filter_676552274306700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_DSKTCI6482"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320TCI6482.DSKTCI6482"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="EVMTCI6482 (TMS320TCI6482)" desc="EVMTCI6482 (TMS320TCI6482)" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_676552274904000">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>EVMTCI6482 (TMS320TCI6482)</tag>
					<tag>TCI High Performance DSP</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_0.projectspec">
					<filter.ref ref.id="filter_676552274904000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_EVMTCI6482_TMS320TCI6482"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320TCI6482.EVMTCI6482"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_1.projectspec">
					<filter.ref ref.id="filter_676552274904000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_EVMTCI6482_TMS320TCI6482"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320TCI6482.EVMTCI6482"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_676552274993000">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>EVMTCI6482 (TMS320TCI6482)</tag>
					<tag>TCI High Performance DSP</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_14.projectspec">
					<filter.ref ref.id="filter_676552274993000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_EVMTCI6482_TMS320TCI6482"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320TCI6482.EVMTCI6482"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_3.projectspec">
					<filter.ref ref.id="filter_676552274993000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_EVMTCI6482_TMS320TCI6482"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320TCI6482.EVMTCI6482"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_4.projectspec">
					<filter.ref ref.id="filter_676552274993000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_EVMTCI6482_TMS320TCI6482"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320TCI6482.EVMTCI6482"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_5.projectspec">
					<filter.ref ref.id="filter_676552274993000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_EVMTCI6482_TMS320TCI6482"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320TCI6482.EVMTCI6482"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_6.projectspec">
					<filter.ref ref.id="filter_676552274993000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_EVMTCI6482_TMS320TCI6482"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320TCI6482.EVMTCI6482"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_7.projectspec">
					<filter.ref ref.id="filter_676552274993000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_EVMTCI6482_TMS320TCI6482"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320TCI6482.EVMTCI6482"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_8.projectspec">
					<filter.ref ref.id="filter_676552274993000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_EVMTCI6482_TMS320TCI6482"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320TCI6482.EVMTCI6482"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_9.projectspec">
					<filter.ref ref.id="filter_676552274993000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_EVMTCI6482_TMS320TCI6482"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320TCI6482.EVMTCI6482"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_11.projectspec">
					<filter.ref ref.id="filter_676552274993000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_EVMTCI6482_TMS320TCI6482"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320TCI6482.EVMTCI6482"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_12.projectspec">
					<filter.ref ref.id="filter_676552274993000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_EVMTCI6482_TMS320TCI6482"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320TCI6482.EVMTCI6482"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_13.projectspec">
					<filter.ref ref.id="filter_676552274993000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_EVMTCI6482_TMS320TCI6482"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320TCI6482.EVMTCI6482"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_10.projectspec">
					<filter.ref ref.id="filter_676552274993000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_EVMTCI6482_TMS320TCI6482"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320TCI6482.EVMTCI6482"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="TMS320TCI6482" desc="TMS320TCI6482" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_676552275565800">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>TMS320TCI6482</tag>
					<tag>TCI High Performance DSP</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_0.projectspec">
					<filter.ref ref.id="filter_676552275565800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_TMS320TCI6482"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320TCI6482"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_1.projectspec">
					<filter.ref ref.id="filter_676552275565800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_TMS320TCI6482"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320TCI6482"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_676552275652300">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>TMS320TCI6482</tag>
					<tag>TCI High Performance DSP</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_14.projectspec">
					<filter.ref ref.id="filter_676552275652300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_TMS320TCI6482"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320TCI6482"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_3.projectspec">
					<filter.ref ref.id="filter_676552275652300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_TMS320TCI6482"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320TCI6482"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_4.projectspec">
					<filter.ref ref.id="filter_676552275652300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_TMS320TCI6482"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320TCI6482"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_5.projectspec">
					<filter.ref ref.id="filter_676552275652300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_TMS320TCI6482"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320TCI6482"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_6.projectspec">
					<filter.ref ref.id="filter_676552275652300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_TMS320TCI6482"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320TCI6482"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_7.projectspec">
					<filter.ref ref.id="filter_676552275652300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_TMS320TCI6482"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320TCI6482"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_8.projectspec">
					<filter.ref ref.id="filter_676552275652300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_TMS320TCI6482"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320TCI6482"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_9.projectspec">
					<filter.ref ref.id="filter_676552275652300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_TMS320TCI6482"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320TCI6482"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_11.projectspec">
					<filter.ref ref.id="filter_676552275652300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_TMS320TCI6482"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320TCI6482"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_12.projectspec">
					<filter.ref ref.id="filter_676552275652300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_TMS320TCI6482"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320TCI6482"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_13.projectspec">
					<filter.ref ref.id="filter_676552275652300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_TMS320TCI6482"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320TCI6482"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_10.projectspec">
					<filter.ref ref.id="filter_676552275652300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_TMS320TCI6482"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320TCI6482"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="TMS320TCI6484" desc="TMS320TCI6484" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_676552276199000">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>TMS320TCI6484</tag>
					<tag>TCI High Performance DSP</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_0.projectspec">
					<filter.ref ref.id="filter_676552276199000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_TMS320TCI6484"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320TCI6484"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_1.projectspec">
					<filter.ref ref.id="filter_676552276199000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_TMS320TCI6484"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320TCI6484"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_676552276281400">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>TMS320TCI6484</tag>
					<tag>TCI High Performance DSP</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_14.projectspec">
					<filter.ref ref.id="filter_676552276281400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_TMS320TCI6484"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320TCI6484"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_3.projectspec">
					<filter.ref ref.id="filter_676552276281400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_TMS320TCI6484"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320TCI6484"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_4.projectspec">
					<filter.ref ref.id="filter_676552276281400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_TMS320TCI6484"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320TCI6484"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_5.projectspec">
					<filter.ref ref.id="filter_676552276281400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_TMS320TCI6484"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320TCI6484"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_6.projectspec">
					<filter.ref ref.id="filter_676552276281400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_TMS320TCI6484"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320TCI6484"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_7.projectspec">
					<filter.ref ref.id="filter_676552276281400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_TMS320TCI6484"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320TCI6484"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_8.projectspec">
					<filter.ref ref.id="filter_676552276281400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_TMS320TCI6484"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320TCI6484"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_9.projectspec">
					<filter.ref ref.id="filter_676552276281400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_TMS320TCI6484"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320TCI6484"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_11.projectspec">
					<filter.ref ref.id="filter_676552276281400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_TMS320TCI6484"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320TCI6484"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_12.projectspec">
					<filter.ref ref.id="filter_676552276281400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_TMS320TCI6484"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320TCI6484"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_13.projectspec">
					<filter.ref ref.id="filter_676552276281400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_TMS320TCI6484"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320TCI6484"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_10.projectspec">
					<filter.ref ref.id="filter_676552276281400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_TMS320TCI6484"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320TCI6484"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
		</contents>
		<contents name="TMS320C64XX" desc="TMS320C64XX" icon="plugin://icons/obj16/devices.png">
			<contents name="EVMC6424" desc="EVMC6424" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_676552276902000">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>EVMC6424</tag>
					<tag>TMS320C64XX</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_0.projectspec">
					<filter.ref ref.id="filter_676552276902000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_EVMC6424"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6424.EVMC6424"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_1.projectspec">
					<filter.ref ref.id="filter_676552276902000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_EVMC6424"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6424.EVMC6424"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_676552276987100">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>EVMC6424</tag>
					<tag>TMS320C64XX</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_14.projectspec">
					<filter.ref ref.id="filter_676552276987100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_EVMC6424"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6424.EVMC6424"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_3.projectspec">
					<filter.ref ref.id="filter_676552276987100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_EVMC6424"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6424.EVMC6424"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_4.projectspec">
					<filter.ref ref.id="filter_676552276987100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_EVMC6424"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6424.EVMC6424"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_5.projectspec">
					<filter.ref ref.id="filter_676552276987100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_EVMC6424"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6424.EVMC6424"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_6.projectspec">
					<filter.ref ref.id="filter_676552276987100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_EVMC6424"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6424.EVMC6424"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_7.projectspec">
					<filter.ref ref.id="filter_676552276987100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_EVMC6424"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6424.EVMC6424"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_8.projectspec">
					<filter.ref ref.id="filter_676552276987100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_EVMC6424"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6424.EVMC6424"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_9.projectspec">
					<filter.ref ref.id="filter_676552276987100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_EVMC6424"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6424.EVMC6424"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_11.projectspec">
					<filter.ref ref.id="filter_676552276987100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_EVMC6424"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6424.EVMC6424"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_12.projectspec">
					<filter.ref ref.id="filter_676552276987100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_EVMC6424"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6424.EVMC6424"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_13.projectspec">
					<filter.ref ref.id="filter_676552276987100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_EVMC6424"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6424.EVMC6424"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_10.projectspec">
					<filter.ref ref.id="filter_676552276987100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_EVMC6424"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6424.EVMC6424"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="EVMC6474" desc="EVMC6474" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_676552277554700">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>EVMC6474</tag>
					<tag>TMS320C64XX</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_0.projectspec">
					<filter.ref ref.id="filter_676552277554700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_EVMC6474"/>
							<attribute key="device.variant" value="TMS320C64XX.EVMC6474"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_1.projectspec">
					<filter.ref ref.id="filter_676552277554700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_EVMC6474"/>
							<attribute key="device.variant" value="TMS320C64XX.EVMC6474"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_676552277632800">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>EVMC6474</tag>
					<tag>TMS320C64XX</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_14.projectspec">
					<filter.ref ref.id="filter_676552277632800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_EVMC6474"/>
							<attribute key="device.variant" value="TMS320C64XX.EVMC6474"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_3.projectspec">
					<filter.ref ref.id="filter_676552277632800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_EVMC6474"/>
							<attribute key="device.variant" value="TMS320C64XX.EVMC6474"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_4.projectspec">
					<filter.ref ref.id="filter_676552277632800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_EVMC6474"/>
							<attribute key="device.variant" value="TMS320C64XX.EVMC6474"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_5.projectspec">
					<filter.ref ref.id="filter_676552277632800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_EVMC6474"/>
							<attribute key="device.variant" value="TMS320C64XX.EVMC6474"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_6.projectspec">
					<filter.ref ref.id="filter_676552277632800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_EVMC6474"/>
							<attribute key="device.variant" value="TMS320C64XX.EVMC6474"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_7.projectspec">
					<filter.ref ref.id="filter_676552277632800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_EVMC6474"/>
							<attribute key="device.variant" value="TMS320C64XX.EVMC6474"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_8.projectspec">
					<filter.ref ref.id="filter_676552277632800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_EVMC6474"/>
							<attribute key="device.variant" value="TMS320C64XX.EVMC6474"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_9.projectspec">
					<filter.ref ref.id="filter_676552277632800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_EVMC6474"/>
							<attribute key="device.variant" value="TMS320C64XX.EVMC6474"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_11.projectspec">
					<filter.ref ref.id="filter_676552277632800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_EVMC6474"/>
							<attribute key="device.variant" value="TMS320C64XX.EVMC6474"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_12.projectspec">
					<filter.ref ref.id="filter_676552277632800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_EVMC6474"/>
							<attribute key="device.variant" value="TMS320C64XX.EVMC6474"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_13.projectspec">
					<filter.ref ref.id="filter_676552277632800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_EVMC6474"/>
							<attribute key="device.variant" value="TMS320C64XX.EVMC6474"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_10.projectspec">
					<filter.ref ref.id="filter_676552277632800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_EVMC6474"/>
							<attribute key="device.variant" value="TMS320C64XX.EVMC6474"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="EVMTCI6488" desc="EVMTCI6488" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_676552278170200">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>EVMTCI6488</tag>
					<tag>TMS320C64XX</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_0.projectspec">
					<filter.ref ref.id="filter_676552278170200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_EVMTCI6488"/>
							<attribute key="device.variant" value="TMS320C64XX.EVMTCI6488"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_1.projectspec">
					<filter.ref ref.id="filter_676552278170200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_EVMTCI6488"/>
							<attribute key="device.variant" value="TMS320C64XX.EVMTCI6488"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_676552278250000">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>EVMTCI6488</tag>
					<tag>TMS320C64XX</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_14.projectspec">
					<filter.ref ref.id="filter_676552278250000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_EVMTCI6488"/>
							<attribute key="device.variant" value="TMS320C64XX.EVMTCI6488"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_3.projectspec">
					<filter.ref ref.id="filter_676552278250000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_EVMTCI6488"/>
							<attribute key="device.variant" value="TMS320C64XX.EVMTCI6488"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_4.projectspec">
					<filter.ref ref.id="filter_676552278250000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_EVMTCI6488"/>
							<attribute key="device.variant" value="TMS320C64XX.EVMTCI6488"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_5.projectspec">
					<filter.ref ref.id="filter_676552278250000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_EVMTCI6488"/>
							<attribute key="device.variant" value="TMS320C64XX.EVMTCI6488"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_6.projectspec">
					<filter.ref ref.id="filter_676552278250000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_EVMTCI6488"/>
							<attribute key="device.variant" value="TMS320C64XX.EVMTCI6488"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_7.projectspec">
					<filter.ref ref.id="filter_676552278250000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_EVMTCI6488"/>
							<attribute key="device.variant" value="TMS320C64XX.EVMTCI6488"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_8.projectspec">
					<filter.ref ref.id="filter_676552278250000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_EVMTCI6488"/>
							<attribute key="device.variant" value="TMS320C64XX.EVMTCI6488"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_9.projectspec">
					<filter.ref ref.id="filter_676552278250000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_EVMTCI6488"/>
							<attribute key="device.variant" value="TMS320C64XX.EVMTCI6488"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_11.projectspec">
					<filter.ref ref.id="filter_676552278250000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_EVMTCI6488"/>
							<attribute key="device.variant" value="TMS320C64XX.EVMTCI6488"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_12.projectspec">
					<filter.ref ref.id="filter_676552278250000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_EVMTCI6488"/>
							<attribute key="device.variant" value="TMS320C64XX.EVMTCI6488"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_13.projectspec">
					<filter.ref ref.id="filter_676552278250000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_EVMTCI6488"/>
							<attribute key="device.variant" value="TMS320C64XX.EVMTCI6488"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_10.projectspec">
					<filter.ref ref.id="filter_676552278250000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_EVMTCI6488"/>
							<attribute key="device.variant" value="TMS320C64XX.EVMTCI6488"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="OMAP4430 (no STM, ETB only)" desc="OMAP4430 (no STM, ETB only)" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_676552279902300">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>OMAP4430 (no STM, ETB only)</tag>
					<tag>TMS320C64XX</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_0.projectspec">
					<filter.ref ref.id="filter_676552279902300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_OMAP4430_noSTM_ETBOnly_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP4430"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_1.projectspec">
					<filter.ref ref.id="filter_676552279902300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_OMAP4430_noSTM_ETBOnly_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP4430"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_676552280030700">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>OMAP4430 (no STM, ETB only)</tag>
					<tag>TMS320C64XX</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_14.projectspec">
					<filter.ref ref.id="filter_676552280030700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_OMAP4430_noSTM_ETBOnly_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP4430"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_3.projectspec">
					<filter.ref ref.id="filter_676552280030700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_OMAP4430_noSTM_ETBOnly_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP4430"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_4.projectspec">
					<filter.ref ref.id="filter_676552280030700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_OMAP4430_noSTM_ETBOnly_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP4430"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_5.projectspec">
					<filter.ref ref.id="filter_676552280030700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_OMAP4430_noSTM_ETBOnly_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP4430"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_6.projectspec">
					<filter.ref ref.id="filter_676552280030700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_OMAP4430_noSTM_ETBOnly_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP4430"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_7.projectspec">
					<filter.ref ref.id="filter_676552280030700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_OMAP4430_noSTM_ETBOnly_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP4430"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_8.projectspec">
					<filter.ref ref.id="filter_676552280030700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_OMAP4430_noSTM_ETBOnly_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP4430"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_9.projectspec">
					<filter.ref ref.id="filter_676552280030700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_OMAP4430_noSTM_ETBOnly_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP4430"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_11.projectspec">
					<filter.ref ref.id="filter_676552280030700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_OMAP4430_noSTM_ETBOnly_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP4430"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_12.projectspec">
					<filter.ref ref.id="filter_676552280030700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_OMAP4430_noSTM_ETBOnly_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP4430"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_13.projectspec">
					<filter.ref ref.id="filter_676552280030700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_OMAP4430_noSTM_ETBOnly_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP4430"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_10.projectspec">
					<filter.ref ref.id="filter_676552280030700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_OMAP4430_noSTM_ETBOnly_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP4430"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="TMS320C6421" desc="TMS320C6421" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_676552280782300">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>TMS320C6421</tag>
					<tag>TMS320C64XX</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_0.projectspec">
					<filter.ref ref.id="filter_676552280782300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_TMS320C6421"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6421"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_1.projectspec">
					<filter.ref ref.id="filter_676552280782300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_TMS320C6421"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6421"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_676552280882100">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>TMS320C6421</tag>
					<tag>TMS320C64XX</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_14.projectspec">
					<filter.ref ref.id="filter_676552280882100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_TMS320C6421"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6421"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_3.projectspec">
					<filter.ref ref.id="filter_676552280882100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_TMS320C6421"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6421"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_4.projectspec">
					<filter.ref ref.id="filter_676552280882100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_TMS320C6421"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6421"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_5.projectspec">
					<filter.ref ref.id="filter_676552280882100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_TMS320C6421"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6421"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_6.projectspec">
					<filter.ref ref.id="filter_676552280882100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_TMS320C6421"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6421"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_7.projectspec">
					<filter.ref ref.id="filter_676552280882100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_TMS320C6421"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6421"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_8.projectspec">
					<filter.ref ref.id="filter_676552280882100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_TMS320C6421"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6421"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_9.projectspec">
					<filter.ref ref.id="filter_676552280882100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_TMS320C6421"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6421"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_11.projectspec">
					<filter.ref ref.id="filter_676552280882100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_TMS320C6421"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6421"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_12.projectspec">
					<filter.ref ref.id="filter_676552280882100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_TMS320C6421"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6421"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_13.projectspec">
					<filter.ref ref.id="filter_676552280882100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_TMS320C6421"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6421"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_10.projectspec">
					<filter.ref ref.id="filter_676552280882100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_TMS320C6421"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6421"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="TMS320C6424" desc="TMS320C6424" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_676552281600500">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>TMS320C6424</tag>
					<tag>TMS320C64XX</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_0.projectspec">
					<filter.ref ref.id="filter_676552281600500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_TMS320C6424"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6424"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_1.projectspec">
					<filter.ref ref.id="filter_676552281600500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_TMS320C6424"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6424"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_676552281711800">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>TMS320C6424</tag>
					<tag>TMS320C64XX</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_14.projectspec">
					<filter.ref ref.id="filter_676552281711800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_TMS320C6424"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6424"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_3.projectspec">
					<filter.ref ref.id="filter_676552281711800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_TMS320C6424"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6424"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_4.projectspec">
					<filter.ref ref.id="filter_676552281711800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_TMS320C6424"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6424"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_5.projectspec">
					<filter.ref ref.id="filter_676552281711800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_TMS320C6424"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6424"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_6.projectspec">
					<filter.ref ref.id="filter_676552281711800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_TMS320C6424"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6424"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_7.projectspec">
					<filter.ref ref.id="filter_676552281711800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_TMS320C6424"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6424"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_8.projectspec">
					<filter.ref ref.id="filter_676552281711800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_TMS320C6424"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6424"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_9.projectspec">
					<filter.ref ref.id="filter_676552281711800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_TMS320C6424"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6424"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_11.projectspec">
					<filter.ref ref.id="filter_676552281711800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_TMS320C6424"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6424"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_12.projectspec">
					<filter.ref ref.id="filter_676552281711800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_TMS320C6424"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6424"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_13.projectspec">
					<filter.ref ref.id="filter_676552281711800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_TMS320C6424"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6424"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_10.projectspec">
					<filter.ref ref.id="filter_676552281711800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_TMS320C6424"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6424"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
		</contents>
		<contents name="TMS320C66XX" desc="TMS320C66XX" icon="plugin://icons/obj16/devices.png">
			<contents name="66AK2H06" desc="66AK2H06" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_676552284287600">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>66AK2H06</tag>
					<tag>TMS320C66XX</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_0.projectspec">
					<filter.ref ref.id="filter_676552284287600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_66AK2H06"/>
							<attribute key="device.variant" value="TMS320C66XX.66AK2H06"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_1.projectspec">
					<filter.ref ref.id="filter_676552284287600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_66AK2H06"/>
							<attribute key="device.variant" value="TMS320C66XX.66AK2H06"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_676552284452300">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>66AK2H06</tag>
					<tag>TMS320C66XX</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_14.projectspec">
					<filter.ref ref.id="filter_676552284452300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_66AK2H06"/>
							<attribute key="device.variant" value="TMS320C66XX.66AK2H06"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_3.projectspec">
					<filter.ref ref.id="filter_676552284452300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_66AK2H06"/>
							<attribute key="device.variant" value="TMS320C66XX.66AK2H06"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_4.projectspec">
					<filter.ref ref.id="filter_676552284452300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_66AK2H06"/>
							<attribute key="device.variant" value="TMS320C66XX.66AK2H06"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_5.projectspec">
					<filter.ref ref.id="filter_676552284452300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_66AK2H06"/>
							<attribute key="device.variant" value="TMS320C66XX.66AK2H06"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_6.projectspec">
					<filter.ref ref.id="filter_676552284452300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_66AK2H06"/>
							<attribute key="device.variant" value="TMS320C66XX.66AK2H06"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_7.projectspec">
					<filter.ref ref.id="filter_676552284452300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_66AK2H06"/>
							<attribute key="device.variant" value="TMS320C66XX.66AK2H06"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_8.projectspec">
					<filter.ref ref.id="filter_676552284452300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_66AK2H06"/>
							<attribute key="device.variant" value="TMS320C66XX.66AK2H06"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_9.projectspec">
					<filter.ref ref.id="filter_676552284452300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_66AK2H06"/>
							<attribute key="device.variant" value="TMS320C66XX.66AK2H06"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_11.projectspec">
					<filter.ref ref.id="filter_676552284452300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_66AK2H06"/>
							<attribute key="device.variant" value="TMS320C66XX.66AK2H06"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_12.projectspec">
					<filter.ref ref.id="filter_676552284452300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_66AK2H06"/>
							<attribute key="device.variant" value="TMS320C66XX.66AK2H06"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_13.projectspec">
					<filter.ref ref.id="filter_676552284452300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_66AK2H06"/>
							<attribute key="device.variant" value="TMS320C66XX.66AK2H06"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_10.projectspec">
					<filter.ref ref.id="filter_676552284452300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_66AK2H06"/>
							<attribute key="device.variant" value="TMS320C66XX.66AK2H06"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="66AK2H12" desc="66AK2H12" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_676552285568500">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>66AK2H12</tag>
					<tag>TMS320C66XX</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_0.projectspec">
					<filter.ref ref.id="filter_676552285568500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_66AK2H12"/>
							<attribute key="device.variant" value="TMS320C66XX.66AK2H12"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_1.projectspec">
					<filter.ref ref.id="filter_676552285568500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_66AK2H12"/>
							<attribute key="device.variant" value="TMS320C66XX.66AK2H12"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_676552285849400">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>66AK2H12</tag>
					<tag>TMS320C66XX</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_14.projectspec">
					<filter.ref ref.id="filter_676552285849400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_66AK2H12"/>
							<attribute key="device.variant" value="TMS320C66XX.66AK2H12"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_3.projectspec">
					<filter.ref ref.id="filter_676552285849400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_66AK2H12"/>
							<attribute key="device.variant" value="TMS320C66XX.66AK2H12"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_4.projectspec">
					<filter.ref ref.id="filter_676552285849400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_66AK2H12"/>
							<attribute key="device.variant" value="TMS320C66XX.66AK2H12"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_5.projectspec">
					<filter.ref ref.id="filter_676552285849400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_66AK2H12"/>
							<attribute key="device.variant" value="TMS320C66XX.66AK2H12"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_6.projectspec">
					<filter.ref ref.id="filter_676552285849400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_66AK2H12"/>
							<attribute key="device.variant" value="TMS320C66XX.66AK2H12"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_7.projectspec">
					<filter.ref ref.id="filter_676552285849400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_66AK2H12"/>
							<attribute key="device.variant" value="TMS320C66XX.66AK2H12"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_8.projectspec">
					<filter.ref ref.id="filter_676552285849400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_66AK2H12"/>
							<attribute key="device.variant" value="TMS320C66XX.66AK2H12"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_9.projectspec">
					<filter.ref ref.id="filter_676552285849400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_66AK2H12"/>
							<attribute key="device.variant" value="TMS320C66XX.66AK2H12"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_11.projectspec">
					<filter.ref ref.id="filter_676552285849400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_66AK2H12"/>
							<attribute key="device.variant" value="TMS320C66XX.66AK2H12"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_12.projectspec">
					<filter.ref ref.id="filter_676552285849400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_66AK2H12"/>
							<attribute key="device.variant" value="TMS320C66XX.66AK2H12"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_13.projectspec">
					<filter.ref ref.id="filter_676552285849400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_66AK2H12"/>
							<attribute key="device.variant" value="TMS320C66XX.66AK2H12"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_10.projectspec">
					<filter.ref ref.id="filter_676552285849400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_66AK2H12"/>
							<attribute key="device.variant" value="TMS320C66XX.66AK2H12"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="TCI6634K2K" desc="TCI6634K2K" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_676552286686600">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>TCI6634K2K</tag>
					<tag>TMS320C66XX</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_0.projectspec">
					<filter.ref ref.id="filter_676552286686600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_TCI6634K2K"/>
							<attribute key="device.variant" value="TMS320C66XX.TCI6634K2K"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_1.projectspec">
					<filter.ref ref.id="filter_676552286686600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_TCI6634K2K"/>
							<attribute key="device.variant" value="TMS320C66XX.TCI6634K2K"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_676552286783600">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>TCI6634K2K</tag>
					<tag>TMS320C66XX</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_14.projectspec">
					<filter.ref ref.id="filter_676552286783600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_TCI6634K2K"/>
							<attribute key="device.variant" value="TMS320C66XX.TCI6634K2K"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_3.projectspec">
					<filter.ref ref.id="filter_676552286783600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_TCI6634K2K"/>
							<attribute key="device.variant" value="TMS320C66XX.TCI6634K2K"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_4.projectspec">
					<filter.ref ref.id="filter_676552286783600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_TCI6634K2K"/>
							<attribute key="device.variant" value="TMS320C66XX.TCI6634K2K"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_5.projectspec">
					<filter.ref ref.id="filter_676552286783600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_TCI6634K2K"/>
							<attribute key="device.variant" value="TMS320C66XX.TCI6634K2K"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_6.projectspec">
					<filter.ref ref.id="filter_676552286783600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_TCI6634K2K"/>
							<attribute key="device.variant" value="TMS320C66XX.TCI6634K2K"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_7.projectspec">
					<filter.ref ref.id="filter_676552286783600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_TCI6634K2K"/>
							<attribute key="device.variant" value="TMS320C66XX.TCI6634K2K"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_8.projectspec">
					<filter.ref ref.id="filter_676552286783600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_TCI6634K2K"/>
							<attribute key="device.variant" value="TMS320C66XX.TCI6634K2K"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_9.projectspec">
					<filter.ref ref.id="filter_676552286783600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_TCI6634K2K"/>
							<attribute key="device.variant" value="TMS320C66XX.TCI6634K2K"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_11.projectspec">
					<filter.ref ref.id="filter_676552286783600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_TCI6634K2K"/>
							<attribute key="device.variant" value="TMS320C66XX.TCI6634K2K"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_12.projectspec">
					<filter.ref ref.id="filter_676552286783600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_TCI6634K2K"/>
							<attribute key="device.variant" value="TMS320C66XX.TCI6634K2K"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_13.projectspec">
					<filter.ref ref.id="filter_676552286783600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_TCI6634K2K"/>
							<attribute key="device.variant" value="TMS320C66XX.TCI6634K2K"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_10.projectspec">
					<filter.ref ref.id="filter_676552286783600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_TCI6634K2K"/>
							<attribute key="device.variant" value="TMS320C66XX.TCI6634K2K"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="TCI6636K2H" desc="TCI6636K2H" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_676552291381100">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>TCI6636K2H</tag>
					<tag>TMS320C66XX</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_0.projectspec">
					<filter.ref ref.id="filter_676552291381100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_TCI6636K2H"/>
							<attribute key="device.variant" value="TMS320C66XX.TCI6636K2H"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_1.projectspec">
					<filter.ref ref.id="filter_676552291381100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_TCI6636K2H"/>
							<attribute key="device.variant" value="TMS320C66XX.TCI6636K2H"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_676552291481400">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>TCI6636K2H</tag>
					<tag>TMS320C66XX</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_14.projectspec">
					<filter.ref ref.id="filter_676552291481400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_TCI6636K2H"/>
							<attribute key="device.variant" value="TMS320C66XX.TCI6636K2H"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_3.projectspec">
					<filter.ref ref.id="filter_676552291481400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_TCI6636K2H"/>
							<attribute key="device.variant" value="TMS320C66XX.TCI6636K2H"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_4.projectspec">
					<filter.ref ref.id="filter_676552291481400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_TCI6636K2H"/>
							<attribute key="device.variant" value="TMS320C66XX.TCI6636K2H"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_5.projectspec">
					<filter.ref ref.id="filter_676552291481400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_TCI6636K2H"/>
							<attribute key="device.variant" value="TMS320C66XX.TCI6636K2H"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_6.projectspec">
					<filter.ref ref.id="filter_676552291481400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_TCI6636K2H"/>
							<attribute key="device.variant" value="TMS320C66XX.TCI6636K2H"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_7.projectspec">
					<filter.ref ref.id="filter_676552291481400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_TCI6636K2H"/>
							<attribute key="device.variant" value="TMS320C66XX.TCI6636K2H"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_8.projectspec">
					<filter.ref ref.id="filter_676552291481400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_TCI6636K2H"/>
							<attribute key="device.variant" value="TMS320C66XX.TCI6636K2H"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_9.projectspec">
					<filter.ref ref.id="filter_676552291481400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_TCI6636K2H"/>
							<attribute key="device.variant" value="TMS320C66XX.TCI6636K2H"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_11.projectspec">
					<filter.ref ref.id="filter_676552291481400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_TCI6636K2H"/>
							<attribute key="device.variant" value="TMS320C66XX.TCI6636K2H"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_12.projectspec">
					<filter.ref ref.id="filter_676552291481400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_TCI6636K2H"/>
							<attribute key="device.variant" value="TMS320C66XX.TCI6636K2H"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_13.projectspec">
					<filter.ref ref.id="filter_676552291481400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_TCI6636K2H"/>
							<attribute key="device.variant" value="TMS320C66XX.TCI6636K2H"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_10.projectspec">
					<filter.ref ref.id="filter_676552291481400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_TCI6636K2H"/>
							<attribute key="device.variant" value="TMS320C66XX.TCI6636K2H"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="TCI6638K2K" desc="TCI6638K2K" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_676552292035200">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>TCI6638K2K</tag>
					<tag>TMS320C66XX</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_0.projectspec">
					<filter.ref ref.id="filter_676552292035200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_TCI6638K2K"/>
							<attribute key="device.variant" value="TMS320C66XX.TCI6638K2K"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_1.projectspec">
					<filter.ref ref.id="filter_676552292035200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_TCI6638K2K"/>
							<attribute key="device.variant" value="TMS320C66XX.TCI6638K2K"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_676552292115900">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>TCI6638K2K</tag>
					<tag>TMS320C66XX</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_14.projectspec">
					<filter.ref ref.id="filter_676552292115900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_TCI6638K2K"/>
							<attribute key="device.variant" value="TMS320C66XX.TCI6638K2K"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_3.projectspec">
					<filter.ref ref.id="filter_676552292115900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_TCI6638K2K"/>
							<attribute key="device.variant" value="TMS320C66XX.TCI6638K2K"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_4.projectspec">
					<filter.ref ref.id="filter_676552292115900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_TCI6638K2K"/>
							<attribute key="device.variant" value="TMS320C66XX.TCI6638K2K"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_5.projectspec">
					<filter.ref ref.id="filter_676552292115900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_TCI6638K2K"/>
							<attribute key="device.variant" value="TMS320C66XX.TCI6638K2K"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_6.projectspec">
					<filter.ref ref.id="filter_676552292115900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_TCI6638K2K"/>
							<attribute key="device.variant" value="TMS320C66XX.TCI6638K2K"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_7.projectspec">
					<filter.ref ref.id="filter_676552292115900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_TCI6638K2K"/>
							<attribute key="device.variant" value="TMS320C66XX.TCI6638K2K"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_8.projectspec">
					<filter.ref ref.id="filter_676552292115900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_TCI6638K2K"/>
							<attribute key="device.variant" value="TMS320C66XX.TCI6638K2K"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_9.projectspec">
					<filter.ref ref.id="filter_676552292115900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_TCI6638K2K"/>
							<attribute key="device.variant" value="TMS320C66XX.TCI6638K2K"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_11.projectspec">
					<filter.ref ref.id="filter_676552292115900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_TCI6638K2K"/>
							<attribute key="device.variant" value="TMS320C66XX.TCI6638K2K"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_12.projectspec">
					<filter.ref ref.id="filter_676552292115900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_TCI6638K2K"/>
							<attribute key="device.variant" value="TMS320C66XX.TCI6638K2K"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_13.projectspec">
					<filter.ref ref.id="filter_676552292115900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_TCI6638K2K"/>
							<attribute key="device.variant" value="TMS320C66XX.TCI6638K2K"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_10.projectspec">
					<filter.ref ref.id="filter_676552292115900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_TCI6638K2K"/>
							<attribute key="device.variant" value="TMS320C66XX.TCI6638K2K"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
		</contents>
		<contents name="TMS320C67XX" desc="TMS320C67XX" icon="plugin://icons/obj16/devices.png">
			<contents name="DA804/DA803/DA802" desc="DA804/DA803/DA802" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_676552292703000">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>DA804/DA803/DA802</tag>
					<tag>TMS320C67XX</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_0.projectspec">
					<filter.ref ref.id="filter_676552292703000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_DA804DA803DA802"/>
							<attribute key="device.variant" value="TMS320C67XX.DA804/DA803/DA802"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_1.projectspec">
					<filter.ref ref.id="filter_676552292703000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_DA804DA803DA802"/>
							<attribute key="device.variant" value="TMS320C67XX.DA804/DA803/DA802"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_676552292785500">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>DA804/DA803/DA802</tag>
					<tag>TMS320C67XX</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_14.projectspec">
					<filter.ref ref.id="filter_676552292785500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_DA804DA803DA802"/>
							<attribute key="device.variant" value="TMS320C67XX.DA804/DA803/DA802"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_3.projectspec">
					<filter.ref ref.id="filter_676552292785500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_DA804DA803DA802"/>
							<attribute key="device.variant" value="TMS320C67XX.DA804/DA803/DA802"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_4.projectspec">
					<filter.ref ref.id="filter_676552292785500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_DA804DA803DA802"/>
							<attribute key="device.variant" value="TMS320C67XX.DA804/DA803/DA802"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_5.projectspec">
					<filter.ref ref.id="filter_676552292785500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_DA804DA803DA802"/>
							<attribute key="device.variant" value="TMS320C67XX.DA804/DA803/DA802"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_6.projectspec">
					<filter.ref ref.id="filter_676552292785500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_DA804DA803DA802"/>
							<attribute key="device.variant" value="TMS320C67XX.DA804/DA803/DA802"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_7.projectspec">
					<filter.ref ref.id="filter_676552292785500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_DA804DA803DA802"/>
							<attribute key="device.variant" value="TMS320C67XX.DA804/DA803/DA802"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_8.projectspec">
					<filter.ref ref.id="filter_676552292785500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_DA804DA803DA802"/>
							<attribute key="device.variant" value="TMS320C67XX.DA804/DA803/DA802"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_9.projectspec">
					<filter.ref ref.id="filter_676552292785500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_DA804DA803DA802"/>
							<attribute key="device.variant" value="TMS320C67XX.DA804/DA803/DA802"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_11.projectspec">
					<filter.ref ref.id="filter_676552292785500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_DA804DA803DA802"/>
							<attribute key="device.variant" value="TMS320C67XX.DA804/DA803/DA802"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_12.projectspec">
					<filter.ref ref.id="filter_676552292785500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_DA804DA803DA802"/>
							<attribute key="device.variant" value="TMS320C67XX.DA804/DA803/DA802"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_13.projectspec">
					<filter.ref ref.id="filter_676552292785500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_DA804DA803DA802"/>
							<attribute key="device.variant" value="TMS320C67XX.DA804/DA803/DA802"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_10.projectspec">
					<filter.ref ref.id="filter_676552292785500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_DA804DA803DA802"/>
							<attribute key="device.variant" value="TMS320C67XX.DA804/DA803/DA802"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="DA810/DA80x" desc="DA810/DA80x" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_676552293338000">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>DA810/DA80x</tag>
					<tag>TMS320C67XX</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_0.projectspec">
					<filter.ref ref.id="filter_676552293338000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_DA810DA80x"/>
							<attribute key="device.variant" value="TMS320C67XX.DA810/DA80x"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_1.projectspec">
					<filter.ref ref.id="filter_676552293338000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_DA810DA80x"/>
							<attribute key="device.variant" value="TMS320C67XX.DA810/DA80x"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_676552293418100">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>DA810/DA80x</tag>
					<tag>TMS320C67XX</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_14.projectspec">
					<filter.ref ref.id="filter_676552293418100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_DA810DA80x"/>
							<attribute key="device.variant" value="TMS320C67XX.DA810/DA80x"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_3.projectspec">
					<filter.ref ref.id="filter_676552293418100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_DA810DA80x"/>
							<attribute key="device.variant" value="TMS320C67XX.DA810/DA80x"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_4.projectspec">
					<filter.ref ref.id="filter_676552293418100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_DA810DA80x"/>
							<attribute key="device.variant" value="TMS320C67XX.DA810/DA80x"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_5.projectspec">
					<filter.ref ref.id="filter_676552293418100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_DA810DA80x"/>
							<attribute key="device.variant" value="TMS320C67XX.DA810/DA80x"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_6.projectspec">
					<filter.ref ref.id="filter_676552293418100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_DA810DA80x"/>
							<attribute key="device.variant" value="TMS320C67XX.DA810/DA80x"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_7.projectspec">
					<filter.ref ref.id="filter_676552293418100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_DA810DA80x"/>
							<attribute key="device.variant" value="TMS320C67XX.DA810/DA80x"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_8.projectspec">
					<filter.ref ref.id="filter_676552293418100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_DA810DA80x"/>
							<attribute key="device.variant" value="TMS320C67XX.DA810/DA80x"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_9.projectspec">
					<filter.ref ref.id="filter_676552293418100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_DA810DA80x"/>
							<attribute key="device.variant" value="TMS320C67XX.DA810/DA80x"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_11.projectspec">
					<filter.ref ref.id="filter_676552293418100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_DA810DA80x"/>
							<attribute key="device.variant" value="TMS320C67XX.DA810/DA80x"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_12.projectspec">
					<filter.ref ref.id="filter_676552293418100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_DA810DA80x"/>
							<attribute key="device.variant" value="TMS320C67XX.DA810/DA80x"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_13.projectspec">
					<filter.ref ref.id="filter_676552293418100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_DA810DA80x"/>
							<attribute key="device.variant" value="TMS320C67XX.DA810/DA80x"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_10.projectspec">
					<filter.ref ref.id="filter_676552293418100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_DA810DA80x"/>
							<attribute key="device.variant" value="TMS320C67XX.DA810/DA80x"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="DA830/DA828" desc="DA830/DA828" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_676552293960500">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>DA830/DA828</tag>
					<tag>TMS320C67XX</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_0.projectspec">
					<filter.ref ref.id="filter_676552293960500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_DA830DA828_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.DA830/DA828"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_1.projectspec">
					<filter.ref ref.id="filter_676552293960500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_DA830DA828_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.DA830/DA828"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_676552294042200">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>DA830/DA828</tag>
					<tag>TMS320C67XX</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_14.projectspec">
					<filter.ref ref.id="filter_676552294042200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_DA830DA828_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.DA830/DA828"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_3.projectspec">
					<filter.ref ref.id="filter_676552294042200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_DA830DA828_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.DA830/DA828"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_4.projectspec">
					<filter.ref ref.id="filter_676552294042200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_DA830DA828_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.DA830/DA828"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_5.projectspec">
					<filter.ref ref.id="filter_676552294042200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_DA830DA828_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.DA830/DA828"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_6.projectspec">
					<filter.ref ref.id="filter_676552294042200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_DA830DA828_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.DA830/DA828"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_7.projectspec">
					<filter.ref ref.id="filter_676552294042200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_DA830DA828_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.DA830/DA828"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_8.projectspec">
					<filter.ref ref.id="filter_676552294042200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_DA830DA828_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.DA830/DA828"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_9.projectspec">
					<filter.ref ref.id="filter_676552294042200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_DA830DA828_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.DA830/DA828"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_11.projectspec">
					<filter.ref ref.id="filter_676552294042200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_DA830DA828_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.DA830/DA828"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_12.projectspec">
					<filter.ref ref.id="filter_676552294042200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_DA830DA828_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.DA830/DA828"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_13.projectspec">
					<filter.ref ref.id="filter_676552294042200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_DA830DA828_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.DA830/DA828"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_10.projectspec">
					<filter.ref ref.id="filter_676552294042200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_DA830DA828_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.DA830/DA828"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="DSKDA830" desc="DSKDA830" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_676552295111800">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>DSKDA830</tag>
					<tag>TMS320C67XX</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_0.projectspec">
					<filter.ref ref.id="filter_676552295111800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_DSKDA830_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.DA830/DA828.DSKDA830"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_1.projectspec">
					<filter.ref ref.id="filter_676552295111800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_DSKDA830_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.DA830/DA828.DSKDA830"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_676552295195400">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>DSKDA830</tag>
					<tag>TMS320C67XX</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_14.projectspec">
					<filter.ref ref.id="filter_676552295195400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_DSKDA830_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.DA830/DA828.DSKDA830"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_3.projectspec">
					<filter.ref ref.id="filter_676552295195400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_DSKDA830_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.DA830/DA828.DSKDA830"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_4.projectspec">
					<filter.ref ref.id="filter_676552295195400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_DSKDA830_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.DA830/DA828.DSKDA830"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_5.projectspec">
					<filter.ref ref.id="filter_676552295195400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_DSKDA830_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.DA830/DA828.DSKDA830"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_6.projectspec">
					<filter.ref ref.id="filter_676552295195400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_DSKDA830_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.DA830/DA828.DSKDA830"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_7.projectspec">
					<filter.ref ref.id="filter_676552295195400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_DSKDA830_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.DA830/DA828.DSKDA830"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_8.projectspec">
					<filter.ref ref.id="filter_676552295195400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_DSKDA830_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.DA830/DA828.DSKDA830"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_9.projectspec">
					<filter.ref ref.id="filter_676552295195400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_DSKDA830_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.DA830/DA828.DSKDA830"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_11.projectspec">
					<filter.ref ref.id="filter_676552295195400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_DSKDA830_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.DA830/DA828.DSKDA830"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_12.projectspec">
					<filter.ref ref.id="filter_676552295195400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_DSKDA830_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.DA830/DA828.DSKDA830"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_13.projectspec">
					<filter.ref ref.id="filter_676552295195400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_DSKDA830_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.DA830/DA828.DSKDA830"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_10.projectspec">
					<filter.ref ref.id="filter_676552295195400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_DSKDA830_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.DA830/DA828.DSKDA830"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="TI814x" desc="TI814x" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_676552295760100">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>TI814x</tag>
					<tag>TMS320C67XX</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_0.projectspec">
					<filter.ref ref.id="filter_676552295760100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_TI814x_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.TI814x"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_1.projectspec">
					<filter.ref ref.id="filter_676552295760100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_TI814x_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.TI814x"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_676552295841800">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>TI814x</tag>
					<tag>TMS320C67XX</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_14.projectspec">
					<filter.ref ref.id="filter_676552295841800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_TI814x_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.TI814x"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_3.projectspec">
					<filter.ref ref.id="filter_676552295841800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_TI814x_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.TI814x"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_4.projectspec">
					<filter.ref ref.id="filter_676552295841800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_TI814x_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.TI814x"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_5.projectspec">
					<filter.ref ref.id="filter_676552295841800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_TI814x_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.TI814x"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_6.projectspec">
					<filter.ref ref.id="filter_676552295841800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_TI814x_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.TI814x"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_7.projectspec">
					<filter.ref ref.id="filter_676552295841800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_TI814x_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.TI814x"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_8.projectspec">
					<filter.ref ref.id="filter_676552295841800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_TI814x_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.TI814x"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_9.projectspec">
					<filter.ref ref.id="filter_676552295841800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_TI814x_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.TI814x"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_11.projectspec">
					<filter.ref ref.id="filter_676552295841800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_TI814x_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.TI814x"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_12.projectspec">
					<filter.ref ref.id="filter_676552295841800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_TI814x_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.TI814x"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_13.projectspec">
					<filter.ref ref.id="filter_676552295841800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_TI814x_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.TI814x"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_10.projectspec">
					<filter.ref ref.id="filter_676552295841800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_TI814x_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.TI814x"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="TI816x" desc="TI816x" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_676552297447200">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>TI816x</tag>
					<tag>TMS320C67XX</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_0.projectspec">
					<filter.ref ref.id="filter_676552297447200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_TI816x_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.TI816x"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_1.projectspec">
					<filter.ref ref.id="filter_676552297447200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_TI816x_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.TI816x"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_676552297545600">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>TI816x</tag>
					<tag>TMS320C67XX</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_14.projectspec">
					<filter.ref ref.id="filter_676552297545600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_TI816x_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.TI816x"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_3.projectspec">
					<filter.ref ref.id="filter_676552297545600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_TI816x_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.TI816x"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_4.projectspec">
					<filter.ref ref.id="filter_676552297545600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_TI816x_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.TI816x"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_5.projectspec">
					<filter.ref ref.id="filter_676552297545600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_TI816x_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.TI816x"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_6.projectspec">
					<filter.ref ref.id="filter_676552297545600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_TI816x_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.TI816x"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_7.projectspec">
					<filter.ref ref.id="filter_676552297545600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_TI816x_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.TI816x"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_8.projectspec">
					<filter.ref ref.id="filter_676552297545600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_TI816x_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.TI816x"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_9.projectspec">
					<filter.ref ref.id="filter_676552297545600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_TI816x_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.TI816x"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_11.projectspec">
					<filter.ref ref.id="filter_676552297545600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_TI816x_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.TI816x"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_12.projectspec">
					<filter.ref ref.id="filter_676552297545600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_TI816x_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.TI816x"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_13.projectspec">
					<filter.ref ref.id="filter_676552297545600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_TI816x_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.TI816x"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_10.projectspec">
					<filter.ref ref.id="filter_676552297545600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_TI816x_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.TI816x"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
		</contents>
	</contents>

</resource.explorer>
