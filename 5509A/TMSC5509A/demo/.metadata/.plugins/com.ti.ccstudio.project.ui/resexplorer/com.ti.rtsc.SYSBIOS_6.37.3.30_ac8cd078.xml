<?xml version="1.0" encoding="UTF-8"?>

<resource.explorer version="1.0" name="SYS/BIOS" dir="" href="http://processors.wiki.ti.com/index.php/Category:SYSBIOS">

    <content name="Getting Started Guide" href="D:/ti/ccs5.5/bios_6_37_03_30/docs/Bios_Getting_Started_Guide.pdf">
	<type>weblink</type>
    </content>
    <content name="Users Guide" href="D:/ti/ccs5.5/bios_6_37_03_30/docs/Bios_User_Guide.pdf">
	<type>weblink</type>
    </content>
    <content name="Legacy Applications note" href="D:/ti/ccs5.5/bios_6_37_03_30/docs/Bios_Legacy_App_Note.pdf">
	<type>weblink</type>
    </content>
	<contents name="ARM" desc="ARM" icon="plugin://icons/obj16/devices.png">
		<contents name="ARM9" desc="ARM9" icon="plugin://icons/obj16/devices.png">
			<contents name="DA830/DA828" desc="DA830/DA828" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_161193159380900">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>DA830/DA828</tag>
					<tag>ARM9</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_15.projectspec">
					<filter.ref ref.id="filter_161193159380900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_DA830DA828_ARM9"/>
							<attribute key="device.variant" value="ARM9.DA830/DA828"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_16.projectspec">
					<filter.ref ref.id="filter_161193159380900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_DA830DA828_ARM9"/>
							<attribute key="device.variant" value="ARM9.DA830/DA828"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_161193163051000">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>DA830/DA828</tag>
					<tag>ARM9</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_29.projectspec">
					<filter.ref ref.id="filter_161193163051000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_DA830DA828_ARM9"/>
							<attribute key="device.variant" value="ARM9.DA830/DA828"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_18.projectspec">
					<filter.ref ref.id="filter_161193163051000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_DA830DA828_ARM9"/>
							<attribute key="device.variant" value="ARM9.DA830/DA828"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_19.projectspec">
					<filter.ref ref.id="filter_161193163051000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_DA830DA828_ARM9"/>
							<attribute key="device.variant" value="ARM9.DA830/DA828"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_20.projectspec">
					<filter.ref ref.id="filter_161193163051000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_DA830DA828_ARM9"/>
							<attribute key="device.variant" value="ARM9.DA830/DA828"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_21.projectspec">
					<filter.ref ref.id="filter_161193163051000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_DA830DA828_ARM9"/>
							<attribute key="device.variant" value="ARM9.DA830/DA828"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_22.projectspec">
					<filter.ref ref.id="filter_161193163051000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_DA830DA828_ARM9"/>
							<attribute key="device.variant" value="ARM9.DA830/DA828"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_23.projectspec">
					<filter.ref ref.id="filter_161193163051000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_DA830DA828_ARM9"/>
							<attribute key="device.variant" value="ARM9.DA830/DA828"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_24.projectspec">
					<filter.ref ref.id="filter_161193163051000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_DA830DA828_ARM9"/>
							<attribute key="device.variant" value="ARM9.DA830/DA828"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_26.projectspec">
					<filter.ref ref.id="filter_161193163051000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_DA830DA828_ARM9"/>
							<attribute key="device.variant" value="ARM9.DA830/DA828"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_27.projectspec">
					<filter.ref ref.id="filter_161193163051000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_DA830DA828_ARM9"/>
							<attribute key="device.variant" value="ARM9.DA830/DA828"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_28.projectspec">
					<filter.ref ref.id="filter_161193163051000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_DA830DA828_ARM9"/>
							<attribute key="device.variant" value="ARM9.DA830/DA828"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_25.projectspec">
					<filter.ref ref.id="filter_161193163051000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_DA830DA828_ARM9"/>
							<attribute key="device.variant" value="ARM9.DA830/DA828"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="DSKDA830" desc="DSKDA830" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_161193164324900">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>DSKDA830</tag>
					<tag>ARM9</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_15.projectspec">
					<filter.ref ref.id="filter_161193164324900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_DSKDA830_ARM9"/>
							<attribute key="device.variant" value="ARM9.DA830/DA828.DSKDA830"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_16.projectspec">
					<filter.ref ref.id="filter_161193164324900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_DSKDA830_ARM9"/>
							<attribute key="device.variant" value="ARM9.DA830/DA828.DSKDA830"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_161193164615800">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>DSKDA830</tag>
					<tag>ARM9</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_29.projectspec">
					<filter.ref ref.id="filter_161193164615800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_DSKDA830_ARM9"/>
							<attribute key="device.variant" value="ARM9.DA830/DA828.DSKDA830"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_18.projectspec">
					<filter.ref ref.id="filter_161193164615800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_DSKDA830_ARM9"/>
							<attribute key="device.variant" value="ARM9.DA830/DA828.DSKDA830"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_19.projectspec">
					<filter.ref ref.id="filter_161193164615800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_DSKDA830_ARM9"/>
							<attribute key="device.variant" value="ARM9.DA830/DA828.DSKDA830"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_20.projectspec">
					<filter.ref ref.id="filter_161193164615800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_DSKDA830_ARM9"/>
							<attribute key="device.variant" value="ARM9.DA830/DA828.DSKDA830"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_21.projectspec">
					<filter.ref ref.id="filter_161193164615800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_DSKDA830_ARM9"/>
							<attribute key="device.variant" value="ARM9.DA830/DA828.DSKDA830"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_22.projectspec">
					<filter.ref ref.id="filter_161193164615800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_DSKDA830_ARM9"/>
							<attribute key="device.variant" value="ARM9.DA830/DA828.DSKDA830"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_23.projectspec">
					<filter.ref ref.id="filter_161193164615800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_DSKDA830_ARM9"/>
							<attribute key="device.variant" value="ARM9.DA830/DA828.DSKDA830"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_24.projectspec">
					<filter.ref ref.id="filter_161193164615800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_DSKDA830_ARM9"/>
							<attribute key="device.variant" value="ARM9.DA830/DA828.DSKDA830"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_26.projectspec">
					<filter.ref ref.id="filter_161193164615800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_DSKDA830_ARM9"/>
							<attribute key="device.variant" value="ARM9.DA830/DA828.DSKDA830"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_27.projectspec">
					<filter.ref ref.id="filter_161193164615800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_DSKDA830_ARM9"/>
							<attribute key="device.variant" value="ARM9.DA830/DA828.DSKDA830"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_28.projectspec">
					<filter.ref ref.id="filter_161193164615800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_DSKDA830_ARM9"/>
							<attribute key="device.variant" value="ARM9.DA830/DA828.DSKDA830"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_25.projectspec">
					<filter.ref ref.id="filter_161193164615800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_DSKDA830_ARM9"/>
							<attribute key="device.variant" value="ARM9.DA830/DA828.DSKDA830"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="OMAP4430 (no STM, ETB only)" desc="OMAP4430 (no STM, ETB only)" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_161193167475400">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>OMAP4430 (no STM, ETB only)</tag>
					<tag>ARM9</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_15.projectspec">
					<filter.ref ref.id="filter_161193167475400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_OMAP4430_noSTM_ETBOnly_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAP4430"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_16.projectspec">
					<filter.ref ref.id="filter_161193167475400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_OMAP4430_noSTM_ETBOnly_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAP4430"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_161193167638800">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>OMAP4430 (no STM, ETB only)</tag>
					<tag>ARM9</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_29.projectspec">
					<filter.ref ref.id="filter_161193167638800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_OMAP4430_noSTM_ETBOnly_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAP4430"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_18.projectspec">
					<filter.ref ref.id="filter_161193167638800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_OMAP4430_noSTM_ETBOnly_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAP4430"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_19.projectspec">
					<filter.ref ref.id="filter_161193167638800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_OMAP4430_noSTM_ETBOnly_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAP4430"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_20.projectspec">
					<filter.ref ref.id="filter_161193167638800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_OMAP4430_noSTM_ETBOnly_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAP4430"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_21.projectspec">
					<filter.ref ref.id="filter_161193167638800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_OMAP4430_noSTM_ETBOnly_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAP4430"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_22.projectspec">
					<filter.ref ref.id="filter_161193167638800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_OMAP4430_noSTM_ETBOnly_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAP4430"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_23.projectspec">
					<filter.ref ref.id="filter_161193167638800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_OMAP4430_noSTM_ETBOnly_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAP4430"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_24.projectspec">
					<filter.ref ref.id="filter_161193167638800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_OMAP4430_noSTM_ETBOnly_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAP4430"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_26.projectspec">
					<filter.ref ref.id="filter_161193167638800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_OMAP4430_noSTM_ETBOnly_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAP4430"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_27.projectspec">
					<filter.ref ref.id="filter_161193167638800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_OMAP4430_noSTM_ETBOnly_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAP4430"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_28.projectspec">
					<filter.ref ref.id="filter_161193167638800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_OMAP4430_noSTM_ETBOnly_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAP4430"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_25.projectspec">
					<filter.ref ref.id="filter_161193167638800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_OMAP4430_noSTM_ETBOnly_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAP4430"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="TI814x" desc="TI814x" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_161193168654700">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>TI814x</tag>
					<tag>ARM9</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_15.projectspec">
					<filter.ref ref.id="filter_161193168654700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_TI814x_ARM9"/>
							<attribute key="device.variant" value="ARM9.TI814x"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_16.projectspec">
					<filter.ref ref.id="filter_161193168654700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_TI814x_ARM9"/>
							<attribute key="device.variant" value="ARM9.TI814x"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_161193168775500">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>TI814x</tag>
					<tag>ARM9</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_29.projectspec">
					<filter.ref ref.id="filter_161193168775500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_TI814x_ARM9"/>
							<attribute key="device.variant" value="ARM9.TI814x"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_18.projectspec">
					<filter.ref ref.id="filter_161193168775500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_TI814x_ARM9"/>
							<attribute key="device.variant" value="ARM9.TI814x"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_19.projectspec">
					<filter.ref ref.id="filter_161193168775500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_TI814x_ARM9"/>
							<attribute key="device.variant" value="ARM9.TI814x"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_20.projectspec">
					<filter.ref ref.id="filter_161193168775500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_TI814x_ARM9"/>
							<attribute key="device.variant" value="ARM9.TI814x"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_21.projectspec">
					<filter.ref ref.id="filter_161193168775500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_TI814x_ARM9"/>
							<attribute key="device.variant" value="ARM9.TI814x"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_22.projectspec">
					<filter.ref ref.id="filter_161193168775500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_TI814x_ARM9"/>
							<attribute key="device.variant" value="ARM9.TI814x"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_23.projectspec">
					<filter.ref ref.id="filter_161193168775500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_TI814x_ARM9"/>
							<attribute key="device.variant" value="ARM9.TI814x"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_24.projectspec">
					<filter.ref ref.id="filter_161193168775500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_TI814x_ARM9"/>
							<attribute key="device.variant" value="ARM9.TI814x"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_26.projectspec">
					<filter.ref ref.id="filter_161193168775500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_TI814x_ARM9"/>
							<attribute key="device.variant" value="ARM9.TI814x"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_27.projectspec">
					<filter.ref ref.id="filter_161193168775500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_TI814x_ARM9"/>
							<attribute key="device.variant" value="ARM9.TI814x"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_28.projectspec">
					<filter.ref ref.id="filter_161193168775500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_TI814x_ARM9"/>
							<attribute key="device.variant" value="ARM9.TI814x"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_25.projectspec">
					<filter.ref ref.id="filter_161193168775500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_TI814x_ARM9"/>
							<attribute key="device.variant" value="ARM9.TI814x"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="TI816x" desc="TI816x" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_161193169699700">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>TI816x</tag>
					<tag>ARM9</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_15.projectspec">
					<filter.ref ref.id="filter_161193169699700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_TI816x_ARM9"/>
							<attribute key="device.variant" value="ARM9.TI816x"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_16.projectspec">
					<filter.ref ref.id="filter_161193169699700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_TI816x_ARM9"/>
							<attribute key="device.variant" value="ARM9.TI816x"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_161193169819200">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>TI816x</tag>
					<tag>ARM9</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_29.projectspec">
					<filter.ref ref.id="filter_161193169819200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_TI816x_ARM9"/>
							<attribute key="device.variant" value="ARM9.TI816x"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_18.projectspec">
					<filter.ref ref.id="filter_161193169819200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_TI816x_ARM9"/>
							<attribute key="device.variant" value="ARM9.TI816x"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_19.projectspec">
					<filter.ref ref.id="filter_161193169819200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_TI816x_ARM9"/>
							<attribute key="device.variant" value="ARM9.TI816x"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_20.projectspec">
					<filter.ref ref.id="filter_161193169819200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_TI816x_ARM9"/>
							<attribute key="device.variant" value="ARM9.TI816x"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_21.projectspec">
					<filter.ref ref.id="filter_161193169819200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_TI816x_ARM9"/>
							<attribute key="device.variant" value="ARM9.TI816x"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_22.projectspec">
					<filter.ref ref.id="filter_161193169819200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_TI816x_ARM9"/>
							<attribute key="device.variant" value="ARM9.TI816x"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_23.projectspec">
					<filter.ref ref.id="filter_161193169819200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_TI816x_ARM9"/>
							<attribute key="device.variant" value="ARM9.TI816x"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_24.projectspec">
					<filter.ref ref.id="filter_161193169819200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_TI816x_ARM9"/>
							<attribute key="device.variant" value="ARM9.TI816x"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_26.projectspec">
					<filter.ref ref.id="filter_161193169819200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_TI816x_ARM9"/>
							<attribute key="device.variant" value="ARM9.TI816x"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_27.projectspec">
					<filter.ref ref.id="filter_161193169819200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_TI816x_ARM9"/>
							<attribute key="device.variant" value="ARM9.TI816x"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_28.projectspec">
					<filter.ref ref.id="filter_161193169819200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_TI816x_ARM9"/>
							<attribute key="device.variant" value="ARM9.TI816x"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_25.projectspec">
					<filter.ref ref.id="filter_161193169819200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_TI816x_ARM9"/>
							<attribute key="device.variant" value="ARM9.TI816x"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
		</contents>
		<contents name="C6-Integra C6A81xx" desc="C6-Integra C6A81xx" icon="plugin://icons/obj16/devices.png">
			<contents name="C6A8167" desc="C6A8167" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_161193170788200">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>C6A8167</tag>
					<tag>C6-Integra C6A81xx</tag>
					</search.tags>
				</filter>
				<contents name="GNU Target Examples" desc="SYS/BIOS Examples for GNU targets." customPageType="genericNote">
				<filter id="filter_161193172233500">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>C6A8167</tag>
					<tag>C6-Integra C6A81xx</tag>
					<tag>GNU Target Examples</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\com_ti_rtsc_sysbios_example_45.projectspec">
					<filter.ref ref.id="filter_161193172233500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_C6A8167_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320C6A8167"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\com_ti_rtsc_sysbios_example_46.projectspec">
					<filter.ref ref.id="filter_161193172233500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_C6A8167_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320C6A8167"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_161193172312800">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>C6A8167</tag>
					<tag>C6-Integra C6A81xx</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_59.projectspec">
					<filter.ref ref.id="filter_161193172312800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_C6A8167_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320C6A8167"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_48.projectspec">
					<filter.ref ref.id="filter_161193172312800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_C6A8167_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320C6A8167"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_49.projectspec">
					<filter.ref ref.id="filter_161193172312800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_C6A8167_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320C6A8167"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_50.projectspec">
					<filter.ref ref.id="filter_161193172312800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_C6A8167_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320C6A8167"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_51.projectspec">
					<filter.ref ref.id="filter_161193172312800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_C6A8167_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320C6A8167"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_52.projectspec">
					<filter.ref ref.id="filter_161193172312800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_C6A8167_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320C6A8167"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_53.projectspec">
					<filter.ref ref.id="filter_161193172312800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_C6A8167_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320C6A8167"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_54.projectspec">
					<filter.ref ref.id="filter_161193172312800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_C6A8167_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320C6A8167"/>
						</attributes>
					</type>
				</content>
				<content name="Semi-Hosting Example" desc="This example leverages Semi-Hosting for printf IO.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_60.projectspec">
					<filter.ref ref.id="filter_161193172312800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="semihost_C6A8167_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320C6A8167"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_56.projectspec">
					<filter.ref ref.id="filter_161193172312800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_C6A8167_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320C6A8167"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_57.projectspec">
					<filter.ref ref.id="filter_161193172312800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_C6A8167_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320C6A8167"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_58.projectspec">
					<filter.ref ref.id="filter_161193172312800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_C6A8167_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320C6A8167"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_55.projectspec">
					<filter.ref ref.id="filter_161193172312800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_C6A8167_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320C6A8167"/>
						</attributes>
					</type>
				</content>
				</contents>
				</contents>
				<contents name="TI Target Examples" desc="SYS/BIOS Examples for TI targets." customPageType="genericNote">
				<filter id="filter_161193172813100">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>C6A8167</tag>
					<tag>C6-Integra C6A81xx</tag>
					<tag>TI Target Examples</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\com_ti_rtsc_sysbios_example_30.projectspec">
					<filter.ref ref.id="filter_161193172813100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_C6A8167_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320C6A8167"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\com_ti_rtsc_sysbios_example_31.projectspec">
					<filter.ref ref.id="filter_161193172813100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_C6A8167_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320C6A8167"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_161193172881300">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>C6A8167</tag>
					<tag>C6-Integra C6A81xx</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_44.projectspec">
					<filter.ref ref.id="filter_161193172881300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_C6A8167_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320C6A8167"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_33.projectspec">
					<filter.ref ref.id="filter_161193172881300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_C6A8167_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320C6A8167"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_34.projectspec">
					<filter.ref ref.id="filter_161193172881300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_C6A8167_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320C6A8167"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_35.projectspec">
					<filter.ref ref.id="filter_161193172881300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_C6A8167_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320C6A8167"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_36.projectspec">
					<filter.ref ref.id="filter_161193172881300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_C6A8167_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320C6A8167"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_37.projectspec">
					<filter.ref ref.id="filter_161193172881300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_C6A8167_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320C6A8167"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_38.projectspec">
					<filter.ref ref.id="filter_161193172881300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_C6A8167_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320C6A8167"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_39.projectspec">
					<filter.ref ref.id="filter_161193172881300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_C6A8167_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320C6A8167"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_41.projectspec">
					<filter.ref ref.id="filter_161193172881300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_C6A8167_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320C6A8167"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_42.projectspec">
					<filter.ref ref.id="filter_161193172881300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_C6A8167_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320C6A8167"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_43.projectspec">
					<filter.ref ref.id="filter_161193172881300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_C6A8167_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320C6A8167"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_40.projectspec">
					<filter.ref ref.id="filter_161193172881300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_C6A8167_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320C6A8167"/>
						</attributes>
					</type>
				</content>
				</contents>
				</contents>
			</contents>
			<contents name="C6A8168" desc="C6A8168" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_161193173292500">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>C6A8168</tag>
					<tag>C6-Integra C6A81xx</tag>
					</search.tags>
				</filter>
				<contents name="GNU Target Examples" desc="SYS/BIOS Examples for GNU targets." customPageType="genericNote">
				<filter id="filter_161193173784000">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>C6A8168</tag>
					<tag>C6-Integra C6A81xx</tag>
					<tag>GNU Target Examples</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\com_ti_rtsc_sysbios_example_45.projectspec">
					<filter.ref ref.id="filter_161193173784000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_C6A8168_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320C6A8168"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\com_ti_rtsc_sysbios_example_46.projectspec">
					<filter.ref ref.id="filter_161193173784000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_C6A8168_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320C6A8168"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_161193173862900">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>C6A8168</tag>
					<tag>C6-Integra C6A81xx</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_59.projectspec">
					<filter.ref ref.id="filter_161193173862900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_C6A8168_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320C6A8168"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_48.projectspec">
					<filter.ref ref.id="filter_161193173862900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_C6A8168_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320C6A8168"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_49.projectspec">
					<filter.ref ref.id="filter_161193173862900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_C6A8168_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320C6A8168"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_50.projectspec">
					<filter.ref ref.id="filter_161193173862900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_C6A8168_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320C6A8168"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_51.projectspec">
					<filter.ref ref.id="filter_161193173862900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_C6A8168_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320C6A8168"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_52.projectspec">
					<filter.ref ref.id="filter_161193173862900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_C6A8168_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320C6A8168"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_53.projectspec">
					<filter.ref ref.id="filter_161193173862900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_C6A8168_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320C6A8168"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_54.projectspec">
					<filter.ref ref.id="filter_161193173862900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_C6A8168_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320C6A8168"/>
						</attributes>
					</type>
				</content>
				<content name="Semi-Hosting Example" desc="This example leverages Semi-Hosting for printf IO.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_60.projectspec">
					<filter.ref ref.id="filter_161193173862900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="semihost_C6A8168_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320C6A8168"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_56.projectspec">
					<filter.ref ref.id="filter_161193173862900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_C6A8168_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320C6A8168"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_57.projectspec">
					<filter.ref ref.id="filter_161193173862900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_C6A8168_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320C6A8168"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_58.projectspec">
					<filter.ref ref.id="filter_161193173862900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_C6A8168_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320C6A8168"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_55.projectspec">
					<filter.ref ref.id="filter_161193173862900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_C6A8168_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320C6A8168"/>
						</attributes>
					</type>
				</content>
				</contents>
				</contents>
				<contents name="TI Target Examples" desc="SYS/BIOS Examples for TI targets." customPageType="genericNote">
				<filter id="filter_161193174300400">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>C6A8168</tag>
					<tag>C6-Integra C6A81xx</tag>
					<tag>TI Target Examples</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\com_ti_rtsc_sysbios_example_30.projectspec">
					<filter.ref ref.id="filter_161193174300400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_C6A8168_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320C6A8168"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\com_ti_rtsc_sysbios_example_31.projectspec">
					<filter.ref ref.id="filter_161193174300400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_C6A8168_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320C6A8168"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_161193174351700">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>C6A8168</tag>
					<tag>C6-Integra C6A81xx</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_44.projectspec">
					<filter.ref ref.id="filter_161193174351700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_C6A8168_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320C6A8168"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_33.projectspec">
					<filter.ref ref.id="filter_161193174351700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_C6A8168_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320C6A8168"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_34.projectspec">
					<filter.ref ref.id="filter_161193174351700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_C6A8168_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320C6A8168"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_35.projectspec">
					<filter.ref ref.id="filter_161193174351700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_C6A8168_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320C6A8168"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_36.projectspec">
					<filter.ref ref.id="filter_161193174351700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_C6A8168_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320C6A8168"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_37.projectspec">
					<filter.ref ref.id="filter_161193174351700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_C6A8168_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320C6A8168"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_38.projectspec">
					<filter.ref ref.id="filter_161193174351700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_C6A8168_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320C6A8168"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_39.projectspec">
					<filter.ref ref.id="filter_161193174351700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_C6A8168_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320C6A8168"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_41.projectspec">
					<filter.ref ref.id="filter_161193174351700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_C6A8168_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320C6A8168"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_42.projectspec">
					<filter.ref ref.id="filter_161193174351700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_C6A8168_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320C6A8168"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_43.projectspec">
					<filter.ref ref.id="filter_161193174351700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_C6A8168_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320C6A8168"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_40.projectspec">
					<filter.ref ref.id="filter_161193174351700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_C6A8168_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320C6A8168"/>
						</attributes>
					</type>
				</content>
				</contents>
				</contents>
			</contents>
		</contents>
		<contents name="C66xx Multicore DSP" desc="C66xx Multicore DSP" icon="plugin://icons/obj16/devices.png">
			<contents name="TCI6614" desc="TCI6614" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_161193174734800">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>TCI6614</tag>
					<tag>C66xx Multicore DSP</tag>
					</search.tags>
				</filter>
				<contents name="GNU Target Examples" desc="SYS/BIOS Examples for GNU targets." customPageType="genericNote">
				<filter id="filter_161193176200400">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>TCI6614</tag>
					<tag>C66xx Multicore DSP</tag>
					<tag>GNU Target Examples</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\com_ti_rtsc_sysbios_example_45.projectspec">
					<filter.ref ref.id="filter_161193176200400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_TCI6614_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TCI6614"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\com_ti_rtsc_sysbios_example_46.projectspec">
					<filter.ref ref.id="filter_161193176200400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_TCI6614_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TCI6614"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_161193176328400">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>TCI6614</tag>
					<tag>C66xx Multicore DSP</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_59.projectspec">
					<filter.ref ref.id="filter_161193176328400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_TCI6614_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TCI6614"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_48.projectspec">
					<filter.ref ref.id="filter_161193176328400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_TCI6614_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TCI6614"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_49.projectspec">
					<filter.ref ref.id="filter_161193176328400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_TCI6614_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TCI6614"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_50.projectspec">
					<filter.ref ref.id="filter_161193176328400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_TCI6614_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TCI6614"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_51.projectspec">
					<filter.ref ref.id="filter_161193176328400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_TCI6614_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TCI6614"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_52.projectspec">
					<filter.ref ref.id="filter_161193176328400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_TCI6614_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TCI6614"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_53.projectspec">
					<filter.ref ref.id="filter_161193176328400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_TCI6614_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TCI6614"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_54.projectspec">
					<filter.ref ref.id="filter_161193176328400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_TCI6614_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TCI6614"/>
						</attributes>
					</type>
				</content>
				<content name="Semi-Hosting Example" desc="This example leverages Semi-Hosting for printf IO.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_60.projectspec">
					<filter.ref ref.id="filter_161193176328400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="semihost_TCI6614_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TCI6614"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_56.projectspec">
					<filter.ref ref.id="filter_161193176328400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_TCI6614_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TCI6614"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_57.projectspec">
					<filter.ref ref.id="filter_161193176328400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_TCI6614_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TCI6614"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_58.projectspec">
					<filter.ref ref.id="filter_161193176328400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_TCI6614_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TCI6614"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_55.projectspec">
					<filter.ref ref.id="filter_161193176328400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_TCI6614_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TCI6614"/>
						</attributes>
					</type>
				</content>
				</contents>
				</contents>
				<contents name="TI Target Examples" desc="SYS/BIOS Examples for TI targets." customPageType="genericNote">
				<filter id="filter_161193177133100">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>TCI6614</tag>
					<tag>C66xx Multicore DSP</tag>
					<tag>TI Target Examples</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\com_ti_rtsc_sysbios_example_30.projectspec">
					<filter.ref ref.id="filter_161193177133100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_TCI6614_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TCI6614"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\com_ti_rtsc_sysbios_example_31.projectspec">
					<filter.ref ref.id="filter_161193177133100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_TCI6614_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TCI6614"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_161193177230800">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>TCI6614</tag>
					<tag>C66xx Multicore DSP</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_44.projectspec">
					<filter.ref ref.id="filter_161193177230800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_TCI6614_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TCI6614"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_33.projectspec">
					<filter.ref ref.id="filter_161193177230800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_TCI6614_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TCI6614"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_34.projectspec">
					<filter.ref ref.id="filter_161193177230800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_TCI6614_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TCI6614"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_35.projectspec">
					<filter.ref ref.id="filter_161193177230800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_TCI6614_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TCI6614"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_36.projectspec">
					<filter.ref ref.id="filter_161193177230800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_TCI6614_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TCI6614"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_37.projectspec">
					<filter.ref ref.id="filter_161193177230800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_TCI6614_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TCI6614"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_38.projectspec">
					<filter.ref ref.id="filter_161193177230800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_TCI6614_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TCI6614"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_39.projectspec">
					<filter.ref ref.id="filter_161193177230800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_TCI6614_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TCI6614"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_41.projectspec">
					<filter.ref ref.id="filter_161193177230800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_TCI6614_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TCI6614"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_42.projectspec">
					<filter.ref ref.id="filter_161193177230800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_TCI6614_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TCI6614"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_43.projectspec">
					<filter.ref ref.id="filter_161193177230800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_TCI6614_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TCI6614"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_40.projectspec">
					<filter.ref ref.id="filter_161193177230800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_TCI6614_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TCI6614"/>
						</attributes>
					</type>
				</content>
				</contents>
				</contents>
			</contents>
		</contents>
		<contents name="Cortex A" desc="Cortex A" icon="plugin://icons/obj16/devices.png">
			<contents name="TI814x" desc="TI814x" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_161193177800500">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>TI814x</tag>
					<tag>Cortex A</tag>
					</search.tags>
				</filter>
				<contents name="GNU Target Examples" desc="SYS/BIOS Examples for GNU targets." customPageType="genericNote">
				<filter id="filter_161193178701900">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>TI814x</tag>
					<tag>Cortex A</tag>
					<tag>GNU Target Examples</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\com_ti_rtsc_sysbios_example_45.projectspec">
					<filter.ref ref.id="filter_161193178701900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_TI814x_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TI814x"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\com_ti_rtsc_sysbios_example_46.projectspec">
					<filter.ref ref.id="filter_161193178701900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_TI814x_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TI814x"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_161193178781500">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>TI814x</tag>
					<tag>Cortex A</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_59.projectspec">
					<filter.ref ref.id="filter_161193178781500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_TI814x_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TI814x"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_48.projectspec">
					<filter.ref ref.id="filter_161193178781500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_TI814x_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TI814x"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_49.projectspec">
					<filter.ref ref.id="filter_161193178781500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_TI814x_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TI814x"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_50.projectspec">
					<filter.ref ref.id="filter_161193178781500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_TI814x_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TI814x"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_51.projectspec">
					<filter.ref ref.id="filter_161193178781500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_TI814x_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TI814x"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_52.projectspec">
					<filter.ref ref.id="filter_161193178781500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_TI814x_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TI814x"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_53.projectspec">
					<filter.ref ref.id="filter_161193178781500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_TI814x_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TI814x"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_54.projectspec">
					<filter.ref ref.id="filter_161193178781500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_TI814x_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TI814x"/>
						</attributes>
					</type>
				</content>
				<content name="Semi-Hosting Example" desc="This example leverages Semi-Hosting for printf IO.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_60.projectspec">
					<filter.ref ref.id="filter_161193178781500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="semihost_TI814x_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TI814x"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_56.projectspec">
					<filter.ref ref.id="filter_161193178781500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_TI814x_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TI814x"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_57.projectspec">
					<filter.ref ref.id="filter_161193178781500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_TI814x_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TI814x"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_58.projectspec">
					<filter.ref ref.id="filter_161193178781500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_TI814x_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TI814x"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_55.projectspec">
					<filter.ref ref.id="filter_161193178781500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_TI814x_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TI814x"/>
						</attributes>
					</type>
				</content>
				</contents>
				</contents>
				<contents name="TI Target Examples" desc="SYS/BIOS Examples for TI targets." customPageType="genericNote">
				<filter id="filter_161193179349100">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>TI814x</tag>
					<tag>Cortex A</tag>
					<tag>TI Target Examples</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\com_ti_rtsc_sysbios_example_30.projectspec">
					<filter.ref ref.id="filter_161193179349100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_TI814x_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TI814x"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\com_ti_rtsc_sysbios_example_31.projectspec">
					<filter.ref ref.id="filter_161193179349100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_TI814x_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TI814x"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_161193179425500">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>TI814x</tag>
					<tag>Cortex A</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_44.projectspec">
					<filter.ref ref.id="filter_161193179425500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_TI814x_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TI814x"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_33.projectspec">
					<filter.ref ref.id="filter_161193179425500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_TI814x_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TI814x"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_34.projectspec">
					<filter.ref ref.id="filter_161193179425500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_TI814x_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TI814x"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_35.projectspec">
					<filter.ref ref.id="filter_161193179425500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_TI814x_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TI814x"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_36.projectspec">
					<filter.ref ref.id="filter_161193179425500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_TI814x_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TI814x"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_37.projectspec">
					<filter.ref ref.id="filter_161193179425500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_TI814x_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TI814x"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_38.projectspec">
					<filter.ref ref.id="filter_161193179425500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_TI814x_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TI814x"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_39.projectspec">
					<filter.ref ref.id="filter_161193179425500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_TI814x_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TI814x"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_41.projectspec">
					<filter.ref ref.id="filter_161193179425500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_TI814x_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TI814x"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_42.projectspec">
					<filter.ref ref.id="filter_161193179425500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_TI814x_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TI814x"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_43.projectspec">
					<filter.ref ref.id="filter_161193179425500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_TI814x_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TI814x"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_40.projectspec">
					<filter.ref ref.id="filter_161193179425500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_TI814x_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TI814x"/>
						</attributes>
					</type>
				</content>
				</contents>
				</contents>
			</contents>
			<contents name="TI816x" desc="TI816x" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_161193179840500">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>TI816x</tag>
					<tag>Cortex A</tag>
					</search.tags>
				</filter>
				<contents name="GNU Target Examples" desc="SYS/BIOS Examples for GNU targets." customPageType="genericNote">
				<filter id="filter_161193181736500">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>TI816x</tag>
					<tag>Cortex A</tag>
					<tag>GNU Target Examples</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\com_ti_rtsc_sysbios_example_45.projectspec">
					<filter.ref ref.id="filter_161193181736500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_TI816x_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TI816x"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\com_ti_rtsc_sysbios_example_46.projectspec">
					<filter.ref ref.id="filter_161193181736500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_TI816x_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TI816x"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_161193181815200">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>TI816x</tag>
					<tag>Cortex A</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_59.projectspec">
					<filter.ref ref.id="filter_161193181815200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_TI816x_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TI816x"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_48.projectspec">
					<filter.ref ref.id="filter_161193181815200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_TI816x_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TI816x"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_49.projectspec">
					<filter.ref ref.id="filter_161193181815200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_TI816x_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TI816x"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_50.projectspec">
					<filter.ref ref.id="filter_161193181815200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_TI816x_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TI816x"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_51.projectspec">
					<filter.ref ref.id="filter_161193181815200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_TI816x_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TI816x"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_52.projectspec">
					<filter.ref ref.id="filter_161193181815200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_TI816x_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TI816x"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_53.projectspec">
					<filter.ref ref.id="filter_161193181815200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_TI816x_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TI816x"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_54.projectspec">
					<filter.ref ref.id="filter_161193181815200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_TI816x_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TI816x"/>
						</attributes>
					</type>
				</content>
				<content name="Semi-Hosting Example" desc="This example leverages Semi-Hosting for printf IO.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_60.projectspec">
					<filter.ref ref.id="filter_161193181815200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="semihost_TI816x_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TI816x"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_56.projectspec">
					<filter.ref ref.id="filter_161193181815200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_TI816x_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TI816x"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_57.projectspec">
					<filter.ref ref.id="filter_161193181815200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_TI816x_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TI816x"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_58.projectspec">
					<filter.ref ref.id="filter_161193181815200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_TI816x_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TI816x"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_55.projectspec">
					<filter.ref ref.id="filter_161193181815200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_TI816x_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TI816x"/>
						</attributes>
					</type>
				</content>
				</contents>
				</contents>
				<contents name="TI Target Examples" desc="SYS/BIOS Examples for TI targets." customPageType="genericNote">
				<filter id="filter_161193182282200">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>TI816x</tag>
					<tag>Cortex A</tag>
					<tag>TI Target Examples</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\com_ti_rtsc_sysbios_example_30.projectspec">
					<filter.ref ref.id="filter_161193182282200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_TI816x_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TI816x"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\com_ti_rtsc_sysbios_example_31.projectspec">
					<filter.ref ref.id="filter_161193182282200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_TI816x_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TI816x"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_161193182333000">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>TI816x</tag>
					<tag>Cortex A</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_44.projectspec">
					<filter.ref ref.id="filter_161193182333000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_TI816x_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TI816x"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_33.projectspec">
					<filter.ref ref.id="filter_161193182333000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_TI816x_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TI816x"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_34.projectspec">
					<filter.ref ref.id="filter_161193182333000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_TI816x_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TI816x"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_35.projectspec">
					<filter.ref ref.id="filter_161193182333000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_TI816x_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TI816x"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_36.projectspec">
					<filter.ref ref.id="filter_161193182333000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_TI816x_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TI816x"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_37.projectspec">
					<filter.ref ref.id="filter_161193182333000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_TI816x_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TI816x"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_38.projectspec">
					<filter.ref ref.id="filter_161193182333000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_TI816x_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TI816x"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_39.projectspec">
					<filter.ref ref.id="filter_161193182333000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_TI816x_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TI816x"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_41.projectspec">
					<filter.ref ref.id="filter_161193182333000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_TI816x_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TI816x"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_42.projectspec">
					<filter.ref ref.id="filter_161193182333000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_TI816x_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TI816x"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_43.projectspec">
					<filter.ref ref.id="filter_161193182333000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_TI816x_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TI816x"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_40.projectspec">
					<filter.ref ref.id="filter_161193182333000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_TI816x_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TI816x"/>
						</attributes>
					</type>
				</content>
				</contents>
				</contents>
			</contents>
		</contents>
		<contents name="Cortex M" desc="Cortex M" icon="plugin://icons/obj16/devices.png">
			<contents name="OMAP4430 (no STM, ETB only)" desc="OMAP4430 (no STM, ETB only)" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_161193182752400">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>OMAP4430 (no STM, ETB only)</tag>
					<tag>Cortex M</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_15.projectspec">
					<filter.ref ref.id="filter_161193182752400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_OMAP4430_noSTM_ETBOnly_CortexM"/>
							<attribute key="device.variant" value="Cortex M.OMAP4430"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_16.projectspec">
					<filter.ref ref.id="filter_161193182752400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_OMAP4430_noSTM_ETBOnly_CortexM"/>
							<attribute key="device.variant" value="Cortex M.OMAP4430"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_161193182896100">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>OMAP4430 (no STM, ETB only)</tag>
					<tag>Cortex M</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_29.projectspec">
					<filter.ref ref.id="filter_161193182896100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_OMAP4430_noSTM_ETBOnly_CortexM"/>
							<attribute key="device.variant" value="Cortex M.OMAP4430"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_18.projectspec">
					<filter.ref ref.id="filter_161193182896100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_OMAP4430_noSTM_ETBOnly_CortexM"/>
							<attribute key="device.variant" value="Cortex M.OMAP4430"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_19.projectspec">
					<filter.ref ref.id="filter_161193182896100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_OMAP4430_noSTM_ETBOnly_CortexM"/>
							<attribute key="device.variant" value="Cortex M.OMAP4430"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_20.projectspec">
					<filter.ref ref.id="filter_161193182896100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_OMAP4430_noSTM_ETBOnly_CortexM"/>
							<attribute key="device.variant" value="Cortex M.OMAP4430"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_21.projectspec">
					<filter.ref ref.id="filter_161193182896100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_OMAP4430_noSTM_ETBOnly_CortexM"/>
							<attribute key="device.variant" value="Cortex M.OMAP4430"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_22.projectspec">
					<filter.ref ref.id="filter_161193182896100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_OMAP4430_noSTM_ETBOnly_CortexM"/>
							<attribute key="device.variant" value="Cortex M.OMAP4430"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_23.projectspec">
					<filter.ref ref.id="filter_161193182896100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_OMAP4430_noSTM_ETBOnly_CortexM"/>
							<attribute key="device.variant" value="Cortex M.OMAP4430"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_24.projectspec">
					<filter.ref ref.id="filter_161193182896100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_OMAP4430_noSTM_ETBOnly_CortexM"/>
							<attribute key="device.variant" value="Cortex M.OMAP4430"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_26.projectspec">
					<filter.ref ref.id="filter_161193182896100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_OMAP4430_noSTM_ETBOnly_CortexM"/>
							<attribute key="device.variant" value="Cortex M.OMAP4430"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_27.projectspec">
					<filter.ref ref.id="filter_161193182896100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_OMAP4430_noSTM_ETBOnly_CortexM"/>
							<attribute key="device.variant" value="Cortex M.OMAP4430"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_28.projectspec">
					<filter.ref ref.id="filter_161193182896100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_OMAP4430_noSTM_ETBOnly_CortexM"/>
							<attribute key="device.variant" value="Cortex M.OMAP4430"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_25.projectspec">
					<filter.ref ref.id="filter_161193182896100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_OMAP4430_noSTM_ETBOnly_CortexM"/>
							<attribute key="device.variant" value="Cortex M.OMAP4430"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="TI814x" desc="TI814x" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_161193183821500">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>TI814x</tag>
					<tag>Cortex M</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_15.projectspec">
					<filter.ref ref.id="filter_161193183821500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_TI814x_CortexM"/>
							<attribute key="device.variant" value="Cortex M.TI814x"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_16.projectspec">
					<filter.ref ref.id="filter_161193183821500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_TI814x_CortexM"/>
							<attribute key="device.variant" value="Cortex M.TI814x"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_161193183933700">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>TI814x</tag>
					<tag>Cortex M</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_29.projectspec">
					<filter.ref ref.id="filter_161193183933700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_TI814x_CortexM"/>
							<attribute key="device.variant" value="Cortex M.TI814x"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_18.projectspec">
					<filter.ref ref.id="filter_161193183933700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_TI814x_CortexM"/>
							<attribute key="device.variant" value="Cortex M.TI814x"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_19.projectspec">
					<filter.ref ref.id="filter_161193183933700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_TI814x_CortexM"/>
							<attribute key="device.variant" value="Cortex M.TI814x"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_20.projectspec">
					<filter.ref ref.id="filter_161193183933700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_TI814x_CortexM"/>
							<attribute key="device.variant" value="Cortex M.TI814x"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_21.projectspec">
					<filter.ref ref.id="filter_161193183933700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_TI814x_CortexM"/>
							<attribute key="device.variant" value="Cortex M.TI814x"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_22.projectspec">
					<filter.ref ref.id="filter_161193183933700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_TI814x_CortexM"/>
							<attribute key="device.variant" value="Cortex M.TI814x"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_23.projectspec">
					<filter.ref ref.id="filter_161193183933700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_TI814x_CortexM"/>
							<attribute key="device.variant" value="Cortex M.TI814x"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_24.projectspec">
					<filter.ref ref.id="filter_161193183933700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_TI814x_CortexM"/>
							<attribute key="device.variant" value="Cortex M.TI814x"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_26.projectspec">
					<filter.ref ref.id="filter_161193183933700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_TI814x_CortexM"/>
							<attribute key="device.variant" value="Cortex M.TI814x"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_27.projectspec">
					<filter.ref ref.id="filter_161193183933700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_TI814x_CortexM"/>
							<attribute key="device.variant" value="Cortex M.TI814x"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_28.projectspec">
					<filter.ref ref.id="filter_161193183933700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_TI814x_CortexM"/>
							<attribute key="device.variant" value="Cortex M.TI814x"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_25.projectspec">
					<filter.ref ref.id="filter_161193183933700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_TI814x_CortexM"/>
							<attribute key="device.variant" value="Cortex M.TI814x"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="TI816x" desc="TI816x" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_161193184788300">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>TI816x</tag>
					<tag>Cortex M</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_15.projectspec">
					<filter.ref ref.id="filter_161193184788300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_TI816x_CortexM"/>
							<attribute key="device.variant" value="Cortex M.TI816x"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_16.projectspec">
					<filter.ref ref.id="filter_161193184788300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_TI816x_CortexM"/>
							<attribute key="device.variant" value="Cortex M.TI816x"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_161193184895300">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>TI816x</tag>
					<tag>Cortex M</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_29.projectspec">
					<filter.ref ref.id="filter_161193184895300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_TI816x_CortexM"/>
							<attribute key="device.variant" value="Cortex M.TI816x"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_18.projectspec">
					<filter.ref ref.id="filter_161193184895300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_TI816x_CortexM"/>
							<attribute key="device.variant" value="Cortex M.TI816x"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_19.projectspec">
					<filter.ref ref.id="filter_161193184895300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_TI816x_CortexM"/>
							<attribute key="device.variant" value="Cortex M.TI816x"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_20.projectspec">
					<filter.ref ref.id="filter_161193184895300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_TI816x_CortexM"/>
							<attribute key="device.variant" value="Cortex M.TI816x"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_21.projectspec">
					<filter.ref ref.id="filter_161193184895300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_TI816x_CortexM"/>
							<attribute key="device.variant" value="Cortex M.TI816x"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_22.projectspec">
					<filter.ref ref.id="filter_161193184895300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_TI816x_CortexM"/>
							<attribute key="device.variant" value="Cortex M.TI816x"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_23.projectspec">
					<filter.ref ref.id="filter_161193184895300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_TI816x_CortexM"/>
							<attribute key="device.variant" value="Cortex M.TI816x"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_24.projectspec">
					<filter.ref ref.id="filter_161193184895300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_TI816x_CortexM"/>
							<attribute key="device.variant" value="Cortex M.TI816x"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_26.projectspec">
					<filter.ref ref.id="filter_161193184895300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_TI816x_CortexM"/>
							<attribute key="device.variant" value="Cortex M.TI816x"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_27.projectspec">
					<filter.ref ref.id="filter_161193184895300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_TI816x_CortexM"/>
							<attribute key="device.variant" value="Cortex M.TI816x"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_28.projectspec">
					<filter.ref ref.id="filter_161193184895300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_TI816x_CortexM"/>
							<attribute key="device.variant" value="Cortex M.TI816x"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_25.projectspec">
					<filter.ref ref.id="filter_161193184895300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_TI816x_CortexM"/>
							<attribute key="device.variant" value="Cortex M.TI816x"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
		</contents>
		<contents name="DaVinci DM37xx" desc="DaVinci DM37xx" icon="plugin://icons/obj16/devices.png">
			<contents name="BeagleBoard_xM" desc="BeagleBoard_xM" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_161193187079300">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>BeagleBoard_xM</tag>
					<tag>DaVinci DM37xx</tag>
					</search.tags>
				</filter>
				<contents name="GNU Target Examples" desc="SYS/BIOS Examples for GNU targets." customPageType="genericNote">
				<filter id="filter_161193187615500">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>BeagleBoard_xM</tag>
					<tag>DaVinci DM37xx</tag>
					<tag>GNU Target Examples</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\com_ti_rtsc_sysbios_example_45.projectspec">
					<filter.ref ref.id="filter_161193187615500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_BeagleBoard_xM_CortexA"/>
							<attribute key="device.variant" value="Cortex A.DM3730.BeagleBoard_xM"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\com_ti_rtsc_sysbios_example_46.projectspec">
					<filter.ref ref.id="filter_161193187615500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_BeagleBoard_xM_CortexA"/>
							<attribute key="device.variant" value="Cortex A.DM3730.BeagleBoard_xM"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_161193187659900">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>BeagleBoard_xM</tag>
					<tag>DaVinci DM37xx</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_59.projectspec">
					<filter.ref ref.id="filter_161193187659900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_BeagleBoard_xM_CortexA"/>
							<attribute key="device.variant" value="Cortex A.DM3730.BeagleBoard_xM"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_48.projectspec">
					<filter.ref ref.id="filter_161193187659900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_BeagleBoard_xM_CortexA"/>
							<attribute key="device.variant" value="Cortex A.DM3730.BeagleBoard_xM"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_49.projectspec">
					<filter.ref ref.id="filter_161193187659900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_BeagleBoard_xM_CortexA"/>
							<attribute key="device.variant" value="Cortex A.DM3730.BeagleBoard_xM"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_50.projectspec">
					<filter.ref ref.id="filter_161193187659900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_BeagleBoard_xM_CortexA"/>
							<attribute key="device.variant" value="Cortex A.DM3730.BeagleBoard_xM"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_51.projectspec">
					<filter.ref ref.id="filter_161193187659900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_BeagleBoard_xM_CortexA"/>
							<attribute key="device.variant" value="Cortex A.DM3730.BeagleBoard_xM"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_52.projectspec">
					<filter.ref ref.id="filter_161193187659900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_BeagleBoard_xM_CortexA"/>
							<attribute key="device.variant" value="Cortex A.DM3730.BeagleBoard_xM"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_53.projectspec">
					<filter.ref ref.id="filter_161193187659900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_BeagleBoard_xM_CortexA"/>
							<attribute key="device.variant" value="Cortex A.DM3730.BeagleBoard_xM"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_54.projectspec">
					<filter.ref ref.id="filter_161193187659900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_BeagleBoard_xM_CortexA"/>
							<attribute key="device.variant" value="Cortex A.DM3730.BeagleBoard_xM"/>
						</attributes>
					</type>
				</content>
				<content name="Semi-Hosting Example" desc="This example leverages Semi-Hosting for printf IO.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_60.projectspec">
					<filter.ref ref.id="filter_161193187659900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="semihost_BeagleBoard_xM_CortexA"/>
							<attribute key="device.variant" value="Cortex A.DM3730.BeagleBoard_xM"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_56.projectspec">
					<filter.ref ref.id="filter_161193187659900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_BeagleBoard_xM_CortexA"/>
							<attribute key="device.variant" value="Cortex A.DM3730.BeagleBoard_xM"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_57.projectspec">
					<filter.ref ref.id="filter_161193187659900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_BeagleBoard_xM_CortexA"/>
							<attribute key="device.variant" value="Cortex A.DM3730.BeagleBoard_xM"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_58.projectspec">
					<filter.ref ref.id="filter_161193187659900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_BeagleBoard_xM_CortexA"/>
							<attribute key="device.variant" value="Cortex A.DM3730.BeagleBoard_xM"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_55.projectspec">
					<filter.ref ref.id="filter_161193187659900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_BeagleBoard_xM_CortexA"/>
							<attribute key="device.variant" value="Cortex A.DM3730.BeagleBoard_xM"/>
						</attributes>
					</type>
				</content>
				</contents>
				</contents>
				<contents name="TI Target Examples" desc="SYS/BIOS Examples for TI targets." customPageType="genericNote">
				<filter id="filter_161193188019500">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>BeagleBoard_xM</tag>
					<tag>DaVinci DM37xx</tag>
					<tag>TI Target Examples</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\com_ti_rtsc_sysbios_example_30.projectspec">
					<filter.ref ref.id="filter_161193188019500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_BeagleBoard_xM_CortexA"/>
							<attribute key="device.variant" value="Cortex A.DM3730.BeagleBoard_xM"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\com_ti_rtsc_sysbios_example_31.projectspec">
					<filter.ref ref.id="filter_161193188019500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_BeagleBoard_xM_CortexA"/>
							<attribute key="device.variant" value="Cortex A.DM3730.BeagleBoard_xM"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_161193188066500">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>BeagleBoard_xM</tag>
					<tag>DaVinci DM37xx</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_44.projectspec">
					<filter.ref ref.id="filter_161193188066500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_BeagleBoard_xM_CortexA"/>
							<attribute key="device.variant" value="Cortex A.DM3730.BeagleBoard_xM"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_33.projectspec">
					<filter.ref ref.id="filter_161193188066500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_BeagleBoard_xM_CortexA"/>
							<attribute key="device.variant" value="Cortex A.DM3730.BeagleBoard_xM"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_34.projectspec">
					<filter.ref ref.id="filter_161193188066500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_BeagleBoard_xM_CortexA"/>
							<attribute key="device.variant" value="Cortex A.DM3730.BeagleBoard_xM"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_35.projectspec">
					<filter.ref ref.id="filter_161193188066500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_BeagleBoard_xM_CortexA"/>
							<attribute key="device.variant" value="Cortex A.DM3730.BeagleBoard_xM"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_36.projectspec">
					<filter.ref ref.id="filter_161193188066500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_BeagleBoard_xM_CortexA"/>
							<attribute key="device.variant" value="Cortex A.DM3730.BeagleBoard_xM"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_37.projectspec">
					<filter.ref ref.id="filter_161193188066500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_BeagleBoard_xM_CortexA"/>
							<attribute key="device.variant" value="Cortex A.DM3730.BeagleBoard_xM"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_38.projectspec">
					<filter.ref ref.id="filter_161193188066500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_BeagleBoard_xM_CortexA"/>
							<attribute key="device.variant" value="Cortex A.DM3730.BeagleBoard_xM"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_39.projectspec">
					<filter.ref ref.id="filter_161193188066500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_BeagleBoard_xM_CortexA"/>
							<attribute key="device.variant" value="Cortex A.DM3730.BeagleBoard_xM"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_41.projectspec">
					<filter.ref ref.id="filter_161193188066500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_BeagleBoard_xM_CortexA"/>
							<attribute key="device.variant" value="Cortex A.DM3730.BeagleBoard_xM"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_42.projectspec">
					<filter.ref ref.id="filter_161193188066500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_BeagleBoard_xM_CortexA"/>
							<attribute key="device.variant" value="Cortex A.DM3730.BeagleBoard_xM"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_43.projectspec">
					<filter.ref ref.id="filter_161193188066500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_BeagleBoard_xM_CortexA"/>
							<attribute key="device.variant" value="Cortex A.DM3730.BeagleBoard_xM"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_40.projectspec">
					<filter.ref ref.id="filter_161193188066500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_BeagleBoard_xM_CortexA"/>
							<attribute key="device.variant" value="Cortex A.DM3730.BeagleBoard_xM"/>
						</attributes>
					</type>
				</content>
				</contents>
				</contents>
			</contents>
			<contents name="DM3725" desc="DM3725" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_161193188367000">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>DM3725</tag>
					<tag>DaVinci DM37xx</tag>
					</search.tags>
				</filter>
				<contents name="GNU Target Examples" desc="SYS/BIOS Examples for GNU targets." customPageType="genericNote">
				<filter id="filter_161193188846500">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>DM3725</tag>
					<tag>DaVinci DM37xx</tag>
					<tag>GNU Target Examples</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\com_ti_rtsc_sysbios_example_45.projectspec">
					<filter.ref ref.id="filter_161193188846500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_DM3725_CortexA"/>
							<attribute key="device.variant" value="Cortex A.DM3725"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\com_ti_rtsc_sysbios_example_46.projectspec">
					<filter.ref ref.id="filter_161193188846500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_DM3725_CortexA"/>
							<attribute key="device.variant" value="Cortex A.DM3725"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_161193188884200">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>DM3725</tag>
					<tag>DaVinci DM37xx</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_59.projectspec">
					<filter.ref ref.id="filter_161193188884200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_DM3725_CortexA"/>
							<attribute key="device.variant" value="Cortex A.DM3725"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_48.projectspec">
					<filter.ref ref.id="filter_161193188884200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_DM3725_CortexA"/>
							<attribute key="device.variant" value="Cortex A.DM3725"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_49.projectspec">
					<filter.ref ref.id="filter_161193188884200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_DM3725_CortexA"/>
							<attribute key="device.variant" value="Cortex A.DM3725"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_50.projectspec">
					<filter.ref ref.id="filter_161193188884200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_DM3725_CortexA"/>
							<attribute key="device.variant" value="Cortex A.DM3725"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_51.projectspec">
					<filter.ref ref.id="filter_161193188884200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_DM3725_CortexA"/>
							<attribute key="device.variant" value="Cortex A.DM3725"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_52.projectspec">
					<filter.ref ref.id="filter_161193188884200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_DM3725_CortexA"/>
							<attribute key="device.variant" value="Cortex A.DM3725"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_53.projectspec">
					<filter.ref ref.id="filter_161193188884200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_DM3725_CortexA"/>
							<attribute key="device.variant" value="Cortex A.DM3725"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_54.projectspec">
					<filter.ref ref.id="filter_161193188884200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_DM3725_CortexA"/>
							<attribute key="device.variant" value="Cortex A.DM3725"/>
						</attributes>
					</type>
				</content>
				<content name="Semi-Hosting Example" desc="This example leverages Semi-Hosting for printf IO.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_60.projectspec">
					<filter.ref ref.id="filter_161193188884200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="semihost_DM3725_CortexA"/>
							<attribute key="device.variant" value="Cortex A.DM3725"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_56.projectspec">
					<filter.ref ref.id="filter_161193188884200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_DM3725_CortexA"/>
							<attribute key="device.variant" value="Cortex A.DM3725"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_57.projectspec">
					<filter.ref ref.id="filter_161193188884200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_DM3725_CortexA"/>
							<attribute key="device.variant" value="Cortex A.DM3725"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_58.projectspec">
					<filter.ref ref.id="filter_161193188884200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_DM3725_CortexA"/>
							<attribute key="device.variant" value="Cortex A.DM3725"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_55.projectspec">
					<filter.ref ref.id="filter_161193188884200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_DM3725_CortexA"/>
							<attribute key="device.variant" value="Cortex A.DM3725"/>
						</attributes>
					</type>
				</content>
				</contents>
				</contents>
				<contents name="TI Target Examples" desc="SYS/BIOS Examples for TI targets." customPageType="genericNote">
				<filter id="filter_161193189206800">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>DM3725</tag>
					<tag>DaVinci DM37xx</tag>
					<tag>TI Target Examples</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\com_ti_rtsc_sysbios_example_30.projectspec">
					<filter.ref ref.id="filter_161193189206800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_DM3725_CortexA"/>
							<attribute key="device.variant" value="Cortex A.DM3725"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\com_ti_rtsc_sysbios_example_31.projectspec">
					<filter.ref ref.id="filter_161193189206800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_DM3725_CortexA"/>
							<attribute key="device.variant" value="Cortex A.DM3725"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_161193189241300">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>DM3725</tag>
					<tag>DaVinci DM37xx</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_44.projectspec">
					<filter.ref ref.id="filter_161193189241300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_DM3725_CortexA"/>
							<attribute key="device.variant" value="Cortex A.DM3725"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_33.projectspec">
					<filter.ref ref.id="filter_161193189241300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_DM3725_CortexA"/>
							<attribute key="device.variant" value="Cortex A.DM3725"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_34.projectspec">
					<filter.ref ref.id="filter_161193189241300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_DM3725_CortexA"/>
							<attribute key="device.variant" value="Cortex A.DM3725"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_35.projectspec">
					<filter.ref ref.id="filter_161193189241300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_DM3725_CortexA"/>
							<attribute key="device.variant" value="Cortex A.DM3725"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_36.projectspec">
					<filter.ref ref.id="filter_161193189241300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_DM3725_CortexA"/>
							<attribute key="device.variant" value="Cortex A.DM3725"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_37.projectspec">
					<filter.ref ref.id="filter_161193189241300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_DM3725_CortexA"/>
							<attribute key="device.variant" value="Cortex A.DM3725"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_38.projectspec">
					<filter.ref ref.id="filter_161193189241300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_DM3725_CortexA"/>
							<attribute key="device.variant" value="Cortex A.DM3725"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_39.projectspec">
					<filter.ref ref.id="filter_161193189241300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_DM3725_CortexA"/>
							<attribute key="device.variant" value="Cortex A.DM3725"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_41.projectspec">
					<filter.ref ref.id="filter_161193189241300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_DM3725_CortexA"/>
							<attribute key="device.variant" value="Cortex A.DM3725"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_42.projectspec">
					<filter.ref ref.id="filter_161193189241300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_DM3725_CortexA"/>
							<attribute key="device.variant" value="Cortex A.DM3725"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_43.projectspec">
					<filter.ref ref.id="filter_161193189241300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_DM3725_CortexA"/>
							<attribute key="device.variant" value="Cortex A.DM3725"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_40.projectspec">
					<filter.ref ref.id="filter_161193189241300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_DM3725_CortexA"/>
							<attribute key="device.variant" value="Cortex A.DM3725"/>
						</attributes>
					</type>
				</content>
				</contents>
				</contents>
			</contents>
			<contents name="DM3730" desc="DM3730" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_161193190708100">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>DM3730</tag>
					<tag>DaVinci DM37xx</tag>
					</search.tags>
				</filter>
				<contents name="GNU Target Examples" desc="SYS/BIOS Examples for GNU targets." customPageType="genericNote">
				<filter id="filter_161193191242000">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>DM3730</tag>
					<tag>DaVinci DM37xx</tag>
					<tag>GNU Target Examples</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\com_ti_rtsc_sysbios_example_45.projectspec">
					<filter.ref ref.id="filter_161193191242000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_DM3730_CortexA"/>
							<attribute key="device.variant" value="Cortex A.DM3730"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\com_ti_rtsc_sysbios_example_46.projectspec">
					<filter.ref ref.id="filter_161193191242000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_DM3730_CortexA"/>
							<attribute key="device.variant" value="Cortex A.DM3730"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_161193191282400">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>DM3730</tag>
					<tag>DaVinci DM37xx</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_59.projectspec">
					<filter.ref ref.id="filter_161193191282400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_DM3730_CortexA"/>
							<attribute key="device.variant" value="Cortex A.DM3730"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_48.projectspec">
					<filter.ref ref.id="filter_161193191282400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_DM3730_CortexA"/>
							<attribute key="device.variant" value="Cortex A.DM3730"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_49.projectspec">
					<filter.ref ref.id="filter_161193191282400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_DM3730_CortexA"/>
							<attribute key="device.variant" value="Cortex A.DM3730"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_50.projectspec">
					<filter.ref ref.id="filter_161193191282400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_DM3730_CortexA"/>
							<attribute key="device.variant" value="Cortex A.DM3730"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_51.projectspec">
					<filter.ref ref.id="filter_161193191282400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_DM3730_CortexA"/>
							<attribute key="device.variant" value="Cortex A.DM3730"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_52.projectspec">
					<filter.ref ref.id="filter_161193191282400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_DM3730_CortexA"/>
							<attribute key="device.variant" value="Cortex A.DM3730"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_53.projectspec">
					<filter.ref ref.id="filter_161193191282400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_DM3730_CortexA"/>
							<attribute key="device.variant" value="Cortex A.DM3730"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_54.projectspec">
					<filter.ref ref.id="filter_161193191282400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_DM3730_CortexA"/>
							<attribute key="device.variant" value="Cortex A.DM3730"/>
						</attributes>
					</type>
				</content>
				<content name="Semi-Hosting Example" desc="This example leverages Semi-Hosting for printf IO.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_60.projectspec">
					<filter.ref ref.id="filter_161193191282400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="semihost_DM3730_CortexA"/>
							<attribute key="device.variant" value="Cortex A.DM3730"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_56.projectspec">
					<filter.ref ref.id="filter_161193191282400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_DM3730_CortexA"/>
							<attribute key="device.variant" value="Cortex A.DM3730"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_57.projectspec">
					<filter.ref ref.id="filter_161193191282400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_DM3730_CortexA"/>
							<attribute key="device.variant" value="Cortex A.DM3730"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_58.projectspec">
					<filter.ref ref.id="filter_161193191282400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_DM3730_CortexA"/>
							<attribute key="device.variant" value="Cortex A.DM3730"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_55.projectspec">
					<filter.ref ref.id="filter_161193191282400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_DM3730_CortexA"/>
							<attribute key="device.variant" value="Cortex A.DM3730"/>
						</attributes>
					</type>
				</content>
				</contents>
				</contents>
				<contents name="TI Target Examples" desc="SYS/BIOS Examples for TI targets." customPageType="genericNote">
				<filter id="filter_161193191716600">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>DM3730</tag>
					<tag>DaVinci DM37xx</tag>
					<tag>TI Target Examples</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\com_ti_rtsc_sysbios_example_30.projectspec">
					<filter.ref ref.id="filter_161193191716600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_DM3730_CortexA"/>
							<attribute key="device.variant" value="Cortex A.DM3730"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\com_ti_rtsc_sysbios_example_31.projectspec">
					<filter.ref ref.id="filter_161193191716600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_DM3730_CortexA"/>
							<attribute key="device.variant" value="Cortex A.DM3730"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_161193191761500">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>DM3730</tag>
					<tag>DaVinci DM37xx</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_44.projectspec">
					<filter.ref ref.id="filter_161193191761500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_DM3730_CortexA"/>
							<attribute key="device.variant" value="Cortex A.DM3730"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_33.projectspec">
					<filter.ref ref.id="filter_161193191761500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_DM3730_CortexA"/>
							<attribute key="device.variant" value="Cortex A.DM3730"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_34.projectspec">
					<filter.ref ref.id="filter_161193191761500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_DM3730_CortexA"/>
							<attribute key="device.variant" value="Cortex A.DM3730"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_35.projectspec">
					<filter.ref ref.id="filter_161193191761500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_DM3730_CortexA"/>
							<attribute key="device.variant" value="Cortex A.DM3730"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_36.projectspec">
					<filter.ref ref.id="filter_161193191761500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_DM3730_CortexA"/>
							<attribute key="device.variant" value="Cortex A.DM3730"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_37.projectspec">
					<filter.ref ref.id="filter_161193191761500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_DM3730_CortexA"/>
							<attribute key="device.variant" value="Cortex A.DM3730"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_38.projectspec">
					<filter.ref ref.id="filter_161193191761500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_DM3730_CortexA"/>
							<attribute key="device.variant" value="Cortex A.DM3730"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_39.projectspec">
					<filter.ref ref.id="filter_161193191761500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_DM3730_CortexA"/>
							<attribute key="device.variant" value="Cortex A.DM3730"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_41.projectspec">
					<filter.ref ref.id="filter_161193191761500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_DM3730_CortexA"/>
							<attribute key="device.variant" value="Cortex A.DM3730"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_42.projectspec">
					<filter.ref ref.id="filter_161193191761500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_DM3730_CortexA"/>
							<attribute key="device.variant" value="Cortex A.DM3730"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_43.projectspec">
					<filter.ref ref.id="filter_161193191761500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_DM3730_CortexA"/>
							<attribute key="device.variant" value="Cortex A.DM3730"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_40.projectspec">
					<filter.ref ref.id="filter_161193191761500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_DM3730_CortexA"/>
							<attribute key="device.variant" value="Cortex A.DM3730"/>
						</attributes>
					</type>
				</content>
				</contents>
				</contents>
			</contents>
			<contents name="EVMDM3730" desc="EVMDM3730" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_161193191996900">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>EVMDM3730</tag>
					<tag>DaVinci DM37xx</tag>
					</search.tags>
				</filter>
				<contents name="GNU Target Examples" desc="SYS/BIOS Examples for GNU targets." customPageType="genericNote">
				<filter id="filter_161193192505400">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>EVMDM3730</tag>
					<tag>DaVinci DM37xx</tag>
					<tag>GNU Target Examples</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\com_ti_rtsc_sysbios_example_45.projectspec">
					<filter.ref ref.id="filter_161193192505400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_EVMDM3730_CortexA"/>
							<attribute key="device.variant" value="Cortex A.DM3730.EVMDM3730"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\com_ti_rtsc_sysbios_example_46.projectspec">
					<filter.ref ref.id="filter_161193192505400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_EVMDM3730_CortexA"/>
							<attribute key="device.variant" value="Cortex A.DM3730.EVMDM3730"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_161193192543400">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>EVMDM3730</tag>
					<tag>DaVinci DM37xx</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_59.projectspec">
					<filter.ref ref.id="filter_161193192543400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_EVMDM3730_CortexA"/>
							<attribute key="device.variant" value="Cortex A.DM3730.EVMDM3730"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_48.projectspec">
					<filter.ref ref.id="filter_161193192543400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_EVMDM3730_CortexA"/>
							<attribute key="device.variant" value="Cortex A.DM3730.EVMDM3730"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_49.projectspec">
					<filter.ref ref.id="filter_161193192543400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_EVMDM3730_CortexA"/>
							<attribute key="device.variant" value="Cortex A.DM3730.EVMDM3730"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_50.projectspec">
					<filter.ref ref.id="filter_161193192543400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_EVMDM3730_CortexA"/>
							<attribute key="device.variant" value="Cortex A.DM3730.EVMDM3730"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_51.projectspec">
					<filter.ref ref.id="filter_161193192543400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_EVMDM3730_CortexA"/>
							<attribute key="device.variant" value="Cortex A.DM3730.EVMDM3730"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_52.projectspec">
					<filter.ref ref.id="filter_161193192543400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_EVMDM3730_CortexA"/>
							<attribute key="device.variant" value="Cortex A.DM3730.EVMDM3730"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_53.projectspec">
					<filter.ref ref.id="filter_161193192543400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_EVMDM3730_CortexA"/>
							<attribute key="device.variant" value="Cortex A.DM3730.EVMDM3730"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_54.projectspec">
					<filter.ref ref.id="filter_161193192543400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_EVMDM3730_CortexA"/>
							<attribute key="device.variant" value="Cortex A.DM3730.EVMDM3730"/>
						</attributes>
					</type>
				</content>
				<content name="Semi-Hosting Example" desc="This example leverages Semi-Hosting for printf IO.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_60.projectspec">
					<filter.ref ref.id="filter_161193192543400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="semihost_EVMDM3730_CortexA"/>
							<attribute key="device.variant" value="Cortex A.DM3730.EVMDM3730"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_56.projectspec">
					<filter.ref ref.id="filter_161193192543400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_EVMDM3730_CortexA"/>
							<attribute key="device.variant" value="Cortex A.DM3730.EVMDM3730"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_57.projectspec">
					<filter.ref ref.id="filter_161193192543400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_EVMDM3730_CortexA"/>
							<attribute key="device.variant" value="Cortex A.DM3730.EVMDM3730"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_58.projectspec">
					<filter.ref ref.id="filter_161193192543400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_EVMDM3730_CortexA"/>
							<attribute key="device.variant" value="Cortex A.DM3730.EVMDM3730"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_55.projectspec">
					<filter.ref ref.id="filter_161193192543400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_EVMDM3730_CortexA"/>
							<attribute key="device.variant" value="Cortex A.DM3730.EVMDM3730"/>
						</attributes>
					</type>
				</content>
				</contents>
				</contents>
				<contents name="TI Target Examples" desc="SYS/BIOS Examples for TI targets." customPageType="genericNote">
				<filter id="filter_161193192870500">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>EVMDM3730</tag>
					<tag>DaVinci DM37xx</tag>
					<tag>TI Target Examples</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\com_ti_rtsc_sysbios_example_30.projectspec">
					<filter.ref ref.id="filter_161193192870500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_EVMDM3730_CortexA"/>
							<attribute key="device.variant" value="Cortex A.DM3730.EVMDM3730"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\com_ti_rtsc_sysbios_example_31.projectspec">
					<filter.ref ref.id="filter_161193192870500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_EVMDM3730_CortexA"/>
							<attribute key="device.variant" value="Cortex A.DM3730.EVMDM3730"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_161193192906500">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>EVMDM3730</tag>
					<tag>DaVinci DM37xx</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_44.projectspec">
					<filter.ref ref.id="filter_161193192906500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_EVMDM3730_CortexA"/>
							<attribute key="device.variant" value="Cortex A.DM3730.EVMDM3730"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_33.projectspec">
					<filter.ref ref.id="filter_161193192906500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_EVMDM3730_CortexA"/>
							<attribute key="device.variant" value="Cortex A.DM3730.EVMDM3730"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_34.projectspec">
					<filter.ref ref.id="filter_161193192906500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_EVMDM3730_CortexA"/>
							<attribute key="device.variant" value="Cortex A.DM3730.EVMDM3730"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_35.projectspec">
					<filter.ref ref.id="filter_161193192906500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_EVMDM3730_CortexA"/>
							<attribute key="device.variant" value="Cortex A.DM3730.EVMDM3730"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_36.projectspec">
					<filter.ref ref.id="filter_161193192906500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_EVMDM3730_CortexA"/>
							<attribute key="device.variant" value="Cortex A.DM3730.EVMDM3730"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_37.projectspec">
					<filter.ref ref.id="filter_161193192906500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_EVMDM3730_CortexA"/>
							<attribute key="device.variant" value="Cortex A.DM3730.EVMDM3730"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_38.projectspec">
					<filter.ref ref.id="filter_161193192906500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_EVMDM3730_CortexA"/>
							<attribute key="device.variant" value="Cortex A.DM3730.EVMDM3730"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_39.projectspec">
					<filter.ref ref.id="filter_161193192906500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_EVMDM3730_CortexA"/>
							<attribute key="device.variant" value="Cortex A.DM3730.EVMDM3730"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_41.projectspec">
					<filter.ref ref.id="filter_161193192906500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_EVMDM3730_CortexA"/>
							<attribute key="device.variant" value="Cortex A.DM3730.EVMDM3730"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_42.projectspec">
					<filter.ref ref.id="filter_161193192906500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_EVMDM3730_CortexA"/>
							<attribute key="device.variant" value="Cortex A.DM3730.EVMDM3730"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_43.projectspec">
					<filter.ref ref.id="filter_161193192906500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_EVMDM3730_CortexA"/>
							<attribute key="device.variant" value="Cortex A.DM3730.EVMDM3730"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_40.projectspec">
					<filter.ref ref.id="filter_161193192906500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_EVMDM3730_CortexA"/>
							<attribute key="device.variant" value="Cortex A.DM3730.EVMDM3730"/>
						</attributes>
					</type>
				</content>
				</contents>
				</contents>
			</contents>
		</contents>
		<contents name="DaVinci DM3xx ARM9-only device" desc="DaVinci DM3xx ARM9-only device" icon="plugin://icons/obj16/devices.png">
			<contents name="EVMDM355" desc="EVMDM355" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_161193195130400">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>EVMDM355</tag>
					<tag>DaVinci DM3xx ARM9-only device</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_15.projectspec">
					<filter.ref ref.id="filter_161193195130400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_EVMDM355"/>
							<attribute key="device.variant" value="ARM9.TMS320DM355.EVMDM355"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_16.projectspec">
					<filter.ref ref.id="filter_161193195130400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_EVMDM355"/>
							<attribute key="device.variant" value="ARM9.TMS320DM355.EVMDM355"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_161193195244500">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>EVMDM355</tag>
					<tag>DaVinci DM3xx ARM9-only device</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_29.projectspec">
					<filter.ref ref.id="filter_161193195244500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_EVMDM355"/>
							<attribute key="device.variant" value="ARM9.TMS320DM355.EVMDM355"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_18.projectspec">
					<filter.ref ref.id="filter_161193195244500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_EVMDM355"/>
							<attribute key="device.variant" value="ARM9.TMS320DM355.EVMDM355"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_19.projectspec">
					<filter.ref ref.id="filter_161193195244500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_EVMDM355"/>
							<attribute key="device.variant" value="ARM9.TMS320DM355.EVMDM355"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_20.projectspec">
					<filter.ref ref.id="filter_161193195244500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_EVMDM355"/>
							<attribute key="device.variant" value="ARM9.TMS320DM355.EVMDM355"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_21.projectspec">
					<filter.ref ref.id="filter_161193195244500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_EVMDM355"/>
							<attribute key="device.variant" value="ARM9.TMS320DM355.EVMDM355"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_22.projectspec">
					<filter.ref ref.id="filter_161193195244500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_EVMDM355"/>
							<attribute key="device.variant" value="ARM9.TMS320DM355.EVMDM355"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_23.projectspec">
					<filter.ref ref.id="filter_161193195244500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_EVMDM355"/>
							<attribute key="device.variant" value="ARM9.TMS320DM355.EVMDM355"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_24.projectspec">
					<filter.ref ref.id="filter_161193195244500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_EVMDM355"/>
							<attribute key="device.variant" value="ARM9.TMS320DM355.EVMDM355"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_26.projectspec">
					<filter.ref ref.id="filter_161193195244500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_EVMDM355"/>
							<attribute key="device.variant" value="ARM9.TMS320DM355.EVMDM355"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_27.projectspec">
					<filter.ref ref.id="filter_161193195244500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_EVMDM355"/>
							<attribute key="device.variant" value="ARM9.TMS320DM355.EVMDM355"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_28.projectspec">
					<filter.ref ref.id="filter_161193195244500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_EVMDM355"/>
							<attribute key="device.variant" value="ARM9.TMS320DM355.EVMDM355"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_25.projectspec">
					<filter.ref ref.id="filter_161193195244500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_EVMDM355"/>
							<attribute key="device.variant" value="ARM9.TMS320DM355.EVMDM355"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="EVMDM365" desc="EVMDM365" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_161193196867200">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>EVMDM365</tag>
					<tag>DaVinci DM3xx ARM9-only device</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_15.projectspec">
					<filter.ref ref.id="filter_161193196867200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_EVMDM365"/>
							<attribute key="device.variant" value="ARM9.TMS320DM365.EVMDM365"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_16.projectspec">
					<filter.ref ref.id="filter_161193196867200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_EVMDM365"/>
							<attribute key="device.variant" value="ARM9.TMS320DM365.EVMDM365"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_161193196964600">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>EVMDM365</tag>
					<tag>DaVinci DM3xx ARM9-only device</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_29.projectspec">
					<filter.ref ref.id="filter_161193196964600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_EVMDM365"/>
							<attribute key="device.variant" value="ARM9.TMS320DM365.EVMDM365"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_18.projectspec">
					<filter.ref ref.id="filter_161193196964600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_EVMDM365"/>
							<attribute key="device.variant" value="ARM9.TMS320DM365.EVMDM365"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_19.projectspec">
					<filter.ref ref.id="filter_161193196964600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_EVMDM365"/>
							<attribute key="device.variant" value="ARM9.TMS320DM365.EVMDM365"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_20.projectspec">
					<filter.ref ref.id="filter_161193196964600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_EVMDM365"/>
							<attribute key="device.variant" value="ARM9.TMS320DM365.EVMDM365"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_21.projectspec">
					<filter.ref ref.id="filter_161193196964600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_EVMDM365"/>
							<attribute key="device.variant" value="ARM9.TMS320DM365.EVMDM365"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_22.projectspec">
					<filter.ref ref.id="filter_161193196964600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_EVMDM365"/>
							<attribute key="device.variant" value="ARM9.TMS320DM365.EVMDM365"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_23.projectspec">
					<filter.ref ref.id="filter_161193196964600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_EVMDM365"/>
							<attribute key="device.variant" value="ARM9.TMS320DM365.EVMDM365"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_24.projectspec">
					<filter.ref ref.id="filter_161193196964600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_EVMDM365"/>
							<attribute key="device.variant" value="ARM9.TMS320DM365.EVMDM365"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_26.projectspec">
					<filter.ref ref.id="filter_161193196964600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_EVMDM365"/>
							<attribute key="device.variant" value="ARM9.TMS320DM365.EVMDM365"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_27.projectspec">
					<filter.ref ref.id="filter_161193196964600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_EVMDM365"/>
							<attribute key="device.variant" value="ARM9.TMS320DM365.EVMDM365"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_28.projectspec">
					<filter.ref ref.id="filter_161193196964600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_EVMDM365"/>
							<attribute key="device.variant" value="ARM9.TMS320DM365.EVMDM365"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_25.projectspec">
					<filter.ref ref.id="filter_161193196964600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_EVMDM365"/>
							<attribute key="device.variant" value="ARM9.TMS320DM365.EVMDM365"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="TMS320DM355" desc="TMS320DM355" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_161193200883400">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>TMS320DM355</tag>
					<tag>DaVinci DM3xx ARM9-only device</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_15.projectspec">
					<filter.ref ref.id="filter_161193200883400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_TMS320DM355"/>
							<attribute key="device.variant" value="ARM9.TMS320DM355"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_16.projectspec">
					<filter.ref ref.id="filter_161193200883400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_TMS320DM355"/>
							<attribute key="device.variant" value="ARM9.TMS320DM355"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_161193200985200">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>TMS320DM355</tag>
					<tag>DaVinci DM3xx ARM9-only device</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_29.projectspec">
					<filter.ref ref.id="filter_161193200985200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_TMS320DM355"/>
							<attribute key="device.variant" value="ARM9.TMS320DM355"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_18.projectspec">
					<filter.ref ref.id="filter_161193200985200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_TMS320DM355"/>
							<attribute key="device.variant" value="ARM9.TMS320DM355"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_19.projectspec">
					<filter.ref ref.id="filter_161193200985200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_TMS320DM355"/>
							<attribute key="device.variant" value="ARM9.TMS320DM355"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_20.projectspec">
					<filter.ref ref.id="filter_161193200985200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_TMS320DM355"/>
							<attribute key="device.variant" value="ARM9.TMS320DM355"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_21.projectspec">
					<filter.ref ref.id="filter_161193200985200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_TMS320DM355"/>
							<attribute key="device.variant" value="ARM9.TMS320DM355"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_22.projectspec">
					<filter.ref ref.id="filter_161193200985200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_TMS320DM355"/>
							<attribute key="device.variant" value="ARM9.TMS320DM355"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_23.projectspec">
					<filter.ref ref.id="filter_161193200985200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_TMS320DM355"/>
							<attribute key="device.variant" value="ARM9.TMS320DM355"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_24.projectspec">
					<filter.ref ref.id="filter_161193200985200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_TMS320DM355"/>
							<attribute key="device.variant" value="ARM9.TMS320DM355"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_26.projectspec">
					<filter.ref ref.id="filter_161193200985200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_TMS320DM355"/>
							<attribute key="device.variant" value="ARM9.TMS320DM355"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_27.projectspec">
					<filter.ref ref.id="filter_161193200985200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_TMS320DM355"/>
							<attribute key="device.variant" value="ARM9.TMS320DM355"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_28.projectspec">
					<filter.ref ref.id="filter_161193200985200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_TMS320DM355"/>
							<attribute key="device.variant" value="ARM9.TMS320DM355"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_25.projectspec">
					<filter.ref ref.id="filter_161193200985200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_TMS320DM355"/>
							<attribute key="device.variant" value="ARM9.TMS320DM355"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="TMS320DM365" desc="TMS320DM365" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_161193202499200">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>TMS320DM365</tag>
					<tag>DaVinci DM3xx ARM9-only device</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_15.projectspec">
					<filter.ref ref.id="filter_161193202499200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_TMS320DM365"/>
							<attribute key="device.variant" value="ARM9.TMS320DM365"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_16.projectspec">
					<filter.ref ref.id="filter_161193202499200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_TMS320DM365"/>
							<attribute key="device.variant" value="ARM9.TMS320DM365"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_161193202594400">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>TMS320DM365</tag>
					<tag>DaVinci DM3xx ARM9-only device</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_29.projectspec">
					<filter.ref ref.id="filter_161193202594400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_TMS320DM365"/>
							<attribute key="device.variant" value="ARM9.TMS320DM365"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_18.projectspec">
					<filter.ref ref.id="filter_161193202594400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_TMS320DM365"/>
							<attribute key="device.variant" value="ARM9.TMS320DM365"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_19.projectspec">
					<filter.ref ref.id="filter_161193202594400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_TMS320DM365"/>
							<attribute key="device.variant" value="ARM9.TMS320DM365"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_20.projectspec">
					<filter.ref ref.id="filter_161193202594400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_TMS320DM365"/>
							<attribute key="device.variant" value="ARM9.TMS320DM365"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_21.projectspec">
					<filter.ref ref.id="filter_161193202594400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_TMS320DM365"/>
							<attribute key="device.variant" value="ARM9.TMS320DM365"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_22.projectspec">
					<filter.ref ref.id="filter_161193202594400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_TMS320DM365"/>
							<attribute key="device.variant" value="ARM9.TMS320DM365"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_23.projectspec">
					<filter.ref ref.id="filter_161193202594400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_TMS320DM365"/>
							<attribute key="device.variant" value="ARM9.TMS320DM365"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_24.projectspec">
					<filter.ref ref.id="filter_161193202594400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_TMS320DM365"/>
							<attribute key="device.variant" value="ARM9.TMS320DM365"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_26.projectspec">
					<filter.ref ref.id="filter_161193202594400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_TMS320DM365"/>
							<attribute key="device.variant" value="ARM9.TMS320DM365"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_27.projectspec">
					<filter.ref ref.id="filter_161193202594400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_TMS320DM365"/>
							<attribute key="device.variant" value="ARM9.TMS320DM365"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_28.projectspec">
					<filter.ref ref.id="filter_161193202594400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_TMS320DM365"/>
							<attribute key="device.variant" value="ARM9.TMS320DM365"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_25.projectspec">
					<filter.ref ref.id="filter_161193202594400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_TMS320DM365"/>
							<attribute key="device.variant" value="ARM9.TMS320DM365"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
		</contents>
		<contents name="DaVinci DM644x" desc="DaVinci DM644x" icon="plugin://icons/obj16/devices.png">
			<contents name="EVMDM6446" desc="EVMDM6446" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_161193205085500">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>EVMDM6446</tag>
					<tag>DaVinci DM644x</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_15.projectspec">
					<filter.ref ref.id="filter_161193205085500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_EVMDM6446_ARM9"/>
							<attribute key="device.variant" value="ARM9.TMS320DM6446.EVMDM6446"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_16.projectspec">
					<filter.ref ref.id="filter_161193205085500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_EVMDM6446_ARM9"/>
							<attribute key="device.variant" value="ARM9.TMS320DM6446.EVMDM6446"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_161193205194100">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>EVMDM6446</tag>
					<tag>DaVinci DM644x</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_29.projectspec">
					<filter.ref ref.id="filter_161193205194100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_EVMDM6446_ARM9"/>
							<attribute key="device.variant" value="ARM9.TMS320DM6446.EVMDM6446"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_18.projectspec">
					<filter.ref ref.id="filter_161193205194100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_EVMDM6446_ARM9"/>
							<attribute key="device.variant" value="ARM9.TMS320DM6446.EVMDM6446"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_19.projectspec">
					<filter.ref ref.id="filter_161193205194100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_EVMDM6446_ARM9"/>
							<attribute key="device.variant" value="ARM9.TMS320DM6446.EVMDM6446"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_20.projectspec">
					<filter.ref ref.id="filter_161193205194100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_EVMDM6446_ARM9"/>
							<attribute key="device.variant" value="ARM9.TMS320DM6446.EVMDM6446"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_21.projectspec">
					<filter.ref ref.id="filter_161193205194100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_EVMDM6446_ARM9"/>
							<attribute key="device.variant" value="ARM9.TMS320DM6446.EVMDM6446"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_22.projectspec">
					<filter.ref ref.id="filter_161193205194100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_EVMDM6446_ARM9"/>
							<attribute key="device.variant" value="ARM9.TMS320DM6446.EVMDM6446"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_23.projectspec">
					<filter.ref ref.id="filter_161193205194100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_EVMDM6446_ARM9"/>
							<attribute key="device.variant" value="ARM9.TMS320DM6446.EVMDM6446"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_24.projectspec">
					<filter.ref ref.id="filter_161193205194100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_EVMDM6446_ARM9"/>
							<attribute key="device.variant" value="ARM9.TMS320DM6446.EVMDM6446"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_26.projectspec">
					<filter.ref ref.id="filter_161193205194100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_EVMDM6446_ARM9"/>
							<attribute key="device.variant" value="ARM9.TMS320DM6446.EVMDM6446"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_27.projectspec">
					<filter.ref ref.id="filter_161193205194100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_EVMDM6446_ARM9"/>
							<attribute key="device.variant" value="ARM9.TMS320DM6446.EVMDM6446"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_28.projectspec">
					<filter.ref ref.id="filter_161193205194100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_EVMDM6446_ARM9"/>
							<attribute key="device.variant" value="ARM9.TMS320DM6446.EVMDM6446"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_25.projectspec">
					<filter.ref ref.id="filter_161193205194100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_EVMDM6446_ARM9"/>
							<attribute key="device.variant" value="ARM9.TMS320DM6446.EVMDM6446"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="TMS320DM6441" desc="TMS320DM6441" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_161193206060100">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>TMS320DM6441</tag>
					<tag>DaVinci DM644x</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_15.projectspec">
					<filter.ref ref.id="filter_161193206060100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_TMS320DM6441_ARM9"/>
							<attribute key="device.variant" value="ARM9.TMS320DM6441"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_16.projectspec">
					<filter.ref ref.id="filter_161193206060100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_TMS320DM6441_ARM9"/>
							<attribute key="device.variant" value="ARM9.TMS320DM6441"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_161193206155700">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>TMS320DM6441</tag>
					<tag>DaVinci DM644x</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_29.projectspec">
					<filter.ref ref.id="filter_161193206155700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_TMS320DM6441_ARM9"/>
							<attribute key="device.variant" value="ARM9.TMS320DM6441"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_18.projectspec">
					<filter.ref ref.id="filter_161193206155700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_TMS320DM6441_ARM9"/>
							<attribute key="device.variant" value="ARM9.TMS320DM6441"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_19.projectspec">
					<filter.ref ref.id="filter_161193206155700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_TMS320DM6441_ARM9"/>
							<attribute key="device.variant" value="ARM9.TMS320DM6441"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_20.projectspec">
					<filter.ref ref.id="filter_161193206155700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_TMS320DM6441_ARM9"/>
							<attribute key="device.variant" value="ARM9.TMS320DM6441"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_21.projectspec">
					<filter.ref ref.id="filter_161193206155700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_TMS320DM6441_ARM9"/>
							<attribute key="device.variant" value="ARM9.TMS320DM6441"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_22.projectspec">
					<filter.ref ref.id="filter_161193206155700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_TMS320DM6441_ARM9"/>
							<attribute key="device.variant" value="ARM9.TMS320DM6441"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_23.projectspec">
					<filter.ref ref.id="filter_161193206155700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_TMS320DM6441_ARM9"/>
							<attribute key="device.variant" value="ARM9.TMS320DM6441"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_24.projectspec">
					<filter.ref ref.id="filter_161193206155700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_TMS320DM6441_ARM9"/>
							<attribute key="device.variant" value="ARM9.TMS320DM6441"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_26.projectspec">
					<filter.ref ref.id="filter_161193206155700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_TMS320DM6441_ARM9"/>
							<attribute key="device.variant" value="ARM9.TMS320DM6441"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_27.projectspec">
					<filter.ref ref.id="filter_161193206155700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_TMS320DM6441_ARM9"/>
							<attribute key="device.variant" value="ARM9.TMS320DM6441"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_28.projectspec">
					<filter.ref ref.id="filter_161193206155700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_TMS320DM6441_ARM9"/>
							<attribute key="device.variant" value="ARM9.TMS320DM6441"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_25.projectspec">
					<filter.ref ref.id="filter_161193206155700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_TMS320DM6441_ARM9"/>
							<attribute key="device.variant" value="ARM9.TMS320DM6441"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="TMS320DM6443" desc="TMS320DM6443" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_161193206925300">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>TMS320DM6443</tag>
					<tag>DaVinci DM644x</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_15.projectspec">
					<filter.ref ref.id="filter_161193206925300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_TMS320DM6443_ARM9"/>
							<attribute key="device.variant" value="ARM9.TMS320DM6443"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_16.projectspec">
					<filter.ref ref.id="filter_161193206925300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_TMS320DM6443_ARM9"/>
							<attribute key="device.variant" value="ARM9.TMS320DM6443"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_161193207019000">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>TMS320DM6443</tag>
					<tag>DaVinci DM644x</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_29.projectspec">
					<filter.ref ref.id="filter_161193207019000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_TMS320DM6443_ARM9"/>
							<attribute key="device.variant" value="ARM9.TMS320DM6443"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_18.projectspec">
					<filter.ref ref.id="filter_161193207019000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_TMS320DM6443_ARM9"/>
							<attribute key="device.variant" value="ARM9.TMS320DM6443"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_19.projectspec">
					<filter.ref ref.id="filter_161193207019000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_TMS320DM6443_ARM9"/>
							<attribute key="device.variant" value="ARM9.TMS320DM6443"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_20.projectspec">
					<filter.ref ref.id="filter_161193207019000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_TMS320DM6443_ARM9"/>
							<attribute key="device.variant" value="ARM9.TMS320DM6443"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_21.projectspec">
					<filter.ref ref.id="filter_161193207019000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_TMS320DM6443_ARM9"/>
							<attribute key="device.variant" value="ARM9.TMS320DM6443"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_22.projectspec">
					<filter.ref ref.id="filter_161193207019000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_TMS320DM6443_ARM9"/>
							<attribute key="device.variant" value="ARM9.TMS320DM6443"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_23.projectspec">
					<filter.ref ref.id="filter_161193207019000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_TMS320DM6443_ARM9"/>
							<attribute key="device.variant" value="ARM9.TMS320DM6443"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_24.projectspec">
					<filter.ref ref.id="filter_161193207019000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_TMS320DM6443_ARM9"/>
							<attribute key="device.variant" value="ARM9.TMS320DM6443"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_26.projectspec">
					<filter.ref ref.id="filter_161193207019000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_TMS320DM6443_ARM9"/>
							<attribute key="device.variant" value="ARM9.TMS320DM6443"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_27.projectspec">
					<filter.ref ref.id="filter_161193207019000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_TMS320DM6443_ARM9"/>
							<attribute key="device.variant" value="ARM9.TMS320DM6443"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_28.projectspec">
					<filter.ref ref.id="filter_161193207019000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_TMS320DM6443_ARM9"/>
							<attribute key="device.variant" value="ARM9.TMS320DM6443"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_25.projectspec">
					<filter.ref ref.id="filter_161193207019000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_TMS320DM6443_ARM9"/>
							<attribute key="device.variant" value="ARM9.TMS320DM6443"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="TMS320DM6446" desc="TMS320DM6446" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_161193210787400">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>TMS320DM6446</tag>
					<tag>DaVinci DM644x</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_15.projectspec">
					<filter.ref ref.id="filter_161193210787400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_TMS320DM6446_ARM9"/>
							<attribute key="device.variant" value="ARM9.TMS320DM6446"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_16.projectspec">
					<filter.ref ref.id="filter_161193210787400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_TMS320DM6446_ARM9"/>
							<attribute key="device.variant" value="ARM9.TMS320DM6446"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_161193210931000">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>TMS320DM6446</tag>
					<tag>DaVinci DM644x</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_29.projectspec">
					<filter.ref ref.id="filter_161193210931000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_TMS320DM6446_ARM9"/>
							<attribute key="device.variant" value="ARM9.TMS320DM6446"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_18.projectspec">
					<filter.ref ref.id="filter_161193210931000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_TMS320DM6446_ARM9"/>
							<attribute key="device.variant" value="ARM9.TMS320DM6446"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_19.projectspec">
					<filter.ref ref.id="filter_161193210931000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_TMS320DM6446_ARM9"/>
							<attribute key="device.variant" value="ARM9.TMS320DM6446"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_20.projectspec">
					<filter.ref ref.id="filter_161193210931000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_TMS320DM6446_ARM9"/>
							<attribute key="device.variant" value="ARM9.TMS320DM6446"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_21.projectspec">
					<filter.ref ref.id="filter_161193210931000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_TMS320DM6446_ARM9"/>
							<attribute key="device.variant" value="ARM9.TMS320DM6446"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_22.projectspec">
					<filter.ref ref.id="filter_161193210931000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_TMS320DM6446_ARM9"/>
							<attribute key="device.variant" value="ARM9.TMS320DM6446"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_23.projectspec">
					<filter.ref ref.id="filter_161193210931000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_TMS320DM6446_ARM9"/>
							<attribute key="device.variant" value="ARM9.TMS320DM6446"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_24.projectspec">
					<filter.ref ref.id="filter_161193210931000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_TMS320DM6446_ARM9"/>
							<attribute key="device.variant" value="ARM9.TMS320DM6446"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_26.projectspec">
					<filter.ref ref.id="filter_161193210931000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_TMS320DM6446_ARM9"/>
							<attribute key="device.variant" value="ARM9.TMS320DM6446"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_27.projectspec">
					<filter.ref ref.id="filter_161193210931000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_TMS320DM6446_ARM9"/>
							<attribute key="device.variant" value="ARM9.TMS320DM6446"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_28.projectspec">
					<filter.ref ref.id="filter_161193210931000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_TMS320DM6446_ARM9"/>
							<attribute key="device.variant" value="ARM9.TMS320DM6446"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_25.projectspec">
					<filter.ref ref.id="filter_161193210931000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_TMS320DM6446_ARM9"/>
							<attribute key="device.variant" value="ARM9.TMS320DM6446"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
		</contents>
		<contents name="DaVinci DM646x" desc="DaVinci DM646x" icon="plugin://icons/obj16/devices.png">
			<contents name="EVMDM6467" desc="EVMDM6467" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_161193211974800">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>EVMDM6467</tag>
					<tag>DaVinci DM646x</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_15.projectspec">
					<filter.ref ref.id="filter_161193211974800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_EVMDM6467_ARM9"/>
							<attribute key="device.variant" value="ARM9.TMS320DM6467.EVMDM6467"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_16.projectspec">
					<filter.ref ref.id="filter_161193211974800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_EVMDM6467_ARM9"/>
							<attribute key="device.variant" value="ARM9.TMS320DM6467.EVMDM6467"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_161193212096900">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>EVMDM6467</tag>
					<tag>DaVinci DM646x</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_29.projectspec">
					<filter.ref ref.id="filter_161193212096900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_EVMDM6467_ARM9"/>
							<attribute key="device.variant" value="ARM9.TMS320DM6467.EVMDM6467"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_18.projectspec">
					<filter.ref ref.id="filter_161193212096900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_EVMDM6467_ARM9"/>
							<attribute key="device.variant" value="ARM9.TMS320DM6467.EVMDM6467"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_19.projectspec">
					<filter.ref ref.id="filter_161193212096900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_EVMDM6467_ARM9"/>
							<attribute key="device.variant" value="ARM9.TMS320DM6467.EVMDM6467"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_20.projectspec">
					<filter.ref ref.id="filter_161193212096900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_EVMDM6467_ARM9"/>
							<attribute key="device.variant" value="ARM9.TMS320DM6467.EVMDM6467"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_21.projectspec">
					<filter.ref ref.id="filter_161193212096900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_EVMDM6467_ARM9"/>
							<attribute key="device.variant" value="ARM9.TMS320DM6467.EVMDM6467"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_22.projectspec">
					<filter.ref ref.id="filter_161193212096900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_EVMDM6467_ARM9"/>
							<attribute key="device.variant" value="ARM9.TMS320DM6467.EVMDM6467"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_23.projectspec">
					<filter.ref ref.id="filter_161193212096900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_EVMDM6467_ARM9"/>
							<attribute key="device.variant" value="ARM9.TMS320DM6467.EVMDM6467"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_24.projectspec">
					<filter.ref ref.id="filter_161193212096900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_EVMDM6467_ARM9"/>
							<attribute key="device.variant" value="ARM9.TMS320DM6467.EVMDM6467"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_26.projectspec">
					<filter.ref ref.id="filter_161193212096900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_EVMDM6467_ARM9"/>
							<attribute key="device.variant" value="ARM9.TMS320DM6467.EVMDM6467"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_27.projectspec">
					<filter.ref ref.id="filter_161193212096900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_EVMDM6467_ARM9"/>
							<attribute key="device.variant" value="ARM9.TMS320DM6467.EVMDM6467"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_28.projectspec">
					<filter.ref ref.id="filter_161193212096900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_EVMDM6467_ARM9"/>
							<attribute key="device.variant" value="ARM9.TMS320DM6467.EVMDM6467"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_25.projectspec">
					<filter.ref ref.id="filter_161193212096900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_EVMDM6467_ARM9"/>
							<attribute key="device.variant" value="ARM9.TMS320DM6467.EVMDM6467"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="EVMDM6467T" desc="EVMDM6467T" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_161193213095000">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>EVMDM6467T</tag>
					<tag>DaVinci DM646x</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_15.projectspec">
					<filter.ref ref.id="filter_161193213095000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_EVMDM6467T_ARM9"/>
							<attribute key="device.variant" value="ARM9.TMS320DM6467.EVMDM6467T"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_16.projectspec">
					<filter.ref ref.id="filter_161193213095000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_EVMDM6467T_ARM9"/>
							<attribute key="device.variant" value="ARM9.TMS320DM6467.EVMDM6467T"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_161193213219200">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>EVMDM6467T</tag>
					<tag>DaVinci DM646x</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_29.projectspec">
					<filter.ref ref.id="filter_161193213219200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_EVMDM6467T_ARM9"/>
							<attribute key="device.variant" value="ARM9.TMS320DM6467.EVMDM6467T"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_18.projectspec">
					<filter.ref ref.id="filter_161193213219200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_EVMDM6467T_ARM9"/>
							<attribute key="device.variant" value="ARM9.TMS320DM6467.EVMDM6467T"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_19.projectspec">
					<filter.ref ref.id="filter_161193213219200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_EVMDM6467T_ARM9"/>
							<attribute key="device.variant" value="ARM9.TMS320DM6467.EVMDM6467T"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_20.projectspec">
					<filter.ref ref.id="filter_161193213219200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_EVMDM6467T_ARM9"/>
							<attribute key="device.variant" value="ARM9.TMS320DM6467.EVMDM6467T"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_21.projectspec">
					<filter.ref ref.id="filter_161193213219200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_EVMDM6467T_ARM9"/>
							<attribute key="device.variant" value="ARM9.TMS320DM6467.EVMDM6467T"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_22.projectspec">
					<filter.ref ref.id="filter_161193213219200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_EVMDM6467T_ARM9"/>
							<attribute key="device.variant" value="ARM9.TMS320DM6467.EVMDM6467T"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_23.projectspec">
					<filter.ref ref.id="filter_161193213219200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_EVMDM6467T_ARM9"/>
							<attribute key="device.variant" value="ARM9.TMS320DM6467.EVMDM6467T"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_24.projectspec">
					<filter.ref ref.id="filter_161193213219200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_EVMDM6467T_ARM9"/>
							<attribute key="device.variant" value="ARM9.TMS320DM6467.EVMDM6467T"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_26.projectspec">
					<filter.ref ref.id="filter_161193213219200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_EVMDM6467T_ARM9"/>
							<attribute key="device.variant" value="ARM9.TMS320DM6467.EVMDM6467T"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_27.projectspec">
					<filter.ref ref.id="filter_161193213219200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_EVMDM6467T_ARM9"/>
							<attribute key="device.variant" value="ARM9.TMS320DM6467.EVMDM6467T"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_28.projectspec">
					<filter.ref ref.id="filter_161193213219200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_EVMDM6467T_ARM9"/>
							<attribute key="device.variant" value="ARM9.TMS320DM6467.EVMDM6467T"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_25.projectspec">
					<filter.ref ref.id="filter_161193213219200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_EVMDM6467T_ARM9"/>
							<attribute key="device.variant" value="ARM9.TMS320DM6467.EVMDM6467T"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="TMS320DM6467" desc="TMS320DM6467" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_161193214165700">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>TMS320DM6467</tag>
					<tag>DaVinci DM646x</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_15.projectspec">
					<filter.ref ref.id="filter_161193214165700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_TMS320DM6467_ARM9"/>
							<attribute key="device.variant" value="ARM9.TMS320DM6467"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_16.projectspec">
					<filter.ref ref.id="filter_161193214165700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_TMS320DM6467_ARM9"/>
							<attribute key="device.variant" value="ARM9.TMS320DM6467"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_161193214264800">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>TMS320DM6467</tag>
					<tag>DaVinci DM646x</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_29.projectspec">
					<filter.ref ref.id="filter_161193214264800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_TMS320DM6467_ARM9"/>
							<attribute key="device.variant" value="ARM9.TMS320DM6467"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_18.projectspec">
					<filter.ref ref.id="filter_161193214264800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_TMS320DM6467_ARM9"/>
							<attribute key="device.variant" value="ARM9.TMS320DM6467"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_19.projectspec">
					<filter.ref ref.id="filter_161193214264800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_TMS320DM6467_ARM9"/>
							<attribute key="device.variant" value="ARM9.TMS320DM6467"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_20.projectspec">
					<filter.ref ref.id="filter_161193214264800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_TMS320DM6467_ARM9"/>
							<attribute key="device.variant" value="ARM9.TMS320DM6467"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_21.projectspec">
					<filter.ref ref.id="filter_161193214264800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_TMS320DM6467_ARM9"/>
							<attribute key="device.variant" value="ARM9.TMS320DM6467"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_22.projectspec">
					<filter.ref ref.id="filter_161193214264800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_TMS320DM6467_ARM9"/>
							<attribute key="device.variant" value="ARM9.TMS320DM6467"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_23.projectspec">
					<filter.ref ref.id="filter_161193214264800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_TMS320DM6467_ARM9"/>
							<attribute key="device.variant" value="ARM9.TMS320DM6467"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_24.projectspec">
					<filter.ref ref.id="filter_161193214264800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_TMS320DM6467_ARM9"/>
							<attribute key="device.variant" value="ARM9.TMS320DM6467"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_26.projectspec">
					<filter.ref ref.id="filter_161193214264800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_TMS320DM6467_ARM9"/>
							<attribute key="device.variant" value="ARM9.TMS320DM6467"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_27.projectspec">
					<filter.ref ref.id="filter_161193214264800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_TMS320DM6467_ARM9"/>
							<attribute key="device.variant" value="ARM9.TMS320DM6467"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_28.projectspec">
					<filter.ref ref.id="filter_161193214264800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_TMS320DM6467_ARM9"/>
							<attribute key="device.variant" value="ARM9.TMS320DM6467"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_25.projectspec">
					<filter.ref ref.id="filter_161193214264800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_TMS320DM6467_ARM9"/>
							<attribute key="device.variant" value="ARM9.TMS320DM6467"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
		</contents>
		<contents name="DaVinci DM81xx" desc="DaVinci DM81xx" icon="plugin://icons/obj16/devices.png">
			<contents name="DM8146" desc="DM8146" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_161193216479200">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>DM8146</tag>
					<tag>DaVinci DM81xx</tag>
					</search.tags>
				</filter>
				<contents name="GNU Target Examples" desc="SYS/BIOS Examples for GNU targets." customPageType="genericNote">
				<filter id="filter_161193217004200">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>DM8146</tag>
					<tag>DaVinci DM81xx</tag>
					<tag>GNU Target Examples</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\com_ti_rtsc_sysbios_example_45.projectspec">
					<filter.ref ref.id="filter_161193217004200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_DM8146_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8146"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\com_ti_rtsc_sysbios_example_46.projectspec">
					<filter.ref ref.id="filter_161193217004200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_DM8146_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8146"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_161193217039600">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>DM8146</tag>
					<tag>DaVinci DM81xx</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_59.projectspec">
					<filter.ref ref.id="filter_161193217039600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_DM8146_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8146"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_48.projectspec">
					<filter.ref ref.id="filter_161193217039600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_DM8146_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8146"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_49.projectspec">
					<filter.ref ref.id="filter_161193217039600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_DM8146_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8146"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_50.projectspec">
					<filter.ref ref.id="filter_161193217039600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_DM8146_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8146"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_51.projectspec">
					<filter.ref ref.id="filter_161193217039600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_DM8146_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8146"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_52.projectspec">
					<filter.ref ref.id="filter_161193217039600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_DM8146_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8146"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_53.projectspec">
					<filter.ref ref.id="filter_161193217039600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_DM8146_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8146"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_54.projectspec">
					<filter.ref ref.id="filter_161193217039600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_DM8146_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8146"/>
						</attributes>
					</type>
				</content>
				<content name="Semi-Hosting Example" desc="This example leverages Semi-Hosting for printf IO.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_60.projectspec">
					<filter.ref ref.id="filter_161193217039600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="semihost_DM8146_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8146"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_56.projectspec">
					<filter.ref ref.id="filter_161193217039600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_DM8146_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8146"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_57.projectspec">
					<filter.ref ref.id="filter_161193217039600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_DM8146_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8146"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_58.projectspec">
					<filter.ref ref.id="filter_161193217039600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_DM8146_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8146"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_55.projectspec">
					<filter.ref ref.id="filter_161193217039600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_DM8146_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8146"/>
						</attributes>
					</type>
				</content>
				</contents>
				</contents>
				<contents name="TI Target Examples" desc="SYS/BIOS Examples for TI targets." customPageType="genericNote">
				<filter id="filter_161193217375000">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>DM8146</tag>
					<tag>DaVinci DM81xx</tag>
					<tag>TI Target Examples</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\com_ti_rtsc_sysbios_example_30.projectspec">
					<filter.ref ref.id="filter_161193217375000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_DM8146_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8146"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\com_ti_rtsc_sysbios_example_31.projectspec">
					<filter.ref ref.id="filter_161193217375000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_DM8146_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8146"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_161193217410200">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>DM8146</tag>
					<tag>DaVinci DM81xx</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_44.projectspec">
					<filter.ref ref.id="filter_161193217410200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_DM8146_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8146"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_33.projectspec">
					<filter.ref ref.id="filter_161193217410200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_DM8146_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8146"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_34.projectspec">
					<filter.ref ref.id="filter_161193217410200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_DM8146_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8146"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_35.projectspec">
					<filter.ref ref.id="filter_161193217410200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_DM8146_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8146"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_36.projectspec">
					<filter.ref ref.id="filter_161193217410200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_DM8146_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8146"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_37.projectspec">
					<filter.ref ref.id="filter_161193217410200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_DM8146_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8146"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_38.projectspec">
					<filter.ref ref.id="filter_161193217410200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_DM8146_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8146"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_39.projectspec">
					<filter.ref ref.id="filter_161193217410200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_DM8146_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8146"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_41.projectspec">
					<filter.ref ref.id="filter_161193217410200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_DM8146_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8146"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_42.projectspec">
					<filter.ref ref.id="filter_161193217410200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_DM8146_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8146"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_43.projectspec">
					<filter.ref ref.id="filter_161193217410200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_DM8146_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8146"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_40.projectspec">
					<filter.ref ref.id="filter_161193217410200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_DM8146_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8146"/>
						</attributes>
					</type>
				</content>
				</contents>
				</contents>
			</contents>
			<contents name="DM8147" desc="DM8147" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_161193217652600">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>DM8147</tag>
					<tag>DaVinci DM81xx</tag>
					</search.tags>
				</filter>
				<contents name="GNU Target Examples" desc="SYS/BIOS Examples for GNU targets." customPageType="genericNote">
				<filter id="filter_161193218156600">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>DM8147</tag>
					<tag>DaVinci DM81xx</tag>
					<tag>GNU Target Examples</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\com_ti_rtsc_sysbios_example_45.projectspec">
					<filter.ref ref.id="filter_161193218156600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_DM8147_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8147"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\com_ti_rtsc_sysbios_example_46.projectspec">
					<filter.ref ref.id="filter_161193218156600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_DM8147_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8147"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_161193218190600">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>DM8147</tag>
					<tag>DaVinci DM81xx</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_59.projectspec">
					<filter.ref ref.id="filter_161193218190600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_DM8147_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8147"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_48.projectspec">
					<filter.ref ref.id="filter_161193218190600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_DM8147_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8147"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_49.projectspec">
					<filter.ref ref.id="filter_161193218190600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_DM8147_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8147"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_50.projectspec">
					<filter.ref ref.id="filter_161193218190600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_DM8147_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8147"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_51.projectspec">
					<filter.ref ref.id="filter_161193218190600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_DM8147_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8147"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_52.projectspec">
					<filter.ref ref.id="filter_161193218190600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_DM8147_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8147"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_53.projectspec">
					<filter.ref ref.id="filter_161193218190600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_DM8147_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8147"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_54.projectspec">
					<filter.ref ref.id="filter_161193218190600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_DM8147_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8147"/>
						</attributes>
					</type>
				</content>
				<content name="Semi-Hosting Example" desc="This example leverages Semi-Hosting for printf IO.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_60.projectspec">
					<filter.ref ref.id="filter_161193218190600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="semihost_DM8147_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8147"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_56.projectspec">
					<filter.ref ref.id="filter_161193218190600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_DM8147_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8147"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_57.projectspec">
					<filter.ref ref.id="filter_161193218190600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_DM8147_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8147"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_58.projectspec">
					<filter.ref ref.id="filter_161193218190600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_DM8147_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8147"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_55.projectspec">
					<filter.ref ref.id="filter_161193218190600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_DM8147_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8147"/>
						</attributes>
					</type>
				</content>
				</contents>
				</contents>
				<contents name="TI Target Examples" desc="SYS/BIOS Examples for TI targets." customPageType="genericNote">
				<filter id="filter_161193218504900">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>DM8147</tag>
					<tag>DaVinci DM81xx</tag>
					<tag>TI Target Examples</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\com_ti_rtsc_sysbios_example_30.projectspec">
					<filter.ref ref.id="filter_161193218504900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_DM8147_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8147"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\com_ti_rtsc_sysbios_example_31.projectspec">
					<filter.ref ref.id="filter_161193218504900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_DM8147_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8147"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_161193218537500">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>DM8147</tag>
					<tag>DaVinci DM81xx</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_44.projectspec">
					<filter.ref ref.id="filter_161193218537500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_DM8147_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8147"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_33.projectspec">
					<filter.ref ref.id="filter_161193218537500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_DM8147_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8147"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_34.projectspec">
					<filter.ref ref.id="filter_161193218537500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_DM8147_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8147"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_35.projectspec">
					<filter.ref ref.id="filter_161193218537500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_DM8147_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8147"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_36.projectspec">
					<filter.ref ref.id="filter_161193218537500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_DM8147_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8147"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_37.projectspec">
					<filter.ref ref.id="filter_161193218537500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_DM8147_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8147"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_38.projectspec">
					<filter.ref ref.id="filter_161193218537500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_DM8147_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8147"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_39.projectspec">
					<filter.ref ref.id="filter_161193218537500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_DM8147_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8147"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_41.projectspec">
					<filter.ref ref.id="filter_161193218537500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_DM8147_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8147"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_42.projectspec">
					<filter.ref ref.id="filter_161193218537500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_DM8147_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8147"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_43.projectspec">
					<filter.ref ref.id="filter_161193218537500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_DM8147_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8147"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_40.projectspec">
					<filter.ref ref.id="filter_161193218537500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_DM8147_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8147"/>
						</attributes>
					</type>
				</content>
				</contents>
				</contents>
			</contents>
			<contents name="DM8148" desc="DM8148" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_161193219779600">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>DM8148</tag>
					<tag>DaVinci DM81xx</tag>
					</search.tags>
				</filter>
				<contents name="GNU Target Examples" desc="SYS/BIOS Examples for GNU targets." customPageType="genericNote">
				<filter id="filter_161193220387500">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>DM8148</tag>
					<tag>DaVinci DM81xx</tag>
					<tag>GNU Target Examples</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\com_ti_rtsc_sysbios_example_45.projectspec">
					<filter.ref ref.id="filter_161193220387500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_DM8148_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8148"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\com_ti_rtsc_sysbios_example_46.projectspec">
					<filter.ref ref.id="filter_161193220387500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_DM8148_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8148"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_161193220441900">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>DM8148</tag>
					<tag>DaVinci DM81xx</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_59.projectspec">
					<filter.ref ref.id="filter_161193220441900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_DM8148_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8148"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_48.projectspec">
					<filter.ref ref.id="filter_161193220441900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_DM8148_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8148"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_49.projectspec">
					<filter.ref ref.id="filter_161193220441900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_DM8148_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8148"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_50.projectspec">
					<filter.ref ref.id="filter_161193220441900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_DM8148_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8148"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_51.projectspec">
					<filter.ref ref.id="filter_161193220441900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_DM8148_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8148"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_52.projectspec">
					<filter.ref ref.id="filter_161193220441900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_DM8148_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8148"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_53.projectspec">
					<filter.ref ref.id="filter_161193220441900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_DM8148_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8148"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_54.projectspec">
					<filter.ref ref.id="filter_161193220441900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_DM8148_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8148"/>
						</attributes>
					</type>
				</content>
				<content name="Semi-Hosting Example" desc="This example leverages Semi-Hosting for printf IO.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_60.projectspec">
					<filter.ref ref.id="filter_161193220441900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="semihost_DM8148_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8148"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_56.projectspec">
					<filter.ref ref.id="filter_161193220441900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_DM8148_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8148"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_57.projectspec">
					<filter.ref ref.id="filter_161193220441900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_DM8148_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8148"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_58.projectspec">
					<filter.ref ref.id="filter_161193220441900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_DM8148_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8148"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_55.projectspec">
					<filter.ref ref.id="filter_161193220441900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_DM8148_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8148"/>
						</attributes>
					</type>
				</content>
				</contents>
				</contents>
				<contents name="TI Target Examples" desc="SYS/BIOS Examples for TI targets." customPageType="genericNote">
				<filter id="filter_161193220826600">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>DM8148</tag>
					<tag>DaVinci DM81xx</tag>
					<tag>TI Target Examples</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\com_ti_rtsc_sysbios_example_30.projectspec">
					<filter.ref ref.id="filter_161193220826600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_DM8148_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8148"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\com_ti_rtsc_sysbios_example_31.projectspec">
					<filter.ref ref.id="filter_161193220826600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_DM8148_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8148"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_161193220868200">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>DM8148</tag>
					<tag>DaVinci DM81xx</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_44.projectspec">
					<filter.ref ref.id="filter_161193220868200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_DM8148_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8148"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_33.projectspec">
					<filter.ref ref.id="filter_161193220868200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_DM8148_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8148"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_34.projectspec">
					<filter.ref ref.id="filter_161193220868200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_DM8148_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8148"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_35.projectspec">
					<filter.ref ref.id="filter_161193220868200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_DM8148_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8148"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_36.projectspec">
					<filter.ref ref.id="filter_161193220868200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_DM8148_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8148"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_37.projectspec">
					<filter.ref ref.id="filter_161193220868200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_DM8148_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8148"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_38.projectspec">
					<filter.ref ref.id="filter_161193220868200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_DM8148_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8148"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_39.projectspec">
					<filter.ref ref.id="filter_161193220868200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_DM8148_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8148"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_41.projectspec">
					<filter.ref ref.id="filter_161193220868200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_DM8148_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8148"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_42.projectspec">
					<filter.ref ref.id="filter_161193220868200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_DM8148_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8148"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_43.projectspec">
					<filter.ref ref.id="filter_161193220868200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_DM8148_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8148"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_40.projectspec">
					<filter.ref ref.id="filter_161193220868200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_DM8148_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8148"/>
						</attributes>
					</type>
				</content>
				</contents>
				</contents>
			</contents>
			<contents name="DM8165" desc="DM8165" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_161193221141400">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>DM8165</tag>
					<tag>DaVinci DM81xx</tag>
					</search.tags>
				</filter>
				<contents name="GNU Target Examples" desc="SYS/BIOS Examples for GNU targets." customPageType="genericNote">
				<filter id="filter_161193221639700">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>DM8165</tag>
					<tag>DaVinci DM81xx</tag>
					<tag>GNU Target Examples</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\com_ti_rtsc_sysbios_example_45.projectspec">
					<filter.ref ref.id="filter_161193221639700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_DM8165_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8165"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\com_ti_rtsc_sysbios_example_46.projectspec">
					<filter.ref ref.id="filter_161193221639700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_DM8165_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8165"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_161193221674200">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>DM8165</tag>
					<tag>DaVinci DM81xx</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_59.projectspec">
					<filter.ref ref.id="filter_161193221674200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_DM8165_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8165"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_48.projectspec">
					<filter.ref ref.id="filter_161193221674200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_DM8165_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8165"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_49.projectspec">
					<filter.ref ref.id="filter_161193221674200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_DM8165_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8165"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_50.projectspec">
					<filter.ref ref.id="filter_161193221674200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_DM8165_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8165"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_51.projectspec">
					<filter.ref ref.id="filter_161193221674200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_DM8165_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8165"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_52.projectspec">
					<filter.ref ref.id="filter_161193221674200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_DM8165_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8165"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_53.projectspec">
					<filter.ref ref.id="filter_161193221674200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_DM8165_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8165"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_54.projectspec">
					<filter.ref ref.id="filter_161193221674200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_DM8165_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8165"/>
						</attributes>
					</type>
				</content>
				<content name="Semi-Hosting Example" desc="This example leverages Semi-Hosting for printf IO.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_60.projectspec">
					<filter.ref ref.id="filter_161193221674200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="semihost_DM8165_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8165"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_56.projectspec">
					<filter.ref ref.id="filter_161193221674200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_DM8165_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8165"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_57.projectspec">
					<filter.ref ref.id="filter_161193221674200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_DM8165_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8165"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_58.projectspec">
					<filter.ref ref.id="filter_161193221674200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_DM8165_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8165"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_55.projectspec">
					<filter.ref ref.id="filter_161193221674200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_DM8165_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8165"/>
						</attributes>
					</type>
				</content>
				</contents>
				</contents>
				<contents name="TI Target Examples" desc="SYS/BIOS Examples for TI targets." customPageType="genericNote">
				<filter id="filter_161193221985400">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>DM8165</tag>
					<tag>DaVinci DM81xx</tag>
					<tag>TI Target Examples</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\com_ti_rtsc_sysbios_example_30.projectspec">
					<filter.ref ref.id="filter_161193221985400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_DM8165_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8165"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\com_ti_rtsc_sysbios_example_31.projectspec">
					<filter.ref ref.id="filter_161193221985400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_DM8165_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8165"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_161193222018000">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>DM8165</tag>
					<tag>DaVinci DM81xx</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_44.projectspec">
					<filter.ref ref.id="filter_161193222018000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_DM8165_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8165"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_33.projectspec">
					<filter.ref ref.id="filter_161193222018000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_DM8165_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8165"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_34.projectspec">
					<filter.ref ref.id="filter_161193222018000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_DM8165_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8165"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_35.projectspec">
					<filter.ref ref.id="filter_161193222018000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_DM8165_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8165"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_36.projectspec">
					<filter.ref ref.id="filter_161193222018000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_DM8165_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8165"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_37.projectspec">
					<filter.ref ref.id="filter_161193222018000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_DM8165_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8165"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_38.projectspec">
					<filter.ref ref.id="filter_161193222018000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_DM8165_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8165"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_39.projectspec">
					<filter.ref ref.id="filter_161193222018000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_DM8165_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8165"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_41.projectspec">
					<filter.ref ref.id="filter_161193222018000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_DM8165_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8165"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_42.projectspec">
					<filter.ref ref.id="filter_161193222018000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_DM8165_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8165"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_43.projectspec">
					<filter.ref ref.id="filter_161193222018000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_DM8165_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8165"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_40.projectspec">
					<filter.ref ref.id="filter_161193222018000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_DM8165_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8165"/>
						</attributes>
					</type>
				</content>
				</contents>
				</contents>
			</contents>
			<contents name="DM8166" desc="DM8166" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_161193222288500">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>DM8166</tag>
					<tag>DaVinci DM81xx</tag>
					</search.tags>
				</filter>
				<contents name="GNU Target Examples" desc="SYS/BIOS Examples for GNU targets." customPageType="genericNote">
				<filter id="filter_161193224035800">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>DM8166</tag>
					<tag>DaVinci DM81xx</tag>
					<tag>GNU Target Examples</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\com_ti_rtsc_sysbios_example_45.projectspec">
					<filter.ref ref.id="filter_161193224035800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_DM8166_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8166"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\com_ti_rtsc_sysbios_example_46.projectspec">
					<filter.ref ref.id="filter_161193224035800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_DM8166_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8166"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_161193224096400">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>DM8166</tag>
					<tag>DaVinci DM81xx</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_59.projectspec">
					<filter.ref ref.id="filter_161193224096400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_DM8166_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8166"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_48.projectspec">
					<filter.ref ref.id="filter_161193224096400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_DM8166_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8166"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_49.projectspec">
					<filter.ref ref.id="filter_161193224096400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_DM8166_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8166"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_50.projectspec">
					<filter.ref ref.id="filter_161193224096400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_DM8166_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8166"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_51.projectspec">
					<filter.ref ref.id="filter_161193224096400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_DM8166_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8166"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_52.projectspec">
					<filter.ref ref.id="filter_161193224096400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_DM8166_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8166"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_53.projectspec">
					<filter.ref ref.id="filter_161193224096400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_DM8166_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8166"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_54.projectspec">
					<filter.ref ref.id="filter_161193224096400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_DM8166_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8166"/>
						</attributes>
					</type>
				</content>
				<content name="Semi-Hosting Example" desc="This example leverages Semi-Hosting for printf IO.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_60.projectspec">
					<filter.ref ref.id="filter_161193224096400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="semihost_DM8166_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8166"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_56.projectspec">
					<filter.ref ref.id="filter_161193224096400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_DM8166_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8166"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_57.projectspec">
					<filter.ref ref.id="filter_161193224096400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_DM8166_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8166"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_58.projectspec">
					<filter.ref ref.id="filter_161193224096400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_DM8166_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8166"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_55.projectspec">
					<filter.ref ref.id="filter_161193224096400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_DM8166_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8166"/>
						</attributes>
					</type>
				</content>
				</contents>
				</contents>
				<contents name="TI Target Examples" desc="SYS/BIOS Examples for TI targets." customPageType="genericNote">
				<filter id="filter_161193224433300">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>DM8166</tag>
					<tag>DaVinci DM81xx</tag>
					<tag>TI Target Examples</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\com_ti_rtsc_sysbios_example_30.projectspec">
					<filter.ref ref.id="filter_161193224433300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_DM8166_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8166"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\com_ti_rtsc_sysbios_example_31.projectspec">
					<filter.ref ref.id="filter_161193224433300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_DM8166_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8166"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_161193224467900">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>DM8166</tag>
					<tag>DaVinci DM81xx</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_44.projectspec">
					<filter.ref ref.id="filter_161193224467900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_DM8166_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8166"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_33.projectspec">
					<filter.ref ref.id="filter_161193224467900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_DM8166_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8166"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_34.projectspec">
					<filter.ref ref.id="filter_161193224467900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_DM8166_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8166"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_35.projectspec">
					<filter.ref ref.id="filter_161193224467900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_DM8166_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8166"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_36.projectspec">
					<filter.ref ref.id="filter_161193224467900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_DM8166_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8166"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_37.projectspec">
					<filter.ref ref.id="filter_161193224467900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_DM8166_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8166"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_38.projectspec">
					<filter.ref ref.id="filter_161193224467900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_DM8166_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8166"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_39.projectspec">
					<filter.ref ref.id="filter_161193224467900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_DM8166_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8166"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_41.projectspec">
					<filter.ref ref.id="filter_161193224467900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_DM8166_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8166"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_42.projectspec">
					<filter.ref ref.id="filter_161193224467900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_DM8166_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8166"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_43.projectspec">
					<filter.ref ref.id="filter_161193224467900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_DM8166_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8166"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_40.projectspec">
					<filter.ref ref.id="filter_161193224467900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_DM8166_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8166"/>
						</attributes>
					</type>
				</content>
				</contents>
				</contents>
			</contents>
			<contents name="DM8167" desc="DM8167" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_161193224692700">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>DM8167</tag>
					<tag>DaVinci DM81xx</tag>
					</search.tags>
				</filter>
				<contents name="GNU Target Examples" desc="SYS/BIOS Examples for GNU targets." customPageType="genericNote">
				<filter id="filter_161193225280200">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>DM8167</tag>
					<tag>DaVinci DM81xx</tag>
					<tag>GNU Target Examples</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\com_ti_rtsc_sysbios_example_45.projectspec">
					<filter.ref ref.id="filter_161193225280200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_DM8167_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8167"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\com_ti_rtsc_sysbios_example_46.projectspec">
					<filter.ref ref.id="filter_161193225280200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_DM8167_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8167"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_161193225313000">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>DM8167</tag>
					<tag>DaVinci DM81xx</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_59.projectspec">
					<filter.ref ref.id="filter_161193225313000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_DM8167_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8167"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_48.projectspec">
					<filter.ref ref.id="filter_161193225313000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_DM8167_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8167"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_49.projectspec">
					<filter.ref ref.id="filter_161193225313000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_DM8167_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8167"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_50.projectspec">
					<filter.ref ref.id="filter_161193225313000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_DM8167_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8167"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_51.projectspec">
					<filter.ref ref.id="filter_161193225313000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_DM8167_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8167"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_52.projectspec">
					<filter.ref ref.id="filter_161193225313000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_DM8167_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8167"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_53.projectspec">
					<filter.ref ref.id="filter_161193225313000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_DM8167_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8167"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_54.projectspec">
					<filter.ref ref.id="filter_161193225313000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_DM8167_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8167"/>
						</attributes>
					</type>
				</content>
				<content name="Semi-Hosting Example" desc="This example leverages Semi-Hosting for printf IO.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_60.projectspec">
					<filter.ref ref.id="filter_161193225313000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="semihost_DM8167_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8167"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_56.projectspec">
					<filter.ref ref.id="filter_161193225313000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_DM8167_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8167"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_57.projectspec">
					<filter.ref ref.id="filter_161193225313000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_DM8167_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8167"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_58.projectspec">
					<filter.ref ref.id="filter_161193225313000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_DM8167_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8167"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_55.projectspec">
					<filter.ref ref.id="filter_161193225313000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_DM8167_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8167"/>
						</attributes>
					</type>
				</content>
				</contents>
				</contents>
				<contents name="TI Target Examples" desc="SYS/BIOS Examples for TI targets." customPageType="genericNote">
				<filter id="filter_161193225601900">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>DM8167</tag>
					<tag>DaVinci DM81xx</tag>
					<tag>TI Target Examples</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\com_ti_rtsc_sysbios_example_30.projectspec">
					<filter.ref ref.id="filter_161193225601900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_DM8167_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8167"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\com_ti_rtsc_sysbios_example_31.projectspec">
					<filter.ref ref.id="filter_161193225601900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_DM8167_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8167"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_161193225632200">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>DM8167</tag>
					<tag>DaVinci DM81xx</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_44.projectspec">
					<filter.ref ref.id="filter_161193225632200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_DM8167_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8167"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_33.projectspec">
					<filter.ref ref.id="filter_161193225632200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_DM8167_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8167"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_34.projectspec">
					<filter.ref ref.id="filter_161193225632200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_DM8167_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8167"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_35.projectspec">
					<filter.ref ref.id="filter_161193225632200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_DM8167_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8167"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_36.projectspec">
					<filter.ref ref.id="filter_161193225632200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_DM8167_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8167"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_37.projectspec">
					<filter.ref ref.id="filter_161193225632200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_DM8167_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8167"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_38.projectspec">
					<filter.ref ref.id="filter_161193225632200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_DM8167_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8167"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_39.projectspec">
					<filter.ref ref.id="filter_161193225632200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_DM8167_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8167"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_41.projectspec">
					<filter.ref ref.id="filter_161193225632200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_DM8167_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8167"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_42.projectspec">
					<filter.ref ref.id="filter_161193225632200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_DM8167_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8167"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_43.projectspec">
					<filter.ref ref.id="filter_161193225632200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_DM8167_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8167"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_40.projectspec">
					<filter.ref ref.id="filter_161193225632200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_DM8167_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8167"/>
						</attributes>
					</type>
				</content>
				</contents>
				</contents>
			</contents>
			<contents name="DM8168" desc="DM8168" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_161193225834400">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>DM8168</tag>
					<tag>DaVinci DM81xx</tag>
					</search.tags>
				</filter>
				<contents name="GNU Target Examples" desc="SYS/BIOS Examples for GNU targets." customPageType="genericNote">
				<filter id="filter_161193226320700">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>DM8168</tag>
					<tag>DaVinci DM81xx</tag>
					<tag>GNU Target Examples</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\com_ti_rtsc_sysbios_example_45.projectspec">
					<filter.ref ref.id="filter_161193226320700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_DM8168_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8168"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\com_ti_rtsc_sysbios_example_46.projectspec">
					<filter.ref ref.id="filter_161193226320700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_DM8168_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8168"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_161193226352400">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>DM8168</tag>
					<tag>DaVinci DM81xx</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_59.projectspec">
					<filter.ref ref.id="filter_161193226352400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_DM8168_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8168"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_48.projectspec">
					<filter.ref ref.id="filter_161193226352400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_DM8168_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8168"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_49.projectspec">
					<filter.ref ref.id="filter_161193226352400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_DM8168_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8168"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_50.projectspec">
					<filter.ref ref.id="filter_161193226352400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_DM8168_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8168"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_51.projectspec">
					<filter.ref ref.id="filter_161193226352400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_DM8168_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8168"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_52.projectspec">
					<filter.ref ref.id="filter_161193226352400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_DM8168_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8168"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_53.projectspec">
					<filter.ref ref.id="filter_161193226352400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_DM8168_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8168"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_54.projectspec">
					<filter.ref ref.id="filter_161193226352400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_DM8168_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8168"/>
						</attributes>
					</type>
				</content>
				<content name="Semi-Hosting Example" desc="This example leverages Semi-Hosting for printf IO.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_60.projectspec">
					<filter.ref ref.id="filter_161193226352400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="semihost_DM8168_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8168"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_56.projectspec">
					<filter.ref ref.id="filter_161193226352400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_DM8168_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8168"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_57.projectspec">
					<filter.ref ref.id="filter_161193226352400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_DM8168_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8168"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_58.projectspec">
					<filter.ref ref.id="filter_161193226352400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_DM8168_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8168"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_55.projectspec">
					<filter.ref ref.id="filter_161193226352400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_DM8168_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8168"/>
						</attributes>
					</type>
				</content>
				</contents>
				</contents>
				<contents name="TI Target Examples" desc="SYS/BIOS Examples for TI targets." customPageType="genericNote">
				<filter id="filter_161193227710800">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>DM8168</tag>
					<tag>DaVinci DM81xx</tag>
					<tag>TI Target Examples</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\com_ti_rtsc_sysbios_example_30.projectspec">
					<filter.ref ref.id="filter_161193227710800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_DM8168_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8168"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\com_ti_rtsc_sysbios_example_31.projectspec">
					<filter.ref ref.id="filter_161193227710800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_DM8168_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8168"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_161193227751100">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>DM8168</tag>
					<tag>DaVinci DM81xx</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_44.projectspec">
					<filter.ref ref.id="filter_161193227751100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_DM8168_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8168"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_33.projectspec">
					<filter.ref ref.id="filter_161193227751100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_DM8168_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8168"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_34.projectspec">
					<filter.ref ref.id="filter_161193227751100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_DM8168_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8168"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_35.projectspec">
					<filter.ref ref.id="filter_161193227751100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_DM8168_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8168"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_36.projectspec">
					<filter.ref ref.id="filter_161193227751100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_DM8168_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8168"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_37.projectspec">
					<filter.ref ref.id="filter_161193227751100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_DM8168_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8168"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_38.projectspec">
					<filter.ref ref.id="filter_161193227751100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_DM8168_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8168"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_39.projectspec">
					<filter.ref ref.id="filter_161193227751100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_DM8168_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8168"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_41.projectspec">
					<filter.ref ref.id="filter_161193227751100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_DM8168_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8168"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_42.projectspec">
					<filter.ref ref.id="filter_161193227751100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_DM8168_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8168"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_43.projectspec">
					<filter.ref ref.id="filter_161193227751100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_DM8168_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8168"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_40.projectspec">
					<filter.ref ref.id="filter_161193227751100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_DM8168_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8168"/>
						</attributes>
					</type>
				</content>
				</contents>
				</contents>
			</contents>
			<contents name="EVMDM8148" desc="EVMDM8148" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_161193227975600">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>EVMDM8148</tag>
					<tag>DaVinci DM81xx</tag>
					</search.tags>
				</filter>
				<contents name="GNU Target Examples" desc="SYS/BIOS Examples for GNU targets." customPageType="genericNote">
				<filter id="filter_161193228577200">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>EVMDM8148</tag>
					<tag>DaVinci DM81xx</tag>
					<tag>GNU Target Examples</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\com_ti_rtsc_sysbios_example_45.projectspec">
					<filter.ref ref.id="filter_161193228577200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_EVMDM8148_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8148.EVMDM8148"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\com_ti_rtsc_sysbios_example_46.projectspec">
					<filter.ref ref.id="filter_161193228577200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_EVMDM8148_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8148.EVMDM8148"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_161193228621600">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>EVMDM8148</tag>
					<tag>DaVinci DM81xx</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_59.projectspec">
					<filter.ref ref.id="filter_161193228621600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_EVMDM8148_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8148.EVMDM8148"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_48.projectspec">
					<filter.ref ref.id="filter_161193228621600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_EVMDM8148_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8148.EVMDM8148"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_49.projectspec">
					<filter.ref ref.id="filter_161193228621600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_EVMDM8148_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8148.EVMDM8148"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_50.projectspec">
					<filter.ref ref.id="filter_161193228621600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_EVMDM8148_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8148.EVMDM8148"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_51.projectspec">
					<filter.ref ref.id="filter_161193228621600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_EVMDM8148_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8148.EVMDM8148"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_52.projectspec">
					<filter.ref ref.id="filter_161193228621600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_EVMDM8148_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8148.EVMDM8148"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_53.projectspec">
					<filter.ref ref.id="filter_161193228621600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_EVMDM8148_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8148.EVMDM8148"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_54.projectspec">
					<filter.ref ref.id="filter_161193228621600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_EVMDM8148_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8148.EVMDM8148"/>
						</attributes>
					</type>
				</content>
				<content name="Semi-Hosting Example" desc="This example leverages Semi-Hosting for printf IO.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_60.projectspec">
					<filter.ref ref.id="filter_161193228621600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="semihost_EVMDM8148_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8148.EVMDM8148"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_56.projectspec">
					<filter.ref ref.id="filter_161193228621600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_EVMDM8148_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8148.EVMDM8148"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_57.projectspec">
					<filter.ref ref.id="filter_161193228621600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_EVMDM8148_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8148.EVMDM8148"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_58.projectspec">
					<filter.ref ref.id="filter_161193228621600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_EVMDM8148_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8148.EVMDM8148"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_55.projectspec">
					<filter.ref ref.id="filter_161193228621600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_EVMDM8148_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8148.EVMDM8148"/>
						</attributes>
					</type>
				</content>
				</contents>
				</contents>
				<contents name="TI Target Examples" desc="SYS/BIOS Examples for TI targets." customPageType="genericNote">
				<filter id="filter_161193229007700">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>EVMDM8148</tag>
					<tag>DaVinci DM81xx</tag>
					<tag>TI Target Examples</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\com_ti_rtsc_sysbios_example_30.projectspec">
					<filter.ref ref.id="filter_161193229007700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_EVMDM8148_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8148.EVMDM8148"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\com_ti_rtsc_sysbios_example_31.projectspec">
					<filter.ref ref.id="filter_161193229007700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_EVMDM8148_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8148.EVMDM8148"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_161193229053100">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>EVMDM8148</tag>
					<tag>DaVinci DM81xx</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_44.projectspec">
					<filter.ref ref.id="filter_161193229053100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_EVMDM8148_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8148.EVMDM8148"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_33.projectspec">
					<filter.ref ref.id="filter_161193229053100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_EVMDM8148_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8148.EVMDM8148"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_34.projectspec">
					<filter.ref ref.id="filter_161193229053100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_EVMDM8148_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8148.EVMDM8148"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_35.projectspec">
					<filter.ref ref.id="filter_161193229053100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_EVMDM8148_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8148.EVMDM8148"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_36.projectspec">
					<filter.ref ref.id="filter_161193229053100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_EVMDM8148_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8148.EVMDM8148"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_37.projectspec">
					<filter.ref ref.id="filter_161193229053100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_EVMDM8148_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8148.EVMDM8148"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_38.projectspec">
					<filter.ref ref.id="filter_161193229053100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_EVMDM8148_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8148.EVMDM8148"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_39.projectspec">
					<filter.ref ref.id="filter_161193229053100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_EVMDM8148_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8148.EVMDM8148"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_41.projectspec">
					<filter.ref ref.id="filter_161193229053100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_EVMDM8148_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8148.EVMDM8148"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_42.projectspec">
					<filter.ref ref.id="filter_161193229053100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_EVMDM8148_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8148.EVMDM8148"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_43.projectspec">
					<filter.ref ref.id="filter_161193229053100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_EVMDM8148_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8148.EVMDM8148"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_40.projectspec">
					<filter.ref ref.id="filter_161193229053100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_EVMDM8148_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8148.EVMDM8148"/>
						</attributes>
					</type>
				</content>
				</contents>
				</contents>
			</contents>
			<contents name="EVMDM8168" desc="EVMDM8168" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_161193229353400">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>EVMDM8168</tag>
					<tag>DaVinci DM81xx</tag>
					</search.tags>
				</filter>
				<contents name="GNU Target Examples" desc="SYS/BIOS Examples for GNU targets." customPageType="genericNote">
				<filter id="filter_161193229860200">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>EVMDM8168</tag>
					<tag>DaVinci DM81xx</tag>
					<tag>GNU Target Examples</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\com_ti_rtsc_sysbios_example_45.projectspec">
					<filter.ref ref.id="filter_161193229860200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_EVMDM8168_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8168.EVMDM8168"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\com_ti_rtsc_sysbios_example_46.projectspec">
					<filter.ref ref.id="filter_161193229860200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_EVMDM8168_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8168.EVMDM8168"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_161193229895900">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>EVMDM8168</tag>
					<tag>DaVinci DM81xx</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_59.projectspec">
					<filter.ref ref.id="filter_161193229895900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_EVMDM8168_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8168.EVMDM8168"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_48.projectspec">
					<filter.ref ref.id="filter_161193229895900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_EVMDM8168_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8168.EVMDM8168"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_49.projectspec">
					<filter.ref ref.id="filter_161193229895900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_EVMDM8168_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8168.EVMDM8168"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_50.projectspec">
					<filter.ref ref.id="filter_161193229895900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_EVMDM8168_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8168.EVMDM8168"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_51.projectspec">
					<filter.ref ref.id="filter_161193229895900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_EVMDM8168_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8168.EVMDM8168"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_52.projectspec">
					<filter.ref ref.id="filter_161193229895900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_EVMDM8168_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8168.EVMDM8168"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_53.projectspec">
					<filter.ref ref.id="filter_161193229895900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_EVMDM8168_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8168.EVMDM8168"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_54.projectspec">
					<filter.ref ref.id="filter_161193229895900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_EVMDM8168_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8168.EVMDM8168"/>
						</attributes>
					</type>
				</content>
				<content name="Semi-Hosting Example" desc="This example leverages Semi-Hosting for printf IO.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_60.projectspec">
					<filter.ref ref.id="filter_161193229895900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="semihost_EVMDM8168_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8168.EVMDM8168"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_56.projectspec">
					<filter.ref ref.id="filter_161193229895900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_EVMDM8168_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8168.EVMDM8168"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_57.projectspec">
					<filter.ref ref.id="filter_161193229895900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_EVMDM8168_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8168.EVMDM8168"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_58.projectspec">
					<filter.ref ref.id="filter_161193229895900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_EVMDM8168_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8168.EVMDM8168"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_55.projectspec">
					<filter.ref ref.id="filter_161193229895900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_EVMDM8168_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8168.EVMDM8168"/>
						</attributes>
					</type>
				</content>
				</contents>
				</contents>
				<contents name="TI Target Examples" desc="SYS/BIOS Examples for TI targets." customPageType="genericNote">
				<filter id="filter_161193231604000">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>EVMDM8168</tag>
					<tag>DaVinci DM81xx</tag>
					<tag>TI Target Examples</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\com_ti_rtsc_sysbios_example_30.projectspec">
					<filter.ref ref.id="filter_161193231604000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_EVMDM8168_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8168.EVMDM8168"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\com_ti_rtsc_sysbios_example_31.projectspec">
					<filter.ref ref.id="filter_161193231604000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_EVMDM8168_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8168.EVMDM8168"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_161193231660200">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>EVMDM8168</tag>
					<tag>DaVinci DM81xx</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_44.projectspec">
					<filter.ref ref.id="filter_161193231660200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_EVMDM8168_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8168.EVMDM8168"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_33.projectspec">
					<filter.ref ref.id="filter_161193231660200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_EVMDM8168_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8168.EVMDM8168"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_34.projectspec">
					<filter.ref ref.id="filter_161193231660200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_EVMDM8168_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8168.EVMDM8168"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_35.projectspec">
					<filter.ref ref.id="filter_161193231660200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_EVMDM8168_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8168.EVMDM8168"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_36.projectspec">
					<filter.ref ref.id="filter_161193231660200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_EVMDM8168_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8168.EVMDM8168"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_37.projectspec">
					<filter.ref ref.id="filter_161193231660200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_EVMDM8168_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8168.EVMDM8168"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_38.projectspec">
					<filter.ref ref.id="filter_161193231660200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_EVMDM8168_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8168.EVMDM8168"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_39.projectspec">
					<filter.ref ref.id="filter_161193231660200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_EVMDM8168_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8168.EVMDM8168"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_41.projectspec">
					<filter.ref ref.id="filter_161193231660200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_EVMDM8168_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8168.EVMDM8168"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_42.projectspec">
					<filter.ref ref.id="filter_161193231660200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_EVMDM8168_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8168.EVMDM8168"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_43.projectspec">
					<filter.ref ref.id="filter_161193231660200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_EVMDM8168_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8168.EVMDM8168"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_40.projectspec">
					<filter.ref ref.id="filter_161193231660200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_EVMDM8168_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320DM8168.EVMDM8168"/>
						</attributes>
					</type>
				</content>
				</contents>
				</contents>
			</contents>
		</contents>
		<contents name="OMAP-L1x" desc="OMAP-L1x" icon="plugin://icons/obj16/devices.png">
			<contents name="EVMOMAPL137" desc="EVMOMAPL137" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_161193232228600">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>EVMOMAPL137</tag>
					<tag>OMAP-L1x</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_15.projectspec">
					<filter.ref ref.id="filter_161193232228600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_EVMOMAPL137_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAPL137.EVMOMAPL137"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_16.projectspec">
					<filter.ref ref.id="filter_161193232228600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_EVMOMAPL137_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAPL137.EVMOMAPL137"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_161193232341700">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>EVMOMAPL137</tag>
					<tag>OMAP-L1x</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_29.projectspec">
					<filter.ref ref.id="filter_161193232341700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_EVMOMAPL137_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAPL137.EVMOMAPL137"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_18.projectspec">
					<filter.ref ref.id="filter_161193232341700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_EVMOMAPL137_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAPL137.EVMOMAPL137"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_19.projectspec">
					<filter.ref ref.id="filter_161193232341700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_EVMOMAPL137_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAPL137.EVMOMAPL137"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_20.projectspec">
					<filter.ref ref.id="filter_161193232341700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_EVMOMAPL137_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAPL137.EVMOMAPL137"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_21.projectspec">
					<filter.ref ref.id="filter_161193232341700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_EVMOMAPL137_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAPL137.EVMOMAPL137"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_22.projectspec">
					<filter.ref ref.id="filter_161193232341700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_EVMOMAPL137_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAPL137.EVMOMAPL137"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_23.projectspec">
					<filter.ref ref.id="filter_161193232341700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_EVMOMAPL137_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAPL137.EVMOMAPL137"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_24.projectspec">
					<filter.ref ref.id="filter_161193232341700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_EVMOMAPL137_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAPL137.EVMOMAPL137"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_26.projectspec">
					<filter.ref ref.id="filter_161193232341700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_EVMOMAPL137_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAPL137.EVMOMAPL137"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_27.projectspec">
					<filter.ref ref.id="filter_161193232341700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_EVMOMAPL137_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAPL137.EVMOMAPL137"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_28.projectspec">
					<filter.ref ref.id="filter_161193232341700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_EVMOMAPL137_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAPL137.EVMOMAPL137"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_25.projectspec">
					<filter.ref ref.id="filter_161193232341700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_EVMOMAPL137_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAPL137.EVMOMAPL137"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="EVMOMAPL138" desc="EVMOMAPL138" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_161193235125700">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>EVMOMAPL138</tag>
					<tag>OMAP-L1x</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_15.projectspec">
					<filter.ref ref.id="filter_161193235125700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_EVMOMAPL138_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAPL138.EVMOMAPL138"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_16.projectspec">
					<filter.ref ref.id="filter_161193235125700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_EVMOMAPL138_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAPL138.EVMOMAPL138"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_161193235234300">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>EVMOMAPL138</tag>
					<tag>OMAP-L1x</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_29.projectspec">
					<filter.ref ref.id="filter_161193235234300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_EVMOMAPL138_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAPL138.EVMOMAPL138"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_18.projectspec">
					<filter.ref ref.id="filter_161193235234300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_EVMOMAPL138_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAPL138.EVMOMAPL138"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_19.projectspec">
					<filter.ref ref.id="filter_161193235234300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_EVMOMAPL138_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAPL138.EVMOMAPL138"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_20.projectspec">
					<filter.ref ref.id="filter_161193235234300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_EVMOMAPL138_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAPL138.EVMOMAPL138"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_21.projectspec">
					<filter.ref ref.id="filter_161193235234300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_EVMOMAPL138_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAPL138.EVMOMAPL138"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_22.projectspec">
					<filter.ref ref.id="filter_161193235234300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_EVMOMAPL138_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAPL138.EVMOMAPL138"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_23.projectspec">
					<filter.ref ref.id="filter_161193235234300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_EVMOMAPL138_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAPL138.EVMOMAPL138"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_24.projectspec">
					<filter.ref ref.id="filter_161193235234300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_EVMOMAPL138_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAPL138.EVMOMAPL138"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_26.projectspec">
					<filter.ref ref.id="filter_161193235234300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_EVMOMAPL138_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAPL138.EVMOMAPL138"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_27.projectspec">
					<filter.ref ref.id="filter_161193235234300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_EVMOMAPL138_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAPL138.EVMOMAPL138"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_28.projectspec">
					<filter.ref ref.id="filter_161193235234300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_EVMOMAPL138_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAPL138.EVMOMAPL138"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_25.projectspec">
					<filter.ref ref.id="filter_161193235234300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_EVMOMAPL138_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAPL138.EVMOMAPL138"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="EXPKITOMAPL138" desc="EXPKITOMAPL138" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_161193236083800">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>EXPKITOMAPL138</tag>
					<tag>OMAP-L1x</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_15.projectspec">
					<filter.ref ref.id="filter_161193236083800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_EXPKITOMAPL138_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAPL138.EXPKITOMAPL138"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_16.projectspec">
					<filter.ref ref.id="filter_161193236083800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_EXPKITOMAPL138_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAPL138.EXPKITOMAPL138"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_161193236182100">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>EXPKITOMAPL138</tag>
					<tag>OMAP-L1x</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_29.projectspec">
					<filter.ref ref.id="filter_161193236182100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_EXPKITOMAPL138_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAPL138.EXPKITOMAPL138"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_18.projectspec">
					<filter.ref ref.id="filter_161193236182100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_EXPKITOMAPL138_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAPL138.EXPKITOMAPL138"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_19.projectspec">
					<filter.ref ref.id="filter_161193236182100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_EXPKITOMAPL138_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAPL138.EXPKITOMAPL138"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_20.projectspec">
					<filter.ref ref.id="filter_161193236182100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_EXPKITOMAPL138_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAPL138.EXPKITOMAPL138"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_21.projectspec">
					<filter.ref ref.id="filter_161193236182100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_EXPKITOMAPL138_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAPL138.EXPKITOMAPL138"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_22.projectspec">
					<filter.ref ref.id="filter_161193236182100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_EXPKITOMAPL138_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAPL138.EXPKITOMAPL138"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_23.projectspec">
					<filter.ref ref.id="filter_161193236182100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_EXPKITOMAPL138_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAPL138.EXPKITOMAPL138"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_24.projectspec">
					<filter.ref ref.id="filter_161193236182100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_EXPKITOMAPL138_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAPL138.EXPKITOMAPL138"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_26.projectspec">
					<filter.ref ref.id="filter_161193236182100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_EXPKITOMAPL138_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAPL138.EXPKITOMAPL138"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_27.projectspec">
					<filter.ref ref.id="filter_161193236182100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_EXPKITOMAPL138_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAPL138.EXPKITOMAPL138"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_28.projectspec">
					<filter.ref ref.id="filter_161193236182100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_EXPKITOMAPL138_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAPL138.EXPKITOMAPL138"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_25.projectspec">
					<filter.ref ref.id="filter_161193236182100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_EXPKITOMAPL138_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAPL138.EXPKITOMAPL138"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="LCDKOMAPL138" desc="LCDKOMAPL138" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_161193237004800">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>LCDKOMAPL138</tag>
					<tag>OMAP-L1x</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_15.projectspec">
					<filter.ref ref.id="filter_161193237004800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_LCDKOMAPL138_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAPL138.LCDKOMAPL138"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_16.projectspec">
					<filter.ref ref.id="filter_161193237004800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_LCDKOMAPL138_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAPL138.LCDKOMAPL138"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_161193237103200">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>LCDKOMAPL138</tag>
					<tag>OMAP-L1x</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_29.projectspec">
					<filter.ref ref.id="filter_161193237103200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_LCDKOMAPL138_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAPL138.LCDKOMAPL138"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_18.projectspec">
					<filter.ref ref.id="filter_161193237103200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_LCDKOMAPL138_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAPL138.LCDKOMAPL138"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_19.projectspec">
					<filter.ref ref.id="filter_161193237103200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_LCDKOMAPL138_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAPL138.LCDKOMAPL138"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_20.projectspec">
					<filter.ref ref.id="filter_161193237103200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_LCDKOMAPL138_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAPL138.LCDKOMAPL138"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_21.projectspec">
					<filter.ref ref.id="filter_161193237103200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_LCDKOMAPL138_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAPL138.LCDKOMAPL138"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_22.projectspec">
					<filter.ref ref.id="filter_161193237103200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_LCDKOMAPL138_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAPL138.LCDKOMAPL138"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_23.projectspec">
					<filter.ref ref.id="filter_161193237103200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_LCDKOMAPL138_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAPL138.LCDKOMAPL138"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_24.projectspec">
					<filter.ref ref.id="filter_161193237103200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_LCDKOMAPL138_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAPL138.LCDKOMAPL138"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_26.projectspec">
					<filter.ref ref.id="filter_161193237103200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_LCDKOMAPL138_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAPL138.LCDKOMAPL138"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_27.projectspec">
					<filter.ref ref.id="filter_161193237103200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_LCDKOMAPL138_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAPL138.LCDKOMAPL138"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_28.projectspec">
					<filter.ref ref.id="filter_161193237103200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_LCDKOMAPL138_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAPL138.LCDKOMAPL138"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_25.projectspec">
					<filter.ref ref.id="filter_161193237103200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_LCDKOMAPL138_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAPL138.LCDKOMAPL138"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="OMAPL132" desc="OMAPL132" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_161193237930100">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>OMAPL132</tag>
					<tag>OMAP-L1x</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_15.projectspec">
					<filter.ref ref.id="filter_161193237930100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_OMAPL132_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAPL132"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_16.projectspec">
					<filter.ref ref.id="filter_161193237930100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_OMAPL132_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAPL132"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_161193238020400">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>OMAPL132</tag>
					<tag>OMAP-L1x</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_29.projectspec">
					<filter.ref ref.id="filter_161193238020400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_OMAPL132_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAPL132"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_18.projectspec">
					<filter.ref ref.id="filter_161193238020400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_OMAPL132_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAPL132"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_19.projectspec">
					<filter.ref ref.id="filter_161193238020400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_OMAPL132_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAPL132"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_20.projectspec">
					<filter.ref ref.id="filter_161193238020400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_OMAPL132_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAPL132"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_21.projectspec">
					<filter.ref ref.id="filter_161193238020400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_OMAPL132_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAPL132"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_22.projectspec">
					<filter.ref ref.id="filter_161193238020400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_OMAPL132_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAPL132"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_23.projectspec">
					<filter.ref ref.id="filter_161193238020400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_OMAPL132_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAPL132"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_24.projectspec">
					<filter.ref ref.id="filter_161193238020400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_OMAPL132_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAPL132"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_26.projectspec">
					<filter.ref ref.id="filter_161193238020400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_OMAPL132_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAPL132"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_27.projectspec">
					<filter.ref ref.id="filter_161193238020400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_OMAPL132_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAPL132"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_28.projectspec">
					<filter.ref ref.id="filter_161193238020400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_OMAPL132_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAPL132"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_25.projectspec">
					<filter.ref ref.id="filter_161193238020400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_OMAPL132_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAPL132"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="OMAPL137" desc="OMAPL137" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_161193240210500">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>OMAPL137</tag>
					<tag>OMAP-L1x</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_15.projectspec">
					<filter.ref ref.id="filter_161193240210500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_OMAPL137_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAPL137"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_16.projectspec">
					<filter.ref ref.id="filter_161193240210500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_OMAPL137_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAPL137"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_161193240310800">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>OMAPL137</tag>
					<tag>OMAP-L1x</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_29.projectspec">
					<filter.ref ref.id="filter_161193240310800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_OMAPL137_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAPL137"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_18.projectspec">
					<filter.ref ref.id="filter_161193240310800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_OMAPL137_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAPL137"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_19.projectspec">
					<filter.ref ref.id="filter_161193240310800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_OMAPL137_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAPL137"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_20.projectspec">
					<filter.ref ref.id="filter_161193240310800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_OMAPL137_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAPL137"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_21.projectspec">
					<filter.ref ref.id="filter_161193240310800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_OMAPL137_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAPL137"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_22.projectspec">
					<filter.ref ref.id="filter_161193240310800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_OMAPL137_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAPL137"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_23.projectspec">
					<filter.ref ref.id="filter_161193240310800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_OMAPL137_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAPL137"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_24.projectspec">
					<filter.ref ref.id="filter_161193240310800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_OMAPL137_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAPL137"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_26.projectspec">
					<filter.ref ref.id="filter_161193240310800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_OMAPL137_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAPL137"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_27.projectspec">
					<filter.ref ref.id="filter_161193240310800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_OMAPL137_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAPL137"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_28.projectspec">
					<filter.ref ref.id="filter_161193240310800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_OMAPL137_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAPL137"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_25.projectspec">
					<filter.ref ref.id="filter_161193240310800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_OMAPL137_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAPL137"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="OMAPL138" desc="OMAPL138" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_161193241338100">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>OMAPL138</tag>
					<tag>OMAP-L1x</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_15.projectspec">
					<filter.ref ref.id="filter_161193241338100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_OMAPL138_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAPL138"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_16.projectspec">
					<filter.ref ref.id="filter_161193241338100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_OMAPL138_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAPL138"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_161193241428200">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>OMAPL138</tag>
					<tag>OMAP-L1x</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_29.projectspec">
					<filter.ref ref.id="filter_161193241428200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_OMAPL138_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAPL138"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_18.projectspec">
					<filter.ref ref.id="filter_161193241428200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_OMAPL138_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAPL138"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_19.projectspec">
					<filter.ref ref.id="filter_161193241428200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_OMAPL138_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAPL138"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_20.projectspec">
					<filter.ref ref.id="filter_161193241428200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_OMAPL138_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAPL138"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_21.projectspec">
					<filter.ref ref.id="filter_161193241428200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_OMAPL138_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAPL138"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_22.projectspec">
					<filter.ref ref.id="filter_161193241428200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_OMAPL138_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAPL138"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_23.projectspec">
					<filter.ref ref.id="filter_161193241428200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_OMAPL138_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAPL138"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_24.projectspec">
					<filter.ref ref.id="filter_161193241428200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_OMAPL138_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAPL138"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_26.projectspec">
					<filter.ref ref.id="filter_161193241428200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_OMAPL138_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAPL138"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_27.projectspec">
					<filter.ref ref.id="filter_161193241428200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_OMAPL138_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAPL138"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_28.projectspec">
					<filter.ref ref.id="filter_161193241428200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_OMAPL138_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAPL138"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_25.projectspec">
					<filter.ref ref.id="filter_161193241428200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_OMAPL138_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAPL138"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
		</contents>
		<contents name="OMAP3" desc="OMAP3" icon="plugin://icons/obj16/devices.png">
			<contents name="BeagleBoard" desc="BeagleBoard" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_161193242217200">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>BeagleBoard</tag>
					<tag>OMAP3</tag>
					</search.tags>
				</filter>
				<contents name="GNU Target Examples" desc="SYS/BIOS Examples for GNU targets." customPageType="genericNote">
				<filter id="filter_161193242707600">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>BeagleBoard</tag>
					<tag>OMAP3</tag>
					<tag>GNU Target Examples</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\com_ti_rtsc_sysbios_example_45.projectspec">
					<filter.ref ref.id="filter_161193242707600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_BeagleBoard_CortexA"/>
							<attribute key="device.variant" value="Cortex A.OMAP3530.BeagleBoard"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\com_ti_rtsc_sysbios_example_46.projectspec">
					<filter.ref ref.id="filter_161193242707600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_BeagleBoard_CortexA"/>
							<attribute key="device.variant" value="Cortex A.OMAP3530.BeagleBoard"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_161193242743000">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>BeagleBoard</tag>
					<tag>OMAP3</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_59.projectspec">
					<filter.ref ref.id="filter_161193242743000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_BeagleBoard_CortexA"/>
							<attribute key="device.variant" value="Cortex A.OMAP3530.BeagleBoard"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_48.projectspec">
					<filter.ref ref.id="filter_161193242743000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_BeagleBoard_CortexA"/>
							<attribute key="device.variant" value="Cortex A.OMAP3530.BeagleBoard"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_49.projectspec">
					<filter.ref ref.id="filter_161193242743000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_BeagleBoard_CortexA"/>
							<attribute key="device.variant" value="Cortex A.OMAP3530.BeagleBoard"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_50.projectspec">
					<filter.ref ref.id="filter_161193242743000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_BeagleBoard_CortexA"/>
							<attribute key="device.variant" value="Cortex A.OMAP3530.BeagleBoard"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_51.projectspec">
					<filter.ref ref.id="filter_161193242743000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_BeagleBoard_CortexA"/>
							<attribute key="device.variant" value="Cortex A.OMAP3530.BeagleBoard"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_52.projectspec">
					<filter.ref ref.id="filter_161193242743000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_BeagleBoard_CortexA"/>
							<attribute key="device.variant" value="Cortex A.OMAP3530.BeagleBoard"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_53.projectspec">
					<filter.ref ref.id="filter_161193242743000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_BeagleBoard_CortexA"/>
							<attribute key="device.variant" value="Cortex A.OMAP3530.BeagleBoard"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_54.projectspec">
					<filter.ref ref.id="filter_161193242743000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_BeagleBoard_CortexA"/>
							<attribute key="device.variant" value="Cortex A.OMAP3530.BeagleBoard"/>
						</attributes>
					</type>
				</content>
				<content name="Semi-Hosting Example" desc="This example leverages Semi-Hosting for printf IO.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_60.projectspec">
					<filter.ref ref.id="filter_161193242743000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="semihost_BeagleBoard_CortexA"/>
							<attribute key="device.variant" value="Cortex A.OMAP3530.BeagleBoard"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_56.projectspec">
					<filter.ref ref.id="filter_161193242743000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_BeagleBoard_CortexA"/>
							<attribute key="device.variant" value="Cortex A.OMAP3530.BeagleBoard"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_57.projectspec">
					<filter.ref ref.id="filter_161193242743000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_BeagleBoard_CortexA"/>
							<attribute key="device.variant" value="Cortex A.OMAP3530.BeagleBoard"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_58.projectspec">
					<filter.ref ref.id="filter_161193242743000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_BeagleBoard_CortexA"/>
							<attribute key="device.variant" value="Cortex A.OMAP3530.BeagleBoard"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_55.projectspec">
					<filter.ref ref.id="filter_161193242743000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_BeagleBoard_CortexA"/>
							<attribute key="device.variant" value="Cortex A.OMAP3530.BeagleBoard"/>
						</attributes>
					</type>
				</content>
				</contents>
				</contents>
				<contents name="TI Target Examples" desc="SYS/BIOS Examples for TI targets." customPageType="genericNote">
				<filter id="filter_161193243918800">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>BeagleBoard</tag>
					<tag>OMAP3</tag>
					<tag>TI Target Examples</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\com_ti_rtsc_sysbios_example_30.projectspec">
					<filter.ref ref.id="filter_161193243918800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_BeagleBoard_CortexA"/>
							<attribute key="device.variant" value="Cortex A.OMAP3530.BeagleBoard"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\com_ti_rtsc_sysbios_example_31.projectspec">
					<filter.ref ref.id="filter_161193243918800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_BeagleBoard_CortexA"/>
							<attribute key="device.variant" value="Cortex A.OMAP3530.BeagleBoard"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_161193243960100">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>BeagleBoard</tag>
					<tag>OMAP3</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_44.projectspec">
					<filter.ref ref.id="filter_161193243960100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_BeagleBoard_CortexA"/>
							<attribute key="device.variant" value="Cortex A.OMAP3530.BeagleBoard"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_33.projectspec">
					<filter.ref ref.id="filter_161193243960100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_BeagleBoard_CortexA"/>
							<attribute key="device.variant" value="Cortex A.OMAP3530.BeagleBoard"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_34.projectspec">
					<filter.ref ref.id="filter_161193243960100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_BeagleBoard_CortexA"/>
							<attribute key="device.variant" value="Cortex A.OMAP3530.BeagleBoard"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_35.projectspec">
					<filter.ref ref.id="filter_161193243960100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_BeagleBoard_CortexA"/>
							<attribute key="device.variant" value="Cortex A.OMAP3530.BeagleBoard"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_36.projectspec">
					<filter.ref ref.id="filter_161193243960100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_BeagleBoard_CortexA"/>
							<attribute key="device.variant" value="Cortex A.OMAP3530.BeagleBoard"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_37.projectspec">
					<filter.ref ref.id="filter_161193243960100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_BeagleBoard_CortexA"/>
							<attribute key="device.variant" value="Cortex A.OMAP3530.BeagleBoard"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_38.projectspec">
					<filter.ref ref.id="filter_161193243960100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_BeagleBoard_CortexA"/>
							<attribute key="device.variant" value="Cortex A.OMAP3530.BeagleBoard"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_39.projectspec">
					<filter.ref ref.id="filter_161193243960100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_BeagleBoard_CortexA"/>
							<attribute key="device.variant" value="Cortex A.OMAP3530.BeagleBoard"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_41.projectspec">
					<filter.ref ref.id="filter_161193243960100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_BeagleBoard_CortexA"/>
							<attribute key="device.variant" value="Cortex A.OMAP3530.BeagleBoard"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_42.projectspec">
					<filter.ref ref.id="filter_161193243960100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_BeagleBoard_CortexA"/>
							<attribute key="device.variant" value="Cortex A.OMAP3530.BeagleBoard"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_43.projectspec">
					<filter.ref ref.id="filter_161193243960100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_BeagleBoard_CortexA"/>
							<attribute key="device.variant" value="Cortex A.OMAP3530.BeagleBoard"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_40.projectspec">
					<filter.ref ref.id="filter_161193243960100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_BeagleBoard_CortexA"/>
							<attribute key="device.variant" value="Cortex A.OMAP3530.BeagleBoard"/>
						</attributes>
					</type>
				</content>
				</contents>
				</contents>
			</contents>
			<contents name="EVMOMAP3530" desc="EVMOMAP3530" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_161193244203900">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>EVMOMAP3530</tag>
					<tag>OMAP3</tag>
					</search.tags>
				</filter>
				<contents name="GNU Target Examples" desc="SYS/BIOS Examples for GNU targets." customPageType="genericNote">
				<filter id="filter_161193244697200">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>EVMOMAP3530</tag>
					<tag>OMAP3</tag>
					<tag>GNU Target Examples</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\com_ti_rtsc_sysbios_example_45.projectspec">
					<filter.ref ref.id="filter_161193244697200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_EVMOMAP3530_CortexA"/>
							<attribute key="device.variant" value="Cortex A.OMAP3530.EVMOMAP3530"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\com_ti_rtsc_sysbios_example_46.projectspec">
					<filter.ref ref.id="filter_161193244697200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_EVMOMAP3530_CortexA"/>
							<attribute key="device.variant" value="Cortex A.OMAP3530.EVMOMAP3530"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_161193244731400">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>EVMOMAP3530</tag>
					<tag>OMAP3</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_59.projectspec">
					<filter.ref ref.id="filter_161193244731400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_EVMOMAP3530_CortexA"/>
							<attribute key="device.variant" value="Cortex A.OMAP3530.EVMOMAP3530"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_48.projectspec">
					<filter.ref ref.id="filter_161193244731400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_EVMOMAP3530_CortexA"/>
							<attribute key="device.variant" value="Cortex A.OMAP3530.EVMOMAP3530"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_49.projectspec">
					<filter.ref ref.id="filter_161193244731400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_EVMOMAP3530_CortexA"/>
							<attribute key="device.variant" value="Cortex A.OMAP3530.EVMOMAP3530"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_50.projectspec">
					<filter.ref ref.id="filter_161193244731400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_EVMOMAP3530_CortexA"/>
							<attribute key="device.variant" value="Cortex A.OMAP3530.EVMOMAP3530"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_51.projectspec">
					<filter.ref ref.id="filter_161193244731400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_EVMOMAP3530_CortexA"/>
							<attribute key="device.variant" value="Cortex A.OMAP3530.EVMOMAP3530"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_52.projectspec">
					<filter.ref ref.id="filter_161193244731400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_EVMOMAP3530_CortexA"/>
							<attribute key="device.variant" value="Cortex A.OMAP3530.EVMOMAP3530"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_53.projectspec">
					<filter.ref ref.id="filter_161193244731400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_EVMOMAP3530_CortexA"/>
							<attribute key="device.variant" value="Cortex A.OMAP3530.EVMOMAP3530"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_54.projectspec">
					<filter.ref ref.id="filter_161193244731400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_EVMOMAP3530_CortexA"/>
							<attribute key="device.variant" value="Cortex A.OMAP3530.EVMOMAP3530"/>
						</attributes>
					</type>
				</content>
				<content name="Semi-Hosting Example" desc="This example leverages Semi-Hosting for printf IO.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_60.projectspec">
					<filter.ref ref.id="filter_161193244731400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="semihost_EVMOMAP3530_CortexA"/>
							<attribute key="device.variant" value="Cortex A.OMAP3530.EVMOMAP3530"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_56.projectspec">
					<filter.ref ref.id="filter_161193244731400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_EVMOMAP3530_CortexA"/>
							<attribute key="device.variant" value="Cortex A.OMAP3530.EVMOMAP3530"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_57.projectspec">
					<filter.ref ref.id="filter_161193244731400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_EVMOMAP3530_CortexA"/>
							<attribute key="device.variant" value="Cortex A.OMAP3530.EVMOMAP3530"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_58.projectspec">
					<filter.ref ref.id="filter_161193244731400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_EVMOMAP3530_CortexA"/>
							<attribute key="device.variant" value="Cortex A.OMAP3530.EVMOMAP3530"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_55.projectspec">
					<filter.ref ref.id="filter_161193244731400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_EVMOMAP3530_CortexA"/>
							<attribute key="device.variant" value="Cortex A.OMAP3530.EVMOMAP3530"/>
						</attributes>
					</type>
				</content>
				</contents>
				</contents>
				<contents name="TI Target Examples" desc="SYS/BIOS Examples for TI targets." customPageType="genericNote">
				<filter id="filter_161193245034300">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>EVMOMAP3530</tag>
					<tag>OMAP3</tag>
					<tag>TI Target Examples</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\com_ti_rtsc_sysbios_example_30.projectspec">
					<filter.ref ref.id="filter_161193245034300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_EVMOMAP3530_CortexA"/>
							<attribute key="device.variant" value="Cortex A.OMAP3530.EVMOMAP3530"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\com_ti_rtsc_sysbios_example_31.projectspec">
					<filter.ref ref.id="filter_161193245034300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_EVMOMAP3530_CortexA"/>
							<attribute key="device.variant" value="Cortex A.OMAP3530.EVMOMAP3530"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_161193245069500">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>EVMOMAP3530</tag>
					<tag>OMAP3</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_44.projectspec">
					<filter.ref ref.id="filter_161193245069500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_EVMOMAP3530_CortexA"/>
							<attribute key="device.variant" value="Cortex A.OMAP3530.EVMOMAP3530"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_33.projectspec">
					<filter.ref ref.id="filter_161193245069500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_EVMOMAP3530_CortexA"/>
							<attribute key="device.variant" value="Cortex A.OMAP3530.EVMOMAP3530"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_34.projectspec">
					<filter.ref ref.id="filter_161193245069500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_EVMOMAP3530_CortexA"/>
							<attribute key="device.variant" value="Cortex A.OMAP3530.EVMOMAP3530"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_35.projectspec">
					<filter.ref ref.id="filter_161193245069500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_EVMOMAP3530_CortexA"/>
							<attribute key="device.variant" value="Cortex A.OMAP3530.EVMOMAP3530"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_36.projectspec">
					<filter.ref ref.id="filter_161193245069500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_EVMOMAP3530_CortexA"/>
							<attribute key="device.variant" value="Cortex A.OMAP3530.EVMOMAP3530"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_37.projectspec">
					<filter.ref ref.id="filter_161193245069500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_EVMOMAP3530_CortexA"/>
							<attribute key="device.variant" value="Cortex A.OMAP3530.EVMOMAP3530"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_38.projectspec">
					<filter.ref ref.id="filter_161193245069500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_EVMOMAP3530_CortexA"/>
							<attribute key="device.variant" value="Cortex A.OMAP3530.EVMOMAP3530"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_39.projectspec">
					<filter.ref ref.id="filter_161193245069500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_EVMOMAP3530_CortexA"/>
							<attribute key="device.variant" value="Cortex A.OMAP3530.EVMOMAP3530"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_41.projectspec">
					<filter.ref ref.id="filter_161193245069500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_EVMOMAP3530_CortexA"/>
							<attribute key="device.variant" value="Cortex A.OMAP3530.EVMOMAP3530"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_42.projectspec">
					<filter.ref ref.id="filter_161193245069500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_EVMOMAP3530_CortexA"/>
							<attribute key="device.variant" value="Cortex A.OMAP3530.EVMOMAP3530"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_43.projectspec">
					<filter.ref ref.id="filter_161193245069500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_EVMOMAP3530_CortexA"/>
							<attribute key="device.variant" value="Cortex A.OMAP3530.EVMOMAP3530"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_40.projectspec">
					<filter.ref ref.id="filter_161193245069500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_EVMOMAP3530_CortexA"/>
							<attribute key="device.variant" value="Cortex A.OMAP3530.EVMOMAP3530"/>
						</attributes>
					</type>
				</content>
				</contents>
				</contents>
			</contents>
			<contents name="OMAP3430" desc="OMAP3430" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_161193245295700">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>OMAP3430</tag>
					<tag>OMAP3</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_15.projectspec">
					<filter.ref ref.id="filter_161193245295700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_OMAP3430_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAP3430"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_16.projectspec">
					<filter.ref ref.id="filter_161193245295700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_OMAP3430_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAP3430"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_161193245384400">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>OMAP3430</tag>
					<tag>OMAP3</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_29.projectspec">
					<filter.ref ref.id="filter_161193245384400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_OMAP3430_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAP3430"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_18.projectspec">
					<filter.ref ref.id="filter_161193245384400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_OMAP3430_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAP3430"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_19.projectspec">
					<filter.ref ref.id="filter_161193245384400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_OMAP3430_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAP3430"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_20.projectspec">
					<filter.ref ref.id="filter_161193245384400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_OMAP3430_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAP3430"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_21.projectspec">
					<filter.ref ref.id="filter_161193245384400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_OMAP3430_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAP3430"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_22.projectspec">
					<filter.ref ref.id="filter_161193245384400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_OMAP3430_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAP3430"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_23.projectspec">
					<filter.ref ref.id="filter_161193245384400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_OMAP3430_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAP3430"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_24.projectspec">
					<filter.ref ref.id="filter_161193245384400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_OMAP3430_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAP3430"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_26.projectspec">
					<filter.ref ref.id="filter_161193245384400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_OMAP3430_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAP3430"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_27.projectspec">
					<filter.ref ref.id="filter_161193245384400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_OMAP3430_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAP3430"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_28.projectspec">
					<filter.ref ref.id="filter_161193245384400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_OMAP3430_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAP3430"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_25.projectspec">
					<filter.ref ref.id="filter_161193245384400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_OMAP3430_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAP3430"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="OMAP3430" desc="OMAP3430" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_161193246106100">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>OMAP3430</tag>
					<tag>OMAP3</tag>
					</search.tags>
				</filter>
				<contents name="GNU Target Examples" desc="SYS/BIOS Examples for GNU targets." customPageType="genericNote">
				<filter id="filter_161193246563100">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>OMAP3430</tag>
					<tag>OMAP3</tag>
					<tag>GNU Target Examples</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\com_ti_rtsc_sysbios_example_45.projectspec">
					<filter.ref ref.id="filter_161193246563100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_OMAP3430_CortexA"/>
							<attribute key="device.variant" value="Cortex A.OMAP3430"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\com_ti_rtsc_sysbios_example_46.projectspec">
					<filter.ref ref.id="filter_161193246563100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_OMAP3430_CortexA"/>
							<attribute key="device.variant" value="Cortex A.OMAP3430"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_161193247407700">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>OMAP3430</tag>
					<tag>OMAP3</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_59.projectspec">
					<filter.ref ref.id="filter_161193247407700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_OMAP3430_CortexA"/>
							<attribute key="device.variant" value="Cortex A.OMAP3430"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_48.projectspec">
					<filter.ref ref.id="filter_161193247407700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_OMAP3430_CortexA"/>
							<attribute key="device.variant" value="Cortex A.OMAP3430"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_49.projectspec">
					<filter.ref ref.id="filter_161193247407700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_OMAP3430_CortexA"/>
							<attribute key="device.variant" value="Cortex A.OMAP3430"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_50.projectspec">
					<filter.ref ref.id="filter_161193247407700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_OMAP3430_CortexA"/>
							<attribute key="device.variant" value="Cortex A.OMAP3430"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_51.projectspec">
					<filter.ref ref.id="filter_161193247407700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_OMAP3430_CortexA"/>
							<attribute key="device.variant" value="Cortex A.OMAP3430"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_52.projectspec">
					<filter.ref ref.id="filter_161193247407700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_OMAP3430_CortexA"/>
							<attribute key="device.variant" value="Cortex A.OMAP3430"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_53.projectspec">
					<filter.ref ref.id="filter_161193247407700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_OMAP3430_CortexA"/>
							<attribute key="device.variant" value="Cortex A.OMAP3430"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_54.projectspec">
					<filter.ref ref.id="filter_161193247407700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_OMAP3430_CortexA"/>
							<attribute key="device.variant" value="Cortex A.OMAP3430"/>
						</attributes>
					</type>
				</content>
				<content name="Semi-Hosting Example" desc="This example leverages Semi-Hosting for printf IO.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_60.projectspec">
					<filter.ref ref.id="filter_161193247407700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="semihost_OMAP3430_CortexA"/>
							<attribute key="device.variant" value="Cortex A.OMAP3430"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_56.projectspec">
					<filter.ref ref.id="filter_161193247407700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_OMAP3430_CortexA"/>
							<attribute key="device.variant" value="Cortex A.OMAP3430"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_57.projectspec">
					<filter.ref ref.id="filter_161193247407700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_OMAP3430_CortexA"/>
							<attribute key="device.variant" value="Cortex A.OMAP3430"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_58.projectspec">
					<filter.ref ref.id="filter_161193247407700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_OMAP3430_CortexA"/>
							<attribute key="device.variant" value="Cortex A.OMAP3430"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_55.projectspec">
					<filter.ref ref.id="filter_161193247407700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_OMAP3430_CortexA"/>
							<attribute key="device.variant" value="Cortex A.OMAP3430"/>
						</attributes>
					</type>
				</content>
				</contents>
				</contents>
				<contents name="TI Target Examples" desc="SYS/BIOS Examples for TI targets." customPageType="genericNote">
				<filter id="filter_161193247717100">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>OMAP3430</tag>
					<tag>OMAP3</tag>
					<tag>TI Target Examples</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\com_ti_rtsc_sysbios_example_30.projectspec">
					<filter.ref ref.id="filter_161193247717100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_OMAP3430_CortexA"/>
							<attribute key="device.variant" value="Cortex A.OMAP3430"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\com_ti_rtsc_sysbios_example_31.projectspec">
					<filter.ref ref.id="filter_161193247717100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_OMAP3430_CortexA"/>
							<attribute key="device.variant" value="Cortex A.OMAP3430"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_161193247747400">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>OMAP3430</tag>
					<tag>OMAP3</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_44.projectspec">
					<filter.ref ref.id="filter_161193247747400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_OMAP3430_CortexA"/>
							<attribute key="device.variant" value="Cortex A.OMAP3430"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_33.projectspec">
					<filter.ref ref.id="filter_161193247747400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_OMAP3430_CortexA"/>
							<attribute key="device.variant" value="Cortex A.OMAP3430"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_34.projectspec">
					<filter.ref ref.id="filter_161193247747400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_OMAP3430_CortexA"/>
							<attribute key="device.variant" value="Cortex A.OMAP3430"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_35.projectspec">
					<filter.ref ref.id="filter_161193247747400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_OMAP3430_CortexA"/>
							<attribute key="device.variant" value="Cortex A.OMAP3430"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_36.projectspec">
					<filter.ref ref.id="filter_161193247747400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_OMAP3430_CortexA"/>
							<attribute key="device.variant" value="Cortex A.OMAP3430"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_37.projectspec">
					<filter.ref ref.id="filter_161193247747400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_OMAP3430_CortexA"/>
							<attribute key="device.variant" value="Cortex A.OMAP3430"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_38.projectspec">
					<filter.ref ref.id="filter_161193247747400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_OMAP3430_CortexA"/>
							<attribute key="device.variant" value="Cortex A.OMAP3430"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_39.projectspec">
					<filter.ref ref.id="filter_161193247747400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_OMAP3430_CortexA"/>
							<attribute key="device.variant" value="Cortex A.OMAP3430"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_41.projectspec">
					<filter.ref ref.id="filter_161193247747400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_OMAP3430_CortexA"/>
							<attribute key="device.variant" value="Cortex A.OMAP3430"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_42.projectspec">
					<filter.ref ref.id="filter_161193247747400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_OMAP3430_CortexA"/>
							<attribute key="device.variant" value="Cortex A.OMAP3430"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_43.projectspec">
					<filter.ref ref.id="filter_161193247747400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_OMAP3430_CortexA"/>
							<attribute key="device.variant" value="Cortex A.OMAP3430"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_40.projectspec">
					<filter.ref ref.id="filter_161193247747400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_OMAP3430_CortexA"/>
							<attribute key="device.variant" value="Cortex A.OMAP3430"/>
						</attributes>
					</type>
				</content>
				</contents>
				</contents>
			</contents>
			<contents name="OMAP3525" desc="OMAP3525" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_161193247947900">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>OMAP3525</tag>
					<tag>OMAP3</tag>
					</search.tags>
				</filter>
				<contents name="GNU Target Examples" desc="SYS/BIOS Examples for GNU targets." customPageType="genericNote">
				<filter id="filter_161193248432000">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>OMAP3525</tag>
					<tag>OMAP3</tag>
					<tag>GNU Target Examples</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\com_ti_rtsc_sysbios_example_45.projectspec">
					<filter.ref ref.id="filter_161193248432000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_OMAP3525_CortexA"/>
							<attribute key="device.variant" value="Cortex A.OMAP3525"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\com_ti_rtsc_sysbios_example_46.projectspec">
					<filter.ref ref.id="filter_161193248432000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_OMAP3525_CortexA"/>
							<attribute key="device.variant" value="Cortex A.OMAP3525"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_161193248462700">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>OMAP3525</tag>
					<tag>OMAP3</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_59.projectspec">
					<filter.ref ref.id="filter_161193248462700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_OMAP3525_CortexA"/>
							<attribute key="device.variant" value="Cortex A.OMAP3525"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_48.projectspec">
					<filter.ref ref.id="filter_161193248462700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_OMAP3525_CortexA"/>
							<attribute key="device.variant" value="Cortex A.OMAP3525"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_49.projectspec">
					<filter.ref ref.id="filter_161193248462700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_OMAP3525_CortexA"/>
							<attribute key="device.variant" value="Cortex A.OMAP3525"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_50.projectspec">
					<filter.ref ref.id="filter_161193248462700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_OMAP3525_CortexA"/>
							<attribute key="device.variant" value="Cortex A.OMAP3525"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_51.projectspec">
					<filter.ref ref.id="filter_161193248462700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_OMAP3525_CortexA"/>
							<attribute key="device.variant" value="Cortex A.OMAP3525"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_52.projectspec">
					<filter.ref ref.id="filter_161193248462700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_OMAP3525_CortexA"/>
							<attribute key="device.variant" value="Cortex A.OMAP3525"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_53.projectspec">
					<filter.ref ref.id="filter_161193248462700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_OMAP3525_CortexA"/>
							<attribute key="device.variant" value="Cortex A.OMAP3525"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_54.projectspec">
					<filter.ref ref.id="filter_161193248462700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_OMAP3525_CortexA"/>
							<attribute key="device.variant" value="Cortex A.OMAP3525"/>
						</attributes>
					</type>
				</content>
				<content name="Semi-Hosting Example" desc="This example leverages Semi-Hosting for printf IO.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_60.projectspec">
					<filter.ref ref.id="filter_161193248462700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="semihost_OMAP3525_CortexA"/>
							<attribute key="device.variant" value="Cortex A.OMAP3525"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_56.projectspec">
					<filter.ref ref.id="filter_161193248462700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_OMAP3525_CortexA"/>
							<attribute key="device.variant" value="Cortex A.OMAP3525"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_57.projectspec">
					<filter.ref ref.id="filter_161193248462700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_OMAP3525_CortexA"/>
							<attribute key="device.variant" value="Cortex A.OMAP3525"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_58.projectspec">
					<filter.ref ref.id="filter_161193248462700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_OMAP3525_CortexA"/>
							<attribute key="device.variant" value="Cortex A.OMAP3525"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_55.projectspec">
					<filter.ref ref.id="filter_161193248462700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_OMAP3525_CortexA"/>
							<attribute key="device.variant" value="Cortex A.OMAP3525"/>
						</attributes>
					</type>
				</content>
				</contents>
				</contents>
				<contents name="TI Target Examples" desc="SYS/BIOS Examples for TI targets." customPageType="genericNote">
				<filter id="filter_161193248752300">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>OMAP3525</tag>
					<tag>OMAP3</tag>
					<tag>TI Target Examples</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\com_ti_rtsc_sysbios_example_30.projectspec">
					<filter.ref ref.id="filter_161193248752300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_OMAP3525_CortexA"/>
							<attribute key="device.variant" value="Cortex A.OMAP3525"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\com_ti_rtsc_sysbios_example_31.projectspec">
					<filter.ref ref.id="filter_161193248752300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_OMAP3525_CortexA"/>
							<attribute key="device.variant" value="Cortex A.OMAP3525"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_161193248782500">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>OMAP3525</tag>
					<tag>OMAP3</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_44.projectspec">
					<filter.ref ref.id="filter_161193248782500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_OMAP3525_CortexA"/>
							<attribute key="device.variant" value="Cortex A.OMAP3525"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_33.projectspec">
					<filter.ref ref.id="filter_161193248782500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_OMAP3525_CortexA"/>
							<attribute key="device.variant" value="Cortex A.OMAP3525"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_34.projectspec">
					<filter.ref ref.id="filter_161193248782500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_OMAP3525_CortexA"/>
							<attribute key="device.variant" value="Cortex A.OMAP3525"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_35.projectspec">
					<filter.ref ref.id="filter_161193248782500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_OMAP3525_CortexA"/>
							<attribute key="device.variant" value="Cortex A.OMAP3525"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_36.projectspec">
					<filter.ref ref.id="filter_161193248782500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_OMAP3525_CortexA"/>
							<attribute key="device.variant" value="Cortex A.OMAP3525"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_37.projectspec">
					<filter.ref ref.id="filter_161193248782500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_OMAP3525_CortexA"/>
							<attribute key="device.variant" value="Cortex A.OMAP3525"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_38.projectspec">
					<filter.ref ref.id="filter_161193248782500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_OMAP3525_CortexA"/>
							<attribute key="device.variant" value="Cortex A.OMAP3525"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_39.projectspec">
					<filter.ref ref.id="filter_161193248782500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_OMAP3525_CortexA"/>
							<attribute key="device.variant" value="Cortex A.OMAP3525"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_41.projectspec">
					<filter.ref ref.id="filter_161193248782500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_OMAP3525_CortexA"/>
							<attribute key="device.variant" value="Cortex A.OMAP3525"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_42.projectspec">
					<filter.ref ref.id="filter_161193248782500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_OMAP3525_CortexA"/>
							<attribute key="device.variant" value="Cortex A.OMAP3525"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_43.projectspec">
					<filter.ref ref.id="filter_161193248782500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_OMAP3525_CortexA"/>
							<attribute key="device.variant" value="Cortex A.OMAP3525"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_40.projectspec">
					<filter.ref ref.id="filter_161193248782500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_OMAP3525_CortexA"/>
							<attribute key="device.variant" value="Cortex A.OMAP3525"/>
						</attributes>
					</type>
				</content>
				</contents>
				</contents>
			</contents>
			<contents name="OMAP3530" desc="OMAP3530" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_161193249010900">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>OMAP3530</tag>
					<tag>OMAP3</tag>
					</search.tags>
				</filter>
				<contents name="GNU Target Examples" desc="SYS/BIOS Examples for GNU targets." customPageType="genericNote">
				<filter id="filter_161193249484500">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>OMAP3530</tag>
					<tag>OMAP3</tag>
					<tag>GNU Target Examples</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\com_ti_rtsc_sysbios_example_45.projectspec">
					<filter.ref ref.id="filter_161193249484500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_OMAP3530_CortexA"/>
							<attribute key="device.variant" value="Cortex A.OMAP3530"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\com_ti_rtsc_sysbios_example_46.projectspec">
					<filter.ref ref.id="filter_161193249484500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_OMAP3530_CortexA"/>
							<attribute key="device.variant" value="Cortex A.OMAP3530"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_161193249515300">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>OMAP3530</tag>
					<tag>OMAP3</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_59.projectspec">
					<filter.ref ref.id="filter_161193249515300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_OMAP3530_CortexA"/>
							<attribute key="device.variant" value="Cortex A.OMAP3530"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_48.projectspec">
					<filter.ref ref.id="filter_161193249515300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_OMAP3530_CortexA"/>
							<attribute key="device.variant" value="Cortex A.OMAP3530"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_49.projectspec">
					<filter.ref ref.id="filter_161193249515300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_OMAP3530_CortexA"/>
							<attribute key="device.variant" value="Cortex A.OMAP3530"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_50.projectspec">
					<filter.ref ref.id="filter_161193249515300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_OMAP3530_CortexA"/>
							<attribute key="device.variant" value="Cortex A.OMAP3530"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_51.projectspec">
					<filter.ref ref.id="filter_161193249515300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_OMAP3530_CortexA"/>
							<attribute key="device.variant" value="Cortex A.OMAP3530"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_52.projectspec">
					<filter.ref ref.id="filter_161193249515300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_OMAP3530_CortexA"/>
							<attribute key="device.variant" value="Cortex A.OMAP3530"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_53.projectspec">
					<filter.ref ref.id="filter_161193249515300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_OMAP3530_CortexA"/>
							<attribute key="device.variant" value="Cortex A.OMAP3530"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_54.projectspec">
					<filter.ref ref.id="filter_161193249515300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_OMAP3530_CortexA"/>
							<attribute key="device.variant" value="Cortex A.OMAP3530"/>
						</attributes>
					</type>
				</content>
				<content name="Semi-Hosting Example" desc="This example leverages Semi-Hosting for printf IO.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_60.projectspec">
					<filter.ref ref.id="filter_161193249515300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="semihost_OMAP3530_CortexA"/>
							<attribute key="device.variant" value="Cortex A.OMAP3530"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_56.projectspec">
					<filter.ref ref.id="filter_161193249515300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_OMAP3530_CortexA"/>
							<attribute key="device.variant" value="Cortex A.OMAP3530"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_57.projectspec">
					<filter.ref ref.id="filter_161193249515300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_OMAP3530_CortexA"/>
							<attribute key="device.variant" value="Cortex A.OMAP3530"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_58.projectspec">
					<filter.ref ref.id="filter_161193249515300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_OMAP3530_CortexA"/>
							<attribute key="device.variant" value="Cortex A.OMAP3530"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_55.projectspec">
					<filter.ref ref.id="filter_161193249515300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_OMAP3530_CortexA"/>
							<attribute key="device.variant" value="Cortex A.OMAP3530"/>
						</attributes>
					</type>
				</content>
				</contents>
				</contents>
				<contents name="TI Target Examples" desc="SYS/BIOS Examples for TI targets." customPageType="genericNote">
				<filter id="filter_161193250598900">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>OMAP3530</tag>
					<tag>OMAP3</tag>
					<tag>TI Target Examples</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\com_ti_rtsc_sysbios_example_30.projectspec">
					<filter.ref ref.id="filter_161193250598900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_OMAP3530_CortexA"/>
							<attribute key="device.variant" value="Cortex A.OMAP3530"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\com_ti_rtsc_sysbios_example_31.projectspec">
					<filter.ref ref.id="filter_161193250598900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_OMAP3530_CortexA"/>
							<attribute key="device.variant" value="Cortex A.OMAP3530"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_161193250632200">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>OMAP3530</tag>
					<tag>OMAP3</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_44.projectspec">
					<filter.ref ref.id="filter_161193250632200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_OMAP3530_CortexA"/>
							<attribute key="device.variant" value="Cortex A.OMAP3530"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_33.projectspec">
					<filter.ref ref.id="filter_161193250632200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_OMAP3530_CortexA"/>
							<attribute key="device.variant" value="Cortex A.OMAP3530"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_34.projectspec">
					<filter.ref ref.id="filter_161193250632200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_OMAP3530_CortexA"/>
							<attribute key="device.variant" value="Cortex A.OMAP3530"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_35.projectspec">
					<filter.ref ref.id="filter_161193250632200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_OMAP3530_CortexA"/>
							<attribute key="device.variant" value="Cortex A.OMAP3530"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_36.projectspec">
					<filter.ref ref.id="filter_161193250632200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_OMAP3530_CortexA"/>
							<attribute key="device.variant" value="Cortex A.OMAP3530"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_37.projectspec">
					<filter.ref ref.id="filter_161193250632200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_OMAP3530_CortexA"/>
							<attribute key="device.variant" value="Cortex A.OMAP3530"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_38.projectspec">
					<filter.ref ref.id="filter_161193250632200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_OMAP3530_CortexA"/>
							<attribute key="device.variant" value="Cortex A.OMAP3530"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_39.projectspec">
					<filter.ref ref.id="filter_161193250632200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_OMAP3530_CortexA"/>
							<attribute key="device.variant" value="Cortex A.OMAP3530"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_41.projectspec">
					<filter.ref ref.id="filter_161193250632200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_OMAP3530_CortexA"/>
							<attribute key="device.variant" value="Cortex A.OMAP3530"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_42.projectspec">
					<filter.ref ref.id="filter_161193250632200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_OMAP3530_CortexA"/>
							<attribute key="device.variant" value="Cortex A.OMAP3530"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_43.projectspec">
					<filter.ref ref.id="filter_161193250632200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_OMAP3530_CortexA"/>
							<attribute key="device.variant" value="Cortex A.OMAP3530"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_40.projectspec">
					<filter.ref ref.id="filter_161193250632200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_OMAP3530_CortexA"/>
							<attribute key="device.variant" value="Cortex A.OMAP3530"/>
						</attributes>
					</type>
				</content>
				</contents>
				</contents>
			</contents>
			<contents name="OMAP3630" desc="OMAP3630" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_161193250822700">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>OMAP3630</tag>
					<tag>OMAP3</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_15.projectspec">
					<filter.ref ref.id="filter_161193250822700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_OMAP3630_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAP3630"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_16.projectspec">
					<filter.ref ref.id="filter_161193250822700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_OMAP3630_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAP3630"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_161193250913500">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>OMAP3630</tag>
					<tag>OMAP3</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_29.projectspec">
					<filter.ref ref.id="filter_161193250913500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_OMAP3630_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAP3630"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_18.projectspec">
					<filter.ref ref.id="filter_161193250913500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_OMAP3630_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAP3630"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_19.projectspec">
					<filter.ref ref.id="filter_161193250913500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_OMAP3630_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAP3630"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_20.projectspec">
					<filter.ref ref.id="filter_161193250913500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_OMAP3630_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAP3630"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_21.projectspec">
					<filter.ref ref.id="filter_161193250913500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_OMAP3630_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAP3630"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_22.projectspec">
					<filter.ref ref.id="filter_161193250913500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_OMAP3630_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAP3630"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_23.projectspec">
					<filter.ref ref.id="filter_161193250913500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_OMAP3630_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAP3630"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_24.projectspec">
					<filter.ref ref.id="filter_161193250913500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_OMAP3630_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAP3630"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_26.projectspec">
					<filter.ref ref.id="filter_161193250913500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_OMAP3630_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAP3630"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_27.projectspec">
					<filter.ref ref.id="filter_161193250913500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_OMAP3630_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAP3630"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_28.projectspec">
					<filter.ref ref.id="filter_161193250913500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_OMAP3630_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAP3630"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_25.projectspec">
					<filter.ref ref.id="filter_161193250913500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_OMAP3630_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAP3630"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="OMAP3630" desc="OMAP3630" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_161193251639800">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>OMAP3630</tag>
					<tag>OMAP3</tag>
					</search.tags>
				</filter>
				<contents name="GNU Target Examples" desc="SYS/BIOS Examples for GNU targets." customPageType="genericNote">
				<filter id="filter_161193252097500">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>OMAP3630</tag>
					<tag>OMAP3</tag>
					<tag>GNU Target Examples</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\com_ti_rtsc_sysbios_example_45.projectspec">
					<filter.ref ref.id="filter_161193252097500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_OMAP3630_CortexA"/>
							<attribute key="device.variant" value="Cortex A.OMAP3630"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\com_ti_rtsc_sysbios_example_46.projectspec">
					<filter.ref ref.id="filter_161193252097500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_OMAP3630_CortexA"/>
							<attribute key="device.variant" value="Cortex A.OMAP3630"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_161193252127700">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>OMAP3630</tag>
					<tag>OMAP3</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_59.projectspec">
					<filter.ref ref.id="filter_161193252127700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_OMAP3630_CortexA"/>
							<attribute key="device.variant" value="Cortex A.OMAP3630"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_48.projectspec">
					<filter.ref ref.id="filter_161193252127700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_OMAP3630_CortexA"/>
							<attribute key="device.variant" value="Cortex A.OMAP3630"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_49.projectspec">
					<filter.ref ref.id="filter_161193252127700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_OMAP3630_CortexA"/>
							<attribute key="device.variant" value="Cortex A.OMAP3630"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_50.projectspec">
					<filter.ref ref.id="filter_161193252127700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_OMAP3630_CortexA"/>
							<attribute key="device.variant" value="Cortex A.OMAP3630"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_51.projectspec">
					<filter.ref ref.id="filter_161193252127700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_OMAP3630_CortexA"/>
							<attribute key="device.variant" value="Cortex A.OMAP3630"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_52.projectspec">
					<filter.ref ref.id="filter_161193252127700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_OMAP3630_CortexA"/>
							<attribute key="device.variant" value="Cortex A.OMAP3630"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_53.projectspec">
					<filter.ref ref.id="filter_161193252127700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_OMAP3630_CortexA"/>
							<attribute key="device.variant" value="Cortex A.OMAP3630"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_54.projectspec">
					<filter.ref ref.id="filter_161193252127700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_OMAP3630_CortexA"/>
							<attribute key="device.variant" value="Cortex A.OMAP3630"/>
						</attributes>
					</type>
				</content>
				<content name="Semi-Hosting Example" desc="This example leverages Semi-Hosting for printf IO.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_60.projectspec">
					<filter.ref ref.id="filter_161193252127700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="semihost_OMAP3630_CortexA"/>
							<attribute key="device.variant" value="Cortex A.OMAP3630"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_56.projectspec">
					<filter.ref ref.id="filter_161193252127700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_OMAP3630_CortexA"/>
							<attribute key="device.variant" value="Cortex A.OMAP3630"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_57.projectspec">
					<filter.ref ref.id="filter_161193252127700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_OMAP3630_CortexA"/>
							<attribute key="device.variant" value="Cortex A.OMAP3630"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_58.projectspec">
					<filter.ref ref.id="filter_161193252127700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_OMAP3630_CortexA"/>
							<attribute key="device.variant" value="Cortex A.OMAP3630"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_55.projectspec">
					<filter.ref ref.id="filter_161193252127700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_OMAP3630_CortexA"/>
							<attribute key="device.variant" value="Cortex A.OMAP3630"/>
						</attributes>
					</type>
				</content>
				</contents>
				</contents>
				<contents name="TI Target Examples" desc="SYS/BIOS Examples for TI targets." customPageType="genericNote">
				<filter id="filter_161193252402800">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>OMAP3630</tag>
					<tag>OMAP3</tag>
					<tag>TI Target Examples</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\com_ti_rtsc_sysbios_example_30.projectspec">
					<filter.ref ref.id="filter_161193252402800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_OMAP3630_CortexA"/>
							<attribute key="device.variant" value="Cortex A.OMAP3630"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\com_ti_rtsc_sysbios_example_31.projectspec">
					<filter.ref ref.id="filter_161193252402800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_OMAP3630_CortexA"/>
							<attribute key="device.variant" value="Cortex A.OMAP3630"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_161193252432000">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>OMAP3630</tag>
					<tag>OMAP3</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_44.projectspec">
					<filter.ref ref.id="filter_161193252432000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_OMAP3630_CortexA"/>
							<attribute key="device.variant" value="Cortex A.OMAP3630"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_33.projectspec">
					<filter.ref ref.id="filter_161193252432000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_OMAP3630_CortexA"/>
							<attribute key="device.variant" value="Cortex A.OMAP3630"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_34.projectspec">
					<filter.ref ref.id="filter_161193252432000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_OMAP3630_CortexA"/>
							<attribute key="device.variant" value="Cortex A.OMAP3630"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_35.projectspec">
					<filter.ref ref.id="filter_161193252432000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_OMAP3630_CortexA"/>
							<attribute key="device.variant" value="Cortex A.OMAP3630"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_36.projectspec">
					<filter.ref ref.id="filter_161193252432000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_OMAP3630_CortexA"/>
							<attribute key="device.variant" value="Cortex A.OMAP3630"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_37.projectspec">
					<filter.ref ref.id="filter_161193252432000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_OMAP3630_CortexA"/>
							<attribute key="device.variant" value="Cortex A.OMAP3630"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_38.projectspec">
					<filter.ref ref.id="filter_161193252432000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_OMAP3630_CortexA"/>
							<attribute key="device.variant" value="Cortex A.OMAP3630"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_39.projectspec">
					<filter.ref ref.id="filter_161193252432000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_OMAP3630_CortexA"/>
							<attribute key="device.variant" value="Cortex A.OMAP3630"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_41.projectspec">
					<filter.ref ref.id="filter_161193252432000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_OMAP3630_CortexA"/>
							<attribute key="device.variant" value="Cortex A.OMAP3630"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_42.projectspec">
					<filter.ref ref.id="filter_161193252432000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_OMAP3630_CortexA"/>
							<attribute key="device.variant" value="Cortex A.OMAP3630"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_43.projectspec">
					<filter.ref ref.id="filter_161193252432000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_OMAP3630_CortexA"/>
							<attribute key="device.variant" value="Cortex A.OMAP3630"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_40.projectspec">
					<filter.ref ref.id="filter_161193252432000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_OMAP3630_CortexA"/>
							<attribute key="device.variant" value="Cortex A.OMAP3630"/>
						</attributes>
					</type>
				</content>
				</contents>
				</contents>
			</contents>
		</contents>
		<contents name="OMAP4" desc="OMAP4" icon="plugin://icons/obj16/devices.png">
			<contents name="Blaze_4430" desc="Blaze_4430" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_161193254336900">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>Blaze_4430</tag>
					<tag>OMAP4</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_15.projectspec">
					<filter.ref ref.id="filter_161193254336900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_Blaze_4430_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAP4430.Blaze_4430"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_16.projectspec">
					<filter.ref ref.id="filter_161193254336900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_Blaze_4430_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAP4430.Blaze_4430"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_161193254489600">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>Blaze_4430</tag>
					<tag>OMAP4</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_29.projectspec">
					<filter.ref ref.id="filter_161193254489600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_Blaze_4430_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAP4430.Blaze_4430"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_18.projectspec">
					<filter.ref ref.id="filter_161193254489600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_Blaze_4430_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAP4430.Blaze_4430"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_19.projectspec">
					<filter.ref ref.id="filter_161193254489600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_Blaze_4430_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAP4430.Blaze_4430"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_20.projectspec">
					<filter.ref ref.id="filter_161193254489600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_Blaze_4430_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAP4430.Blaze_4430"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_21.projectspec">
					<filter.ref ref.id="filter_161193254489600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_Blaze_4430_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAP4430.Blaze_4430"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_22.projectspec">
					<filter.ref ref.id="filter_161193254489600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_Blaze_4430_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAP4430.Blaze_4430"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_23.projectspec">
					<filter.ref ref.id="filter_161193254489600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_Blaze_4430_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAP4430.Blaze_4430"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_24.projectspec">
					<filter.ref ref.id="filter_161193254489600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_Blaze_4430_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAP4430.Blaze_4430"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_26.projectspec">
					<filter.ref ref.id="filter_161193254489600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_Blaze_4430_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAP4430.Blaze_4430"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_27.projectspec">
					<filter.ref ref.id="filter_161193254489600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_Blaze_4430_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAP4430.Blaze_4430"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_28.projectspec">
					<filter.ref ref.id="filter_161193254489600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_Blaze_4430_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAP4430.Blaze_4430"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_25.projectspec">
					<filter.ref ref.id="filter_161193254489600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_Blaze_4430_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAP4430.Blaze_4430"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="Blaze_4430" desc="Blaze_4430" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_161193258838100">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>Blaze_4430</tag>
					<tag>OMAP4</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_15.projectspec">
					<filter.ref ref.id="filter_161193258838100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_Blaze_4430_CortexM"/>
							<attribute key="device.variant" value="Cortex M.OMAP4430.Blaze_4430"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_16.projectspec">
					<filter.ref ref.id="filter_161193258838100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_Blaze_4430_CortexM"/>
							<attribute key="device.variant" value="Cortex M.OMAP4430.Blaze_4430"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_161193258960700">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>Blaze_4430</tag>
					<tag>OMAP4</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_29.projectspec">
					<filter.ref ref.id="filter_161193258960700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_Blaze_4430_CortexM"/>
							<attribute key="device.variant" value="Cortex M.OMAP4430.Blaze_4430"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_18.projectspec">
					<filter.ref ref.id="filter_161193258960700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_Blaze_4430_CortexM"/>
							<attribute key="device.variant" value="Cortex M.OMAP4430.Blaze_4430"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_19.projectspec">
					<filter.ref ref.id="filter_161193258960700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_Blaze_4430_CortexM"/>
							<attribute key="device.variant" value="Cortex M.OMAP4430.Blaze_4430"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_20.projectspec">
					<filter.ref ref.id="filter_161193258960700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_Blaze_4430_CortexM"/>
							<attribute key="device.variant" value="Cortex M.OMAP4430.Blaze_4430"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_21.projectspec">
					<filter.ref ref.id="filter_161193258960700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_Blaze_4430_CortexM"/>
							<attribute key="device.variant" value="Cortex M.OMAP4430.Blaze_4430"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_22.projectspec">
					<filter.ref ref.id="filter_161193258960700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_Blaze_4430_CortexM"/>
							<attribute key="device.variant" value="Cortex M.OMAP4430.Blaze_4430"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_23.projectspec">
					<filter.ref ref.id="filter_161193258960700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_Blaze_4430_CortexM"/>
							<attribute key="device.variant" value="Cortex M.OMAP4430.Blaze_4430"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_24.projectspec">
					<filter.ref ref.id="filter_161193258960700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_Blaze_4430_CortexM"/>
							<attribute key="device.variant" value="Cortex M.OMAP4430.Blaze_4430"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_26.projectspec">
					<filter.ref ref.id="filter_161193258960700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_Blaze_4430_CortexM"/>
							<attribute key="device.variant" value="Cortex M.OMAP4430.Blaze_4430"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_27.projectspec">
					<filter.ref ref.id="filter_161193258960700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_Blaze_4430_CortexM"/>
							<attribute key="device.variant" value="Cortex M.OMAP4430.Blaze_4430"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_28.projectspec">
					<filter.ref ref.id="filter_161193258960700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_Blaze_4430_CortexM"/>
							<attribute key="device.variant" value="Cortex M.OMAP4430.Blaze_4430"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_25.projectspec">
					<filter.ref ref.id="filter_161193258960700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_Blaze_4430_CortexM"/>
							<attribute key="device.variant" value="Cortex M.OMAP4430.Blaze_4430"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="Blaze_4460" desc="Blaze_4460" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_161193259844800">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>Blaze_4460</tag>
					<tag>OMAP4</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_15.projectspec">
					<filter.ref ref.id="filter_161193259844800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_Blaze_4460_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAP4460.Blaze_4460"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_16.projectspec">
					<filter.ref ref.id="filter_161193259844800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_Blaze_4460_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAP4460.Blaze_4460"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_161193259940300">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>Blaze_4460</tag>
					<tag>OMAP4</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_29.projectspec">
					<filter.ref ref.id="filter_161193259940300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_Blaze_4460_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAP4460.Blaze_4460"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_18.projectspec">
					<filter.ref ref.id="filter_161193259940300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_Blaze_4460_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAP4460.Blaze_4460"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_19.projectspec">
					<filter.ref ref.id="filter_161193259940300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_Blaze_4460_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAP4460.Blaze_4460"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_20.projectspec">
					<filter.ref ref.id="filter_161193259940300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_Blaze_4460_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAP4460.Blaze_4460"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_21.projectspec">
					<filter.ref ref.id="filter_161193259940300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_Blaze_4460_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAP4460.Blaze_4460"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_22.projectspec">
					<filter.ref ref.id="filter_161193259940300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_Blaze_4460_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAP4460.Blaze_4460"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_23.projectspec">
					<filter.ref ref.id="filter_161193259940300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_Blaze_4460_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAP4460.Blaze_4460"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_24.projectspec">
					<filter.ref ref.id="filter_161193259940300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_Blaze_4460_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAP4460.Blaze_4460"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_26.projectspec">
					<filter.ref ref.id="filter_161193259940300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_Blaze_4460_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAP4460.Blaze_4460"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_27.projectspec">
					<filter.ref ref.id="filter_161193259940300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_Blaze_4460_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAP4460.Blaze_4460"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_28.projectspec">
					<filter.ref ref.id="filter_161193259940300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_Blaze_4460_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAP4460.Blaze_4460"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_25.projectspec">
					<filter.ref ref.id="filter_161193259940300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_Blaze_4460_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAP4460.Blaze_4460"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="Blaze_4460" desc="Blaze_4460" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_161193260735200">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>Blaze_4460</tag>
					<tag>OMAP4</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_15.projectspec">
					<filter.ref ref.id="filter_161193260735200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_Blaze_4460_CortexM"/>
							<attribute key="device.variant" value="Cortex M.OMAP4460.Blaze_4460"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_16.projectspec">
					<filter.ref ref.id="filter_161193260735200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_Blaze_4460_CortexM"/>
							<attribute key="device.variant" value="Cortex M.OMAP4460.Blaze_4460"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_161193260829600">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>Blaze_4460</tag>
					<tag>OMAP4</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_29.projectspec">
					<filter.ref ref.id="filter_161193260829600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_Blaze_4460_CortexM"/>
							<attribute key="device.variant" value="Cortex M.OMAP4460.Blaze_4460"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_18.projectspec">
					<filter.ref ref.id="filter_161193260829600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_Blaze_4460_CortexM"/>
							<attribute key="device.variant" value="Cortex M.OMAP4460.Blaze_4460"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_19.projectspec">
					<filter.ref ref.id="filter_161193260829600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_Blaze_4460_CortexM"/>
							<attribute key="device.variant" value="Cortex M.OMAP4460.Blaze_4460"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_20.projectspec">
					<filter.ref ref.id="filter_161193260829600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_Blaze_4460_CortexM"/>
							<attribute key="device.variant" value="Cortex M.OMAP4460.Blaze_4460"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_21.projectspec">
					<filter.ref ref.id="filter_161193260829600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_Blaze_4460_CortexM"/>
							<attribute key="device.variant" value="Cortex M.OMAP4460.Blaze_4460"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_22.projectspec">
					<filter.ref ref.id="filter_161193260829600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_Blaze_4460_CortexM"/>
							<attribute key="device.variant" value="Cortex M.OMAP4460.Blaze_4460"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_23.projectspec">
					<filter.ref ref.id="filter_161193260829600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_Blaze_4460_CortexM"/>
							<attribute key="device.variant" value="Cortex M.OMAP4460.Blaze_4460"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_24.projectspec">
					<filter.ref ref.id="filter_161193260829600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_Blaze_4460_CortexM"/>
							<attribute key="device.variant" value="Cortex M.OMAP4460.Blaze_4460"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_26.projectspec">
					<filter.ref ref.id="filter_161193260829600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_Blaze_4460_CortexM"/>
							<attribute key="device.variant" value="Cortex M.OMAP4460.Blaze_4460"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_27.projectspec">
					<filter.ref ref.id="filter_161193260829600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_Blaze_4460_CortexM"/>
							<attribute key="device.variant" value="Cortex M.OMAP4460.Blaze_4460"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_28.projectspec">
					<filter.ref ref.id="filter_161193260829600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_Blaze_4460_CortexM"/>
							<attribute key="device.variant" value="Cortex M.OMAP4460.Blaze_4460"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_25.projectspec">
					<filter.ref ref.id="filter_161193260829600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_Blaze_4460_CortexM"/>
							<attribute key="device.variant" value="Cortex M.OMAP4460.Blaze_4460"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="OMAP4430" desc="OMAP4430" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_161193262534600">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>OMAP4430</tag>
					<tag>OMAP4</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_15.projectspec">
					<filter.ref ref.id="filter_161193262534600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_OMAP4430_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAP4430"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_16.projectspec">
					<filter.ref ref.id="filter_161193262534600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_OMAP4430_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAP4430"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_161193262631400">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>OMAP4430</tag>
					<tag>OMAP4</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_29.projectspec">
					<filter.ref ref.id="filter_161193262631400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_OMAP4430_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAP4430"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_18.projectspec">
					<filter.ref ref.id="filter_161193262631400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_OMAP4430_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAP4430"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_19.projectspec">
					<filter.ref ref.id="filter_161193262631400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_OMAP4430_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAP4430"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_20.projectspec">
					<filter.ref ref.id="filter_161193262631400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_OMAP4430_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAP4430"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_21.projectspec">
					<filter.ref ref.id="filter_161193262631400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_OMAP4430_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAP4430"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_22.projectspec">
					<filter.ref ref.id="filter_161193262631400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_OMAP4430_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAP4430"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_23.projectspec">
					<filter.ref ref.id="filter_161193262631400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_OMAP4430_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAP4430"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_24.projectspec">
					<filter.ref ref.id="filter_161193262631400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_OMAP4430_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAP4430"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_26.projectspec">
					<filter.ref ref.id="filter_161193262631400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_OMAP4430_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAP4430"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_27.projectspec">
					<filter.ref ref.id="filter_161193262631400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_OMAP4430_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAP4430"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_28.projectspec">
					<filter.ref ref.id="filter_161193262631400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_OMAP4430_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAP4430"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_25.projectspec">
					<filter.ref ref.id="filter_161193262631400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_OMAP4430_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAP4430"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="OMAP4430" desc="OMAP4430" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_161193263344800">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>OMAP4430</tag>
					<tag>OMAP4</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_15.projectspec">
					<filter.ref ref.id="filter_161193263344800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_OMAP4430_CortexM"/>
							<attribute key="device.variant" value="Cortex M.OMAP4430"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_16.projectspec">
					<filter.ref ref.id="filter_161193263344800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_OMAP4430_CortexM"/>
							<attribute key="device.variant" value="Cortex M.OMAP4430"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_161193263435900">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>OMAP4430</tag>
					<tag>OMAP4</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_29.projectspec">
					<filter.ref ref.id="filter_161193263435900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_OMAP4430_CortexM"/>
							<attribute key="device.variant" value="Cortex M.OMAP4430"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_18.projectspec">
					<filter.ref ref.id="filter_161193263435900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_OMAP4430_CortexM"/>
							<attribute key="device.variant" value="Cortex M.OMAP4430"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_19.projectspec">
					<filter.ref ref.id="filter_161193263435900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_OMAP4430_CortexM"/>
							<attribute key="device.variant" value="Cortex M.OMAP4430"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_20.projectspec">
					<filter.ref ref.id="filter_161193263435900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_OMAP4430_CortexM"/>
							<attribute key="device.variant" value="Cortex M.OMAP4430"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_21.projectspec">
					<filter.ref ref.id="filter_161193263435900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_OMAP4430_CortexM"/>
							<attribute key="device.variant" value="Cortex M.OMAP4430"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_22.projectspec">
					<filter.ref ref.id="filter_161193263435900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_OMAP4430_CortexM"/>
							<attribute key="device.variant" value="Cortex M.OMAP4430"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_23.projectspec">
					<filter.ref ref.id="filter_161193263435900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_OMAP4430_CortexM"/>
							<attribute key="device.variant" value="Cortex M.OMAP4430"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_24.projectspec">
					<filter.ref ref.id="filter_161193263435900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_OMAP4430_CortexM"/>
							<attribute key="device.variant" value="Cortex M.OMAP4430"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_26.projectspec">
					<filter.ref ref.id="filter_161193263435900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_OMAP4430_CortexM"/>
							<attribute key="device.variant" value="Cortex M.OMAP4430"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_27.projectspec">
					<filter.ref ref.id="filter_161193263435900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_OMAP4430_CortexM"/>
							<attribute key="device.variant" value="Cortex M.OMAP4430"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_28.projectspec">
					<filter.ref ref.id="filter_161193263435900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_OMAP4430_CortexM"/>
							<attribute key="device.variant" value="Cortex M.OMAP4430"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_25.projectspec">
					<filter.ref ref.id="filter_161193263435900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_OMAP4430_CortexM"/>
							<attribute key="device.variant" value="Cortex M.OMAP4430"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="OMAP4460" desc="OMAP4460" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_161193264174400">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>OMAP4460</tag>
					<tag>OMAP4</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_15.projectspec">
					<filter.ref ref.id="filter_161193264174400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_OMAP4460_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAP4460"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_16.projectspec">
					<filter.ref ref.id="filter_161193264174400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_OMAP4460_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAP4460"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_161193264261900">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>OMAP4460</tag>
					<tag>OMAP4</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_29.projectspec">
					<filter.ref ref.id="filter_161193264261900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_OMAP4460_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAP4460"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_18.projectspec">
					<filter.ref ref.id="filter_161193264261900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_OMAP4460_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAP4460"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_19.projectspec">
					<filter.ref ref.id="filter_161193264261900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_OMAP4460_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAP4460"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_20.projectspec">
					<filter.ref ref.id="filter_161193264261900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_OMAP4460_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAP4460"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_21.projectspec">
					<filter.ref ref.id="filter_161193264261900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_OMAP4460_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAP4460"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_22.projectspec">
					<filter.ref ref.id="filter_161193264261900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_OMAP4460_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAP4460"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_23.projectspec">
					<filter.ref ref.id="filter_161193264261900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_OMAP4460_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAP4460"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_24.projectspec">
					<filter.ref ref.id="filter_161193264261900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_OMAP4460_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAP4460"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_26.projectspec">
					<filter.ref ref.id="filter_161193264261900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_OMAP4460_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAP4460"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_27.projectspec">
					<filter.ref ref.id="filter_161193264261900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_OMAP4460_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAP4460"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_28.projectspec">
					<filter.ref ref.id="filter_161193264261900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_OMAP4460_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAP4460"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_25.projectspec">
					<filter.ref ref.id="filter_161193264261900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_OMAP4460_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAP4460"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="OMAP4460" desc="OMAP4460" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_161193264962900">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>OMAP4460</tag>
					<tag>OMAP4</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_15.projectspec">
					<filter.ref ref.id="filter_161193264962900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_OMAP4460_CortexM"/>
							<attribute key="device.variant" value="Cortex M.OMAP4460"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_16.projectspec">
					<filter.ref ref.id="filter_161193264962900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_OMAP4460_CortexM"/>
							<attribute key="device.variant" value="Cortex M.OMAP4460"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_161193265054500">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>OMAP4460</tag>
					<tag>OMAP4</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_29.projectspec">
					<filter.ref ref.id="filter_161193265054500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_OMAP4460_CortexM"/>
							<attribute key="device.variant" value="Cortex M.OMAP4460"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_18.projectspec">
					<filter.ref ref.id="filter_161193265054500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_OMAP4460_CortexM"/>
							<attribute key="device.variant" value="Cortex M.OMAP4460"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_19.projectspec">
					<filter.ref ref.id="filter_161193265054500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_OMAP4460_CortexM"/>
							<attribute key="device.variant" value="Cortex M.OMAP4460"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_20.projectspec">
					<filter.ref ref.id="filter_161193265054500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_OMAP4460_CortexM"/>
							<attribute key="device.variant" value="Cortex M.OMAP4460"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_21.projectspec">
					<filter.ref ref.id="filter_161193265054500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_OMAP4460_CortexM"/>
							<attribute key="device.variant" value="Cortex M.OMAP4460"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_22.projectspec">
					<filter.ref ref.id="filter_161193265054500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_OMAP4460_CortexM"/>
							<attribute key="device.variant" value="Cortex M.OMAP4460"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_23.projectspec">
					<filter.ref ref.id="filter_161193265054500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_OMAP4460_CortexM"/>
							<attribute key="device.variant" value="Cortex M.OMAP4460"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_24.projectspec">
					<filter.ref ref.id="filter_161193265054500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_OMAP4460_CortexM"/>
							<attribute key="device.variant" value="Cortex M.OMAP4460"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_26.projectspec">
					<filter.ref ref.id="filter_161193265054500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_OMAP4460_CortexM"/>
							<attribute key="device.variant" value="Cortex M.OMAP4460"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_27.projectspec">
					<filter.ref ref.id="filter_161193265054500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_OMAP4460_CortexM"/>
							<attribute key="device.variant" value="Cortex M.OMAP4460"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_28.projectspec">
					<filter.ref ref.id="filter_161193265054500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_OMAP4460_CortexM"/>
							<attribute key="device.variant" value="Cortex M.OMAP4460"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_25.projectspec">
					<filter.ref ref.id="filter_161193265054500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_OMAP4460_CortexM"/>
							<attribute key="device.variant" value="Cortex M.OMAP4460"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="PandaBoard" desc="PandaBoard" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_161193266474600">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>PandaBoard</tag>
					<tag>OMAP4</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_15.projectspec">
					<filter.ref ref.id="filter_161193266474600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_PandaBoard_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAP4430.PandaBoard"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_16.projectspec">
					<filter.ref ref.id="filter_161193266474600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_PandaBoard_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAP4430.PandaBoard"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_161193266569600">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>PandaBoard</tag>
					<tag>OMAP4</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_29.projectspec">
					<filter.ref ref.id="filter_161193266569600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_PandaBoard_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAP4430.PandaBoard"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_18.projectspec">
					<filter.ref ref.id="filter_161193266569600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_PandaBoard_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAP4430.PandaBoard"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_19.projectspec">
					<filter.ref ref.id="filter_161193266569600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_PandaBoard_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAP4430.PandaBoard"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_20.projectspec">
					<filter.ref ref.id="filter_161193266569600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_PandaBoard_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAP4430.PandaBoard"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_21.projectspec">
					<filter.ref ref.id="filter_161193266569600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_PandaBoard_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAP4430.PandaBoard"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_22.projectspec">
					<filter.ref ref.id="filter_161193266569600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_PandaBoard_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAP4430.PandaBoard"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_23.projectspec">
					<filter.ref ref.id="filter_161193266569600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_PandaBoard_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAP4430.PandaBoard"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_24.projectspec">
					<filter.ref ref.id="filter_161193266569600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_PandaBoard_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAP4430.PandaBoard"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_26.projectspec">
					<filter.ref ref.id="filter_161193266569600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_PandaBoard_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAP4430.PandaBoard"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_27.projectspec">
					<filter.ref ref.id="filter_161193266569600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_PandaBoard_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAP4430.PandaBoard"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_28.projectspec">
					<filter.ref ref.id="filter_161193266569600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_PandaBoard_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAP4430.PandaBoard"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_25.projectspec">
					<filter.ref ref.id="filter_161193266569600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_PandaBoard_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAP4430.PandaBoard"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="PandaBoard" desc="PandaBoard" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_161193267371000">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>PandaBoard</tag>
					<tag>OMAP4</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_15.projectspec">
					<filter.ref ref.id="filter_161193267371000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_PandaBoard_CortexM"/>
							<attribute key="device.variant" value="Cortex M.OMAP4430.PandaBoard"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_16.projectspec">
					<filter.ref ref.id="filter_161193267371000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_PandaBoard_CortexM"/>
							<attribute key="device.variant" value="Cortex M.OMAP4430.PandaBoard"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_161193267464900">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>PandaBoard</tag>
					<tag>OMAP4</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_29.projectspec">
					<filter.ref ref.id="filter_161193267464900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_PandaBoard_CortexM"/>
							<attribute key="device.variant" value="Cortex M.OMAP4430.PandaBoard"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_18.projectspec">
					<filter.ref ref.id="filter_161193267464900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_PandaBoard_CortexM"/>
							<attribute key="device.variant" value="Cortex M.OMAP4430.PandaBoard"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_19.projectspec">
					<filter.ref ref.id="filter_161193267464900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_PandaBoard_CortexM"/>
							<attribute key="device.variant" value="Cortex M.OMAP4430.PandaBoard"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_20.projectspec">
					<filter.ref ref.id="filter_161193267464900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_PandaBoard_CortexM"/>
							<attribute key="device.variant" value="Cortex M.OMAP4430.PandaBoard"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_21.projectspec">
					<filter.ref ref.id="filter_161193267464900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_PandaBoard_CortexM"/>
							<attribute key="device.variant" value="Cortex M.OMAP4430.PandaBoard"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_22.projectspec">
					<filter.ref ref.id="filter_161193267464900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_PandaBoard_CortexM"/>
							<attribute key="device.variant" value="Cortex M.OMAP4430.PandaBoard"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_23.projectspec">
					<filter.ref ref.id="filter_161193267464900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_PandaBoard_CortexM"/>
							<attribute key="device.variant" value="Cortex M.OMAP4430.PandaBoard"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_24.projectspec">
					<filter.ref ref.id="filter_161193267464900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_PandaBoard_CortexM"/>
							<attribute key="device.variant" value="Cortex M.OMAP4430.PandaBoard"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_26.projectspec">
					<filter.ref ref.id="filter_161193267464900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_PandaBoard_CortexM"/>
							<attribute key="device.variant" value="Cortex M.OMAP4430.PandaBoard"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_27.projectspec">
					<filter.ref ref.id="filter_161193267464900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_PandaBoard_CortexM"/>
							<attribute key="device.variant" value="Cortex M.OMAP4430.PandaBoard"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_28.projectspec">
					<filter.ref ref.id="filter_161193267464900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_PandaBoard_CortexM"/>
							<attribute key="device.variant" value="Cortex M.OMAP4430.PandaBoard"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_25.projectspec">
					<filter.ref ref.id="filter_161193267464900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_PandaBoard_CortexM"/>
							<attribute key="device.variant" value="Cortex M.OMAP4430.PandaBoard"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="PandaBoard_ES" desc="PandaBoard_ES" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_161193268357800">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>PandaBoard_ES</tag>
					<tag>OMAP4</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_15.projectspec">
					<filter.ref ref.id="filter_161193268357800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_PandaBoard_ES_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAP4460.PandaBoard_ES"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_16.projectspec">
					<filter.ref ref.id="filter_161193268357800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_PandaBoard_ES_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAP4460.PandaBoard_ES"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_161193268458000">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>PandaBoard_ES</tag>
					<tag>OMAP4</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_29.projectspec">
					<filter.ref ref.id="filter_161193268458000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_PandaBoard_ES_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAP4460.PandaBoard_ES"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_18.projectspec">
					<filter.ref ref.id="filter_161193268458000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_PandaBoard_ES_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAP4460.PandaBoard_ES"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_19.projectspec">
					<filter.ref ref.id="filter_161193268458000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_PandaBoard_ES_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAP4460.PandaBoard_ES"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_20.projectspec">
					<filter.ref ref.id="filter_161193268458000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_PandaBoard_ES_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAP4460.PandaBoard_ES"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_21.projectspec">
					<filter.ref ref.id="filter_161193268458000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_PandaBoard_ES_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAP4460.PandaBoard_ES"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_22.projectspec">
					<filter.ref ref.id="filter_161193268458000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_PandaBoard_ES_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAP4460.PandaBoard_ES"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_23.projectspec">
					<filter.ref ref.id="filter_161193268458000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_PandaBoard_ES_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAP4460.PandaBoard_ES"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_24.projectspec">
					<filter.ref ref.id="filter_161193268458000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_PandaBoard_ES_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAP4460.PandaBoard_ES"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_26.projectspec">
					<filter.ref ref.id="filter_161193268458000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_PandaBoard_ES_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAP4460.PandaBoard_ES"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_27.projectspec">
					<filter.ref ref.id="filter_161193268458000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_PandaBoard_ES_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAP4460.PandaBoard_ES"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_28.projectspec">
					<filter.ref ref.id="filter_161193268458000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_PandaBoard_ES_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAP4460.PandaBoard_ES"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_25.projectspec">
					<filter.ref ref.id="filter_161193268458000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_PandaBoard_ES_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAP4460.PandaBoard_ES"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="PandaBoard_ES" desc="PandaBoard_ES" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_161193269276300">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>PandaBoard_ES</tag>
					<tag>OMAP4</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_15.projectspec">
					<filter.ref ref.id="filter_161193269276300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_PandaBoard_ES_CortexM"/>
							<attribute key="device.variant" value="Cortex M.OMAP4460.PandaBoard_ES"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_16.projectspec">
					<filter.ref ref.id="filter_161193269276300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_PandaBoard_ES_CortexM"/>
							<attribute key="device.variant" value="Cortex M.OMAP4460.PandaBoard_ES"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_161193270169800">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>PandaBoard_ES</tag>
					<tag>OMAP4</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_29.projectspec">
					<filter.ref ref.id="filter_161193270169800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_PandaBoard_ES_CortexM"/>
							<attribute key="device.variant" value="Cortex M.OMAP4460.PandaBoard_ES"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_18.projectspec">
					<filter.ref ref.id="filter_161193270169800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_PandaBoard_ES_CortexM"/>
							<attribute key="device.variant" value="Cortex M.OMAP4460.PandaBoard_ES"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_19.projectspec">
					<filter.ref ref.id="filter_161193270169800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_PandaBoard_ES_CortexM"/>
							<attribute key="device.variant" value="Cortex M.OMAP4460.PandaBoard_ES"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_20.projectspec">
					<filter.ref ref.id="filter_161193270169800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_PandaBoard_ES_CortexM"/>
							<attribute key="device.variant" value="Cortex M.OMAP4460.PandaBoard_ES"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_21.projectspec">
					<filter.ref ref.id="filter_161193270169800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_PandaBoard_ES_CortexM"/>
							<attribute key="device.variant" value="Cortex M.OMAP4460.PandaBoard_ES"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_22.projectspec">
					<filter.ref ref.id="filter_161193270169800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_PandaBoard_ES_CortexM"/>
							<attribute key="device.variant" value="Cortex M.OMAP4460.PandaBoard_ES"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_23.projectspec">
					<filter.ref ref.id="filter_161193270169800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_PandaBoard_ES_CortexM"/>
							<attribute key="device.variant" value="Cortex M.OMAP4460.PandaBoard_ES"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_24.projectspec">
					<filter.ref ref.id="filter_161193270169800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_PandaBoard_ES_CortexM"/>
							<attribute key="device.variant" value="Cortex M.OMAP4460.PandaBoard_ES"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_26.projectspec">
					<filter.ref ref.id="filter_161193270169800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_PandaBoard_ES_CortexM"/>
							<attribute key="device.variant" value="Cortex M.OMAP4460.PandaBoard_ES"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_27.projectspec">
					<filter.ref ref.id="filter_161193270169800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_PandaBoard_ES_CortexM"/>
							<attribute key="device.variant" value="Cortex M.OMAP4460.PandaBoard_ES"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_28.projectspec">
					<filter.ref ref.id="filter_161193270169800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_PandaBoard_ES_CortexM"/>
							<attribute key="device.variant" value="Cortex M.OMAP4460.PandaBoard_ES"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_25.projectspec">
					<filter.ref ref.id="filter_161193270169800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_PandaBoard_ES_CortexM"/>
							<attribute key="device.variant" value="Cortex M.OMAP4460.PandaBoard_ES"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
		</contents>
		<contents name="OMAP5" desc="OMAP5" icon="plugin://icons/obj16/devices.png">
			<contents name="OMAP5430" desc="OMAP5430" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_161193271079500">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>OMAP5430</tag>
					<tag>OMAP5</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_15.projectspec">
					<filter.ref ref.id="filter_161193271079500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_OMAP5430_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAP5430"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_16.projectspec">
					<filter.ref ref.id="filter_161193271079500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_OMAP5430_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAP5430"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_161193271173400">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>OMAP5430</tag>
					<tag>OMAP5</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_29.projectspec">
					<filter.ref ref.id="filter_161193271173400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_OMAP5430_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAP5430"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_18.projectspec">
					<filter.ref ref.id="filter_161193271173400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_OMAP5430_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAP5430"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_19.projectspec">
					<filter.ref ref.id="filter_161193271173400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_OMAP5430_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAP5430"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_20.projectspec">
					<filter.ref ref.id="filter_161193271173400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_OMAP5430_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAP5430"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_21.projectspec">
					<filter.ref ref.id="filter_161193271173400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_OMAP5430_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAP5430"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_22.projectspec">
					<filter.ref ref.id="filter_161193271173400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_OMAP5430_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAP5430"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_23.projectspec">
					<filter.ref ref.id="filter_161193271173400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_OMAP5430_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAP5430"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_24.projectspec">
					<filter.ref ref.id="filter_161193271173400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_OMAP5430_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAP5430"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_26.projectspec">
					<filter.ref ref.id="filter_161193271173400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_OMAP5430_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAP5430"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_27.projectspec">
					<filter.ref ref.id="filter_161193271173400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_OMAP5430_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAP5430"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_28.projectspec">
					<filter.ref ref.id="filter_161193271173400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_OMAP5430_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAP5430"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_25.projectspec">
					<filter.ref ref.id="filter_161193271173400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_OMAP5430_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAP5430"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="OMAP5430" desc="OMAP5430" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_161193271898900">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>OMAP5430</tag>
					<tag>OMAP5</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_15.projectspec">
					<filter.ref ref.id="filter_161193271898900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_OMAP5430_CortexM"/>
							<attribute key="device.variant" value="Cortex M.OMAP5430"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_16.projectspec">
					<filter.ref ref.id="filter_161193271898900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_OMAP5430_CortexM"/>
							<attribute key="device.variant" value="Cortex M.OMAP5430"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_161193271988900">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>OMAP5430</tag>
					<tag>OMAP5</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_29.projectspec">
					<filter.ref ref.id="filter_161193271988900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_OMAP5430_CortexM"/>
							<attribute key="device.variant" value="Cortex M.OMAP5430"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_18.projectspec">
					<filter.ref ref.id="filter_161193271988900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_OMAP5430_CortexM"/>
							<attribute key="device.variant" value="Cortex M.OMAP5430"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_19.projectspec">
					<filter.ref ref.id="filter_161193271988900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_OMAP5430_CortexM"/>
							<attribute key="device.variant" value="Cortex M.OMAP5430"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_20.projectspec">
					<filter.ref ref.id="filter_161193271988900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_OMAP5430_CortexM"/>
							<attribute key="device.variant" value="Cortex M.OMAP5430"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_21.projectspec">
					<filter.ref ref.id="filter_161193271988900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_OMAP5430_CortexM"/>
							<attribute key="device.variant" value="Cortex M.OMAP5430"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_22.projectspec">
					<filter.ref ref.id="filter_161193271988900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_OMAP5430_CortexM"/>
							<attribute key="device.variant" value="Cortex M.OMAP5430"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_23.projectspec">
					<filter.ref ref.id="filter_161193271988900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_OMAP5430_CortexM"/>
							<attribute key="device.variant" value="Cortex M.OMAP5430"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_24.projectspec">
					<filter.ref ref.id="filter_161193271988900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_OMAP5430_CortexM"/>
							<attribute key="device.variant" value="Cortex M.OMAP5430"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_26.projectspec">
					<filter.ref ref.id="filter_161193271988900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_OMAP5430_CortexM"/>
							<attribute key="device.variant" value="Cortex M.OMAP5430"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_27.projectspec">
					<filter.ref ref.id="filter_161193271988900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_OMAP5430_CortexM"/>
							<attribute key="device.variant" value="Cortex M.OMAP5430"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_28.projectspec">
					<filter.ref ref.id="filter_161193271988900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_OMAP5430_CortexM"/>
							<attribute key="device.variant" value="Cortex M.OMAP5430"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_25.projectspec">
					<filter.ref ref.id="filter_161193271988900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_OMAP5430_CortexM"/>
							<attribute key="device.variant" value="Cortex M.OMAP5430"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="OMAP5432" desc="OMAP5432" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_161193272732100">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>OMAP5432</tag>
					<tag>OMAP5</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_15.projectspec">
					<filter.ref ref.id="filter_161193272732100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_OMAP5432_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAP5432"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_16.projectspec">
					<filter.ref ref.id="filter_161193272732100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_OMAP5432_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAP5432"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_161193272819300">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>OMAP5432</tag>
					<tag>OMAP5</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_29.projectspec">
					<filter.ref ref.id="filter_161193272819300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_OMAP5432_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAP5432"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_18.projectspec">
					<filter.ref ref.id="filter_161193272819300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_OMAP5432_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAP5432"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_19.projectspec">
					<filter.ref ref.id="filter_161193272819300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_OMAP5432_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAP5432"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_20.projectspec">
					<filter.ref ref.id="filter_161193272819300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_OMAP5432_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAP5432"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_21.projectspec">
					<filter.ref ref.id="filter_161193272819300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_OMAP5432_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAP5432"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_22.projectspec">
					<filter.ref ref.id="filter_161193272819300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_OMAP5432_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAP5432"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_23.projectspec">
					<filter.ref ref.id="filter_161193272819300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_OMAP5432_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAP5432"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_24.projectspec">
					<filter.ref ref.id="filter_161193272819300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_OMAP5432_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAP5432"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_26.projectspec">
					<filter.ref ref.id="filter_161193272819300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_OMAP5432_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAP5432"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_27.projectspec">
					<filter.ref ref.id="filter_161193272819300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_OMAP5432_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAP5432"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_28.projectspec">
					<filter.ref ref.id="filter_161193272819300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_OMAP5432_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAP5432"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_25.projectspec">
					<filter.ref ref.id="filter_161193272819300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_OMAP5432_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAP5432"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="OMAP5432" desc="OMAP5432" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_161193274322800">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>OMAP5432</tag>
					<tag>OMAP5</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_15.projectspec">
					<filter.ref ref.id="filter_161193274322800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_OMAP5432_CortexM"/>
							<attribute key="device.variant" value="Cortex M.OMAP5432"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_16.projectspec">
					<filter.ref ref.id="filter_161193274322800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_OMAP5432_CortexM"/>
							<attribute key="device.variant" value="Cortex M.OMAP5432"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_161193274416100">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>OMAP5432</tag>
					<tag>OMAP5</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_29.projectspec">
					<filter.ref ref.id="filter_161193274416100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_OMAP5432_CortexM"/>
							<attribute key="device.variant" value="Cortex M.OMAP5432"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_18.projectspec">
					<filter.ref ref.id="filter_161193274416100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_OMAP5432_CortexM"/>
							<attribute key="device.variant" value="Cortex M.OMAP5432"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_19.projectspec">
					<filter.ref ref.id="filter_161193274416100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_OMAP5432_CortexM"/>
							<attribute key="device.variant" value="Cortex M.OMAP5432"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_20.projectspec">
					<filter.ref ref.id="filter_161193274416100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_OMAP5432_CortexM"/>
							<attribute key="device.variant" value="Cortex M.OMAP5432"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_21.projectspec">
					<filter.ref ref.id="filter_161193274416100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_OMAP5432_CortexM"/>
							<attribute key="device.variant" value="Cortex M.OMAP5432"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_22.projectspec">
					<filter.ref ref.id="filter_161193274416100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_OMAP5432_CortexM"/>
							<attribute key="device.variant" value="Cortex M.OMAP5432"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_23.projectspec">
					<filter.ref ref.id="filter_161193274416100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_OMAP5432_CortexM"/>
							<attribute key="device.variant" value="Cortex M.OMAP5432"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_24.projectspec">
					<filter.ref ref.id="filter_161193274416100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_OMAP5432_CortexM"/>
							<attribute key="device.variant" value="Cortex M.OMAP5432"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_26.projectspec">
					<filter.ref ref.id="filter_161193274416100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_OMAP5432_CortexM"/>
							<attribute key="device.variant" value="Cortex M.OMAP5432"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_27.projectspec">
					<filter.ref ref.id="filter_161193274416100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_OMAP5432_CortexM"/>
							<attribute key="device.variant" value="Cortex M.OMAP5432"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_28.projectspec">
					<filter.ref ref.id="filter_161193274416100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_OMAP5432_CortexM"/>
							<attribute key="device.variant" value="Cortex M.OMAP5432"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_25.projectspec">
					<filter.ref ref.id="filter_161193274416100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_OMAP5432_CortexM"/>
							<attribute key="device.variant" value="Cortex M.OMAP5432"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="OMAP5432_UEVM" desc="OMAP5432_UEVM" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_161193275173000">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>OMAP5432_UEVM</tag>
					<tag>OMAP5</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_15.projectspec">
					<filter.ref ref.id="filter_161193275173000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_OMAP5432_UEVM_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAP5432.OMAP5432_UEVM"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_16.projectspec">
					<filter.ref ref.id="filter_161193275173000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_OMAP5432_UEVM_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAP5432.OMAP5432_UEVM"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_161193275269000">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>OMAP5432_UEVM</tag>
					<tag>OMAP5</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_29.projectspec">
					<filter.ref ref.id="filter_161193275269000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_OMAP5432_UEVM_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAP5432.OMAP5432_UEVM"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_18.projectspec">
					<filter.ref ref.id="filter_161193275269000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_OMAP5432_UEVM_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAP5432.OMAP5432_UEVM"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_19.projectspec">
					<filter.ref ref.id="filter_161193275269000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_OMAP5432_UEVM_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAP5432.OMAP5432_UEVM"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_20.projectspec">
					<filter.ref ref.id="filter_161193275269000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_OMAP5432_UEVM_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAP5432.OMAP5432_UEVM"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_21.projectspec">
					<filter.ref ref.id="filter_161193275269000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_OMAP5432_UEVM_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAP5432.OMAP5432_UEVM"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_22.projectspec">
					<filter.ref ref.id="filter_161193275269000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_OMAP5432_UEVM_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAP5432.OMAP5432_UEVM"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_23.projectspec">
					<filter.ref ref.id="filter_161193275269000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_OMAP5432_UEVM_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAP5432.OMAP5432_UEVM"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_24.projectspec">
					<filter.ref ref.id="filter_161193275269000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_OMAP5432_UEVM_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAP5432.OMAP5432_UEVM"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_26.projectspec">
					<filter.ref ref.id="filter_161193275269000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_OMAP5432_UEVM_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAP5432.OMAP5432_UEVM"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_27.projectspec">
					<filter.ref ref.id="filter_161193275269000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_OMAP5432_UEVM_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAP5432.OMAP5432_UEVM"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_28.projectspec">
					<filter.ref ref.id="filter_161193275269000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_OMAP5432_UEVM_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAP5432.OMAP5432_UEVM"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_25.projectspec">
					<filter.ref ref.id="filter_161193275269000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_OMAP5432_UEVM_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAP5432.OMAP5432_UEVM"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="OMAP5432_UEVM" desc="OMAP5432_UEVM" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_161193276059900">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>OMAP5432_UEVM</tag>
					<tag>OMAP5</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_15.projectspec">
					<filter.ref ref.id="filter_161193276059900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_OMAP5432_UEVM_CortexM"/>
							<attribute key="device.variant" value="Cortex M.OMAP5432.OMAP5432_UEVM"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_16.projectspec">
					<filter.ref ref.id="filter_161193276059900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_OMAP5432_UEVM_CortexM"/>
							<attribute key="device.variant" value="Cortex M.OMAP5432.OMAP5432_UEVM"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_161193276154700">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>OMAP5432_UEVM</tag>
					<tag>OMAP5</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_29.projectspec">
					<filter.ref ref.id="filter_161193276154700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_OMAP5432_UEVM_CortexM"/>
							<attribute key="device.variant" value="Cortex M.OMAP5432.OMAP5432_UEVM"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_18.projectspec">
					<filter.ref ref.id="filter_161193276154700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_OMAP5432_UEVM_CortexM"/>
							<attribute key="device.variant" value="Cortex M.OMAP5432.OMAP5432_UEVM"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_19.projectspec">
					<filter.ref ref.id="filter_161193276154700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_OMAP5432_UEVM_CortexM"/>
							<attribute key="device.variant" value="Cortex M.OMAP5432.OMAP5432_UEVM"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_20.projectspec">
					<filter.ref ref.id="filter_161193276154700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_OMAP5432_UEVM_CortexM"/>
							<attribute key="device.variant" value="Cortex M.OMAP5432.OMAP5432_UEVM"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_21.projectspec">
					<filter.ref ref.id="filter_161193276154700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_OMAP5432_UEVM_CortexM"/>
							<attribute key="device.variant" value="Cortex M.OMAP5432.OMAP5432_UEVM"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_22.projectspec">
					<filter.ref ref.id="filter_161193276154700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_OMAP5432_UEVM_CortexM"/>
							<attribute key="device.variant" value="Cortex M.OMAP5432.OMAP5432_UEVM"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_23.projectspec">
					<filter.ref ref.id="filter_161193276154700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_OMAP5432_UEVM_CortexM"/>
							<attribute key="device.variant" value="Cortex M.OMAP5432.OMAP5432_UEVM"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_24.projectspec">
					<filter.ref ref.id="filter_161193276154700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_OMAP5432_UEVM_CortexM"/>
							<attribute key="device.variant" value="Cortex M.OMAP5432.OMAP5432_UEVM"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_26.projectspec">
					<filter.ref ref.id="filter_161193276154700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_OMAP5432_UEVM_CortexM"/>
							<attribute key="device.variant" value="Cortex M.OMAP5432.OMAP5432_UEVM"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_27.projectspec">
					<filter.ref ref.id="filter_161193276154700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_OMAP5432_UEVM_CortexM"/>
							<attribute key="device.variant" value="Cortex M.OMAP5432.OMAP5432_UEVM"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_28.projectspec">
					<filter.ref ref.id="filter_161193276154700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_OMAP5432_UEVM_CortexM"/>
							<attribute key="device.variant" value="Cortex M.OMAP5432.OMAP5432_UEVM"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_25.projectspec">
					<filter.ref ref.id="filter_161193276154700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_OMAP5432_UEVM_CortexM"/>
							<attribute key="device.variant" value="Cortex M.OMAP5432.OMAP5432_UEVM"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
		</contents>
	</contents>
	<contents name="C6000" desc="C6000" icon="plugin://icons/obj16/devices.png">
		<contents name="Generic devices" desc="Generic devices" icon="plugin://icons/obj16/devices.png">
			<contents name="Generic C64x+ Device" desc="Generic C64x+ Device" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_161193311146200">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>Generic C64x+ Device</tag>
					<tag>Generic devices</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_0.projectspec">
					<filter.ref ref.id="filter_161193311146200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_GenericC64xpDevice"/>
							<attribute key="device.variant" value="com.ti.ccstudio.deviceModel.C6000.GenericC64xPlusDevice"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_1.projectspec">
					<filter.ref ref.id="filter_161193311146200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_GenericC64xpDevice"/>
							<attribute key="device.variant" value="com.ti.ccstudio.deviceModel.C6000.GenericC64xPlusDevice"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_161193311253600">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>Generic C64x+ Device</tag>
					<tag>Generic devices</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_14.projectspec">
					<filter.ref ref.id="filter_161193311253600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_GenericC64xpDevice"/>
							<attribute key="device.variant" value="com.ti.ccstudio.deviceModel.C6000.GenericC64xPlusDevice"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_3.projectspec">
					<filter.ref ref.id="filter_161193311253600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_GenericC64xpDevice"/>
							<attribute key="device.variant" value="com.ti.ccstudio.deviceModel.C6000.GenericC64xPlusDevice"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_4.projectspec">
					<filter.ref ref.id="filter_161193311253600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_GenericC64xpDevice"/>
							<attribute key="device.variant" value="com.ti.ccstudio.deviceModel.C6000.GenericC64xPlusDevice"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_5.projectspec">
					<filter.ref ref.id="filter_161193311253600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_GenericC64xpDevice"/>
							<attribute key="device.variant" value="com.ti.ccstudio.deviceModel.C6000.GenericC64xPlusDevice"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_6.projectspec">
					<filter.ref ref.id="filter_161193311253600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_GenericC64xpDevice"/>
							<attribute key="device.variant" value="com.ti.ccstudio.deviceModel.C6000.GenericC64xPlusDevice"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_7.projectspec">
					<filter.ref ref.id="filter_161193311253600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_GenericC64xpDevice"/>
							<attribute key="device.variant" value="com.ti.ccstudio.deviceModel.C6000.GenericC64xPlusDevice"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_8.projectspec">
					<filter.ref ref.id="filter_161193311253600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_GenericC64xpDevice"/>
							<attribute key="device.variant" value="com.ti.ccstudio.deviceModel.C6000.GenericC64xPlusDevice"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_9.projectspec">
					<filter.ref ref.id="filter_161193311253600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_GenericC64xpDevice"/>
							<attribute key="device.variant" value="com.ti.ccstudio.deviceModel.C6000.GenericC64xPlusDevice"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_11.projectspec">
					<filter.ref ref.id="filter_161193311253600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_GenericC64xpDevice"/>
							<attribute key="device.variant" value="com.ti.ccstudio.deviceModel.C6000.GenericC64xPlusDevice"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_12.projectspec">
					<filter.ref ref.id="filter_161193311253600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_GenericC64xpDevice"/>
							<attribute key="device.variant" value="com.ti.ccstudio.deviceModel.C6000.GenericC64xPlusDevice"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_13.projectspec">
					<filter.ref ref.id="filter_161193311253600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_GenericC64xpDevice"/>
							<attribute key="device.variant" value="com.ti.ccstudio.deviceModel.C6000.GenericC64xPlusDevice"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_10.projectspec">
					<filter.ref ref.id="filter_161193311253600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_GenericC64xpDevice"/>
							<attribute key="device.variant" value="com.ti.ccstudio.deviceModel.C6000.GenericC64xPlusDevice"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="Generic C66xx Device" desc="Generic C66xx Device" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_161193311872900">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>Generic C66xx Device</tag>
					<tag>Generic devices</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_0.projectspec">
					<filter.ref ref.id="filter_161193311872900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_GenericC66xxDevice"/>
							<attribute key="device.variant" value="com.ti.ccstudio.deviceModel.C6000.GenericC66xxDevice"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_1.projectspec">
					<filter.ref ref.id="filter_161193311872900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_GenericC66xxDevice"/>
							<attribute key="device.variant" value="com.ti.ccstudio.deviceModel.C6000.GenericC66xxDevice"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_161193311962900">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>Generic C66xx Device</tag>
					<tag>Generic devices</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_14.projectspec">
					<filter.ref ref.id="filter_161193311962900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_GenericC66xxDevice"/>
							<attribute key="device.variant" value="com.ti.ccstudio.deviceModel.C6000.GenericC66xxDevice"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_3.projectspec">
					<filter.ref ref.id="filter_161193311962900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_GenericC66xxDevice"/>
							<attribute key="device.variant" value="com.ti.ccstudio.deviceModel.C6000.GenericC66xxDevice"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_4.projectspec">
					<filter.ref ref.id="filter_161193311962900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_GenericC66xxDevice"/>
							<attribute key="device.variant" value="com.ti.ccstudio.deviceModel.C6000.GenericC66xxDevice"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_5.projectspec">
					<filter.ref ref.id="filter_161193311962900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_GenericC66xxDevice"/>
							<attribute key="device.variant" value="com.ti.ccstudio.deviceModel.C6000.GenericC66xxDevice"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_6.projectspec">
					<filter.ref ref.id="filter_161193311962900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_GenericC66xxDevice"/>
							<attribute key="device.variant" value="com.ti.ccstudio.deviceModel.C6000.GenericC66xxDevice"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_7.projectspec">
					<filter.ref ref.id="filter_161193311962900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_GenericC66xxDevice"/>
							<attribute key="device.variant" value="com.ti.ccstudio.deviceModel.C6000.GenericC66xxDevice"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_8.projectspec">
					<filter.ref ref.id="filter_161193311962900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_GenericC66xxDevice"/>
							<attribute key="device.variant" value="com.ti.ccstudio.deviceModel.C6000.GenericC66xxDevice"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_9.projectspec">
					<filter.ref ref.id="filter_161193311962900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_GenericC66xxDevice"/>
							<attribute key="device.variant" value="com.ti.ccstudio.deviceModel.C6000.GenericC66xxDevice"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_11.projectspec">
					<filter.ref ref.id="filter_161193311962900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_GenericC66xxDevice"/>
							<attribute key="device.variant" value="com.ti.ccstudio.deviceModel.C6000.GenericC66xxDevice"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_12.projectspec">
					<filter.ref ref.id="filter_161193311962900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_GenericC66xxDevice"/>
							<attribute key="device.variant" value="com.ti.ccstudio.deviceModel.C6000.GenericC66xxDevice"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_13.projectspec">
					<filter.ref ref.id="filter_161193311962900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_GenericC66xxDevice"/>
							<attribute key="device.variant" value="com.ti.ccstudio.deviceModel.C6000.GenericC66xxDevice"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_10.projectspec">
					<filter.ref ref.id="filter_161193311962900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_GenericC66xxDevice"/>
							<attribute key="device.variant" value="com.ti.ccstudio.deviceModel.C6000.GenericC66xxDevice"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="Generic C674x Device" desc="Generic C674x Device" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_161193313498900">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>Generic C674x Device</tag>
					<tag>Generic devices</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_0.projectspec">
					<filter.ref ref.id="filter_161193313498900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_GenericC674xDevice"/>
							<attribute key="device.variant" value="com.ti.ccstudio.deviceModel.C6000.GenericC674xDevice"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_1.projectspec">
					<filter.ref ref.id="filter_161193313498900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_GenericC674xDevice"/>
							<attribute key="device.variant" value="com.ti.ccstudio.deviceModel.C6000.GenericC674xDevice"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_161193313589700">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>Generic C674x Device</tag>
					<tag>Generic devices</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_14.projectspec">
					<filter.ref ref.id="filter_161193313589700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_GenericC674xDevice"/>
							<attribute key="device.variant" value="com.ti.ccstudio.deviceModel.C6000.GenericC674xDevice"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_3.projectspec">
					<filter.ref ref.id="filter_161193313589700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_GenericC674xDevice"/>
							<attribute key="device.variant" value="com.ti.ccstudio.deviceModel.C6000.GenericC674xDevice"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_4.projectspec">
					<filter.ref ref.id="filter_161193313589700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_GenericC674xDevice"/>
							<attribute key="device.variant" value="com.ti.ccstudio.deviceModel.C6000.GenericC674xDevice"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_5.projectspec">
					<filter.ref ref.id="filter_161193313589700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_GenericC674xDevice"/>
							<attribute key="device.variant" value="com.ti.ccstudio.deviceModel.C6000.GenericC674xDevice"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_6.projectspec">
					<filter.ref ref.id="filter_161193313589700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_GenericC674xDevice"/>
							<attribute key="device.variant" value="com.ti.ccstudio.deviceModel.C6000.GenericC674xDevice"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_7.projectspec">
					<filter.ref ref.id="filter_161193313589700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_GenericC674xDevice"/>
							<attribute key="device.variant" value="com.ti.ccstudio.deviceModel.C6000.GenericC674xDevice"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_8.projectspec">
					<filter.ref ref.id="filter_161193313589700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_GenericC674xDevice"/>
							<attribute key="device.variant" value="com.ti.ccstudio.deviceModel.C6000.GenericC674xDevice"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_9.projectspec">
					<filter.ref ref.id="filter_161193313589700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_GenericC674xDevice"/>
							<attribute key="device.variant" value="com.ti.ccstudio.deviceModel.C6000.GenericC674xDevice"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_11.projectspec">
					<filter.ref ref.id="filter_161193313589700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_GenericC674xDevice"/>
							<attribute key="device.variant" value="com.ti.ccstudio.deviceModel.C6000.GenericC674xDevice"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_12.projectspec">
					<filter.ref ref.id="filter_161193313589700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_GenericC674xDevice"/>
							<attribute key="device.variant" value="com.ti.ccstudio.deviceModel.C6000.GenericC674xDevice"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_13.projectspec">
					<filter.ref ref.id="filter_161193313589700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_GenericC674xDevice"/>
							<attribute key="device.variant" value="com.ti.ccstudio.deviceModel.C6000.GenericC674xDevice"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_10.projectspec">
					<filter.ref ref.id="filter_161193313589700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_GenericC674xDevice"/>
							<attribute key="device.variant" value="com.ti.ccstudio.deviceModel.C6000.GenericC674xDevice"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
		</contents>
		<contents name="C6-Integra C6A81xx" desc="C6-Integra C6A81xx" icon="plugin://icons/obj16/devices.png">
			<contents name="C6A8167" desc="C6A8167" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_161193315470200">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>C6A8167</tag>
					<tag>C6-Integra C6A81xx</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_0.projectspec">
					<filter.ref ref.id="filter_161193315470200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_C6A8167_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6A8167"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_1.projectspec">
					<filter.ref ref.id="filter_161193315470200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_C6A8167_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6A8167"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_161193315564800">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>C6A8167</tag>
					<tag>C6-Integra C6A81xx</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_14.projectspec">
					<filter.ref ref.id="filter_161193315564800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_C6A8167_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6A8167"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_3.projectspec">
					<filter.ref ref.id="filter_161193315564800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_C6A8167_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6A8167"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_4.projectspec">
					<filter.ref ref.id="filter_161193315564800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_C6A8167_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6A8167"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_5.projectspec">
					<filter.ref ref.id="filter_161193315564800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_C6A8167_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6A8167"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_6.projectspec">
					<filter.ref ref.id="filter_161193315564800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_C6A8167_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6A8167"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_7.projectspec">
					<filter.ref ref.id="filter_161193315564800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_C6A8167_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6A8167"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_8.projectspec">
					<filter.ref ref.id="filter_161193315564800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_C6A8167_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6A8167"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_9.projectspec">
					<filter.ref ref.id="filter_161193315564800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_C6A8167_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6A8167"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_11.projectspec">
					<filter.ref ref.id="filter_161193315564800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_C6A8167_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6A8167"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_12.projectspec">
					<filter.ref ref.id="filter_161193315564800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_C6A8167_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6A8167"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_13.projectspec">
					<filter.ref ref.id="filter_161193315564800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_C6A8167_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6A8167"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_10.projectspec">
					<filter.ref ref.id="filter_161193315564800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_C6A8167_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6A8167"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="C6A8168" desc="C6A8168" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_161193316184700">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>C6A8168</tag>
					<tag>C6-Integra C6A81xx</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_0.projectspec">
					<filter.ref ref.id="filter_161193316184700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_C6A8168_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6A8168"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_1.projectspec">
					<filter.ref ref.id="filter_161193316184700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_C6A8168_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6A8168"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_161193316275200">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>C6A8168</tag>
					<tag>C6-Integra C6A81xx</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_14.projectspec">
					<filter.ref ref.id="filter_161193316275200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_C6A8168_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6A8168"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_3.projectspec">
					<filter.ref ref.id="filter_161193316275200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_C6A8168_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6A8168"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_4.projectspec">
					<filter.ref ref.id="filter_161193316275200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_C6A8168_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6A8168"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_5.projectspec">
					<filter.ref ref.id="filter_161193316275200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_C6A8168_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6A8168"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_6.projectspec">
					<filter.ref ref.id="filter_161193316275200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_C6A8168_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6A8168"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_7.projectspec">
					<filter.ref ref.id="filter_161193316275200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_C6A8168_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6A8168"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_8.projectspec">
					<filter.ref ref.id="filter_161193316275200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_C6A8168_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6A8168"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_9.projectspec">
					<filter.ref ref.id="filter_161193316275200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_C6A8168_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6A8168"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_11.projectspec">
					<filter.ref ref.id="filter_161193316275200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_C6A8168_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6A8168"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_12.projectspec">
					<filter.ref ref.id="filter_161193316275200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_C6A8168_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6A8168"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_13.projectspec">
					<filter.ref ref.id="filter_161193316275200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_C6A8168_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6A8168"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_10.projectspec">
					<filter.ref ref.id="filter_161193316275200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_C6A8168_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6A8168"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
		</contents>
		<contents name="C645x High Performance DSP" desc="C645x High Performance DSP" icon="plugin://icons/obj16/devices.png">
			<contents name="DSK6455" desc="DSK6455" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_161193324877500">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>DSK6455</tag>
					<tag>C645x High Performance DSP</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_0.projectspec">
					<filter.ref ref.id="filter_161193324877500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_DSK6455"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6455.DSK6455"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_1.projectspec">
					<filter.ref ref.id="filter_161193324877500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_DSK6455"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6455.DSK6455"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_161193324974400">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>DSK6455</tag>
					<tag>C645x High Performance DSP</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_14.projectspec">
					<filter.ref ref.id="filter_161193324974400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_DSK6455"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6455.DSK6455"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_3.projectspec">
					<filter.ref ref.id="filter_161193324974400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_DSK6455"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6455.DSK6455"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_4.projectspec">
					<filter.ref ref.id="filter_161193324974400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_DSK6455"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6455.DSK6455"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_5.projectspec">
					<filter.ref ref.id="filter_161193324974400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_DSK6455"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6455.DSK6455"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_6.projectspec">
					<filter.ref ref.id="filter_161193324974400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_DSK6455"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6455.DSK6455"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_7.projectspec">
					<filter.ref ref.id="filter_161193324974400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_DSK6455"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6455.DSK6455"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_8.projectspec">
					<filter.ref ref.id="filter_161193324974400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_DSK6455"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6455.DSK6455"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_9.projectspec">
					<filter.ref ref.id="filter_161193324974400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_DSK6455"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6455.DSK6455"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_11.projectspec">
					<filter.ref ref.id="filter_161193324974400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_DSK6455"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6455.DSK6455"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_12.projectspec">
					<filter.ref ref.id="filter_161193324974400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_DSK6455"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6455.DSK6455"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_13.projectspec">
					<filter.ref ref.id="filter_161193324974400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_DSK6455"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6455.DSK6455"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_10.projectspec">
					<filter.ref ref.id="filter_161193324974400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_DSK6455"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6455.DSK6455"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="EVM6455 (TMS320C6455)" desc="EVM6455 (TMS320C6455)" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_161193325555300">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>EVM6455 (TMS320C6455)</tag>
					<tag>C645x High Performance DSP</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_0.projectspec">
					<filter.ref ref.id="filter_161193325555300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_EVM6455_TMS320C6455"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6455.EVM6455"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_1.projectspec">
					<filter.ref ref.id="filter_161193325555300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_EVM6455_TMS320C6455"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6455.EVM6455"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_161193325640600">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>EVM6455 (TMS320C6455)</tag>
					<tag>C645x High Performance DSP</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_14.projectspec">
					<filter.ref ref.id="filter_161193325640600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_EVM6455_TMS320C6455"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6455.EVM6455"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_3.projectspec">
					<filter.ref ref.id="filter_161193325640600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_EVM6455_TMS320C6455"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6455.EVM6455"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_4.projectspec">
					<filter.ref ref.id="filter_161193325640600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_EVM6455_TMS320C6455"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6455.EVM6455"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_5.projectspec">
					<filter.ref ref.id="filter_161193325640600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_EVM6455_TMS320C6455"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6455.EVM6455"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_6.projectspec">
					<filter.ref ref.id="filter_161193325640600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_EVM6455_TMS320C6455"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6455.EVM6455"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_7.projectspec">
					<filter.ref ref.id="filter_161193325640600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_EVM6455_TMS320C6455"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6455.EVM6455"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_8.projectspec">
					<filter.ref ref.id="filter_161193325640600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_EVM6455_TMS320C6455"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6455.EVM6455"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_9.projectspec">
					<filter.ref ref.id="filter_161193325640600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_EVM6455_TMS320C6455"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6455.EVM6455"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_11.projectspec">
					<filter.ref ref.id="filter_161193325640600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_EVM6455_TMS320C6455"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6455.EVM6455"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_12.projectspec">
					<filter.ref ref.id="filter_161193325640600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_EVM6455_TMS320C6455"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6455.EVM6455"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_13.projectspec">
					<filter.ref ref.id="filter_161193325640600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_EVM6455_TMS320C6455"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6455.EVM6455"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_10.projectspec">
					<filter.ref ref.id="filter_161193325640600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_EVM6455_TMS320C6455"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6455.EVM6455"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="EVMC6457 (TMS320C6457)" desc="EVMC6457 (TMS320C6457)" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_161193326217500">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>EVMC6457 (TMS320C6457)</tag>
					<tag>C645x High Performance DSP</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_0.projectspec">
					<filter.ref ref.id="filter_161193326217500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_EVMC6457_TMS320C6457"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6457.EVMC6457"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_1.projectspec">
					<filter.ref ref.id="filter_161193326217500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_EVMC6457_TMS320C6457"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6457.EVMC6457"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_161193326302300">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>EVMC6457 (TMS320C6457)</tag>
					<tag>C645x High Performance DSP</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_14.projectspec">
					<filter.ref ref.id="filter_161193326302300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_EVMC6457_TMS320C6457"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6457.EVMC6457"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_3.projectspec">
					<filter.ref ref.id="filter_161193326302300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_EVMC6457_TMS320C6457"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6457.EVMC6457"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_4.projectspec">
					<filter.ref ref.id="filter_161193326302300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_EVMC6457_TMS320C6457"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6457.EVMC6457"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_5.projectspec">
					<filter.ref ref.id="filter_161193326302300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_EVMC6457_TMS320C6457"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6457.EVMC6457"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_6.projectspec">
					<filter.ref ref.id="filter_161193326302300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_EVMC6457_TMS320C6457"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6457.EVMC6457"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_7.projectspec">
					<filter.ref ref.id="filter_161193326302300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_EVMC6457_TMS320C6457"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6457.EVMC6457"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_8.projectspec">
					<filter.ref ref.id="filter_161193326302300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_EVMC6457_TMS320C6457"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6457.EVMC6457"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_9.projectspec">
					<filter.ref ref.id="filter_161193326302300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_EVMC6457_TMS320C6457"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6457.EVMC6457"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_11.projectspec">
					<filter.ref ref.id="filter_161193326302300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_EVMC6457_TMS320C6457"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6457.EVMC6457"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_12.projectspec">
					<filter.ref ref.id="filter_161193326302300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_EVMC6457_TMS320C6457"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6457.EVMC6457"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_13.projectspec">
					<filter.ref ref.id="filter_161193326302300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_EVMC6457_TMS320C6457"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6457.EVMC6457"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_10.projectspec">
					<filter.ref ref.id="filter_161193326302300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_EVMC6457_TMS320C6457"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6457.EVMC6457"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="TMDSEVM6457L" desc="TMDSEVM6457L" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_161193327737600">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>TMDSEVM6457L</tag>
					<tag>C645x High Performance DSP</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_0.projectspec">
					<filter.ref ref.id="filter_161193327737600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_TMDSEVM6457L"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6457.TMDSEVM6457L"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_1.projectspec">
					<filter.ref ref.id="filter_161193327737600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_TMDSEVM6457L"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6457.TMDSEVM6457L"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_161193327858600">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>TMDSEVM6457L</tag>
					<tag>C645x High Performance DSP</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_14.projectspec">
					<filter.ref ref.id="filter_161193327858600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_TMDSEVM6457L"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6457.TMDSEVM6457L"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_3.projectspec">
					<filter.ref ref.id="filter_161193327858600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_TMDSEVM6457L"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6457.TMDSEVM6457L"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_4.projectspec">
					<filter.ref ref.id="filter_161193327858600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_TMDSEVM6457L"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6457.TMDSEVM6457L"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_5.projectspec">
					<filter.ref ref.id="filter_161193327858600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_TMDSEVM6457L"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6457.TMDSEVM6457L"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_6.projectspec">
					<filter.ref ref.id="filter_161193327858600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_TMDSEVM6457L"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6457.TMDSEVM6457L"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_7.projectspec">
					<filter.ref ref.id="filter_161193327858600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_TMDSEVM6457L"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6457.TMDSEVM6457L"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_8.projectspec">
					<filter.ref ref.id="filter_161193327858600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_TMDSEVM6457L"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6457.TMDSEVM6457L"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_9.projectspec">
					<filter.ref ref.id="filter_161193327858600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_TMDSEVM6457L"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6457.TMDSEVM6457L"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_11.projectspec">
					<filter.ref ref.id="filter_161193327858600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_TMDSEVM6457L"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6457.TMDSEVM6457L"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_12.projectspec">
					<filter.ref ref.id="filter_161193327858600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_TMDSEVM6457L"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6457.TMDSEVM6457L"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_13.projectspec">
					<filter.ref ref.id="filter_161193327858600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_TMDSEVM6457L"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6457.TMDSEVM6457L"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_10.projectspec">
					<filter.ref ref.id="filter_161193327858600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_TMDSEVM6457L"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6457.TMDSEVM6457L"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="TMS320C6452" desc="TMS320C6452" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_161193328561100">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>TMS320C6452</tag>
					<tag>C645x High Performance DSP</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_0.projectspec">
					<filter.ref ref.id="filter_161193328561100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_TMS320C6452"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6452"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_1.projectspec">
					<filter.ref ref.id="filter_161193328561100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_TMS320C6452"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6452"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_161193328645100">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>TMS320C6452</tag>
					<tag>C645x High Performance DSP</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_14.projectspec">
					<filter.ref ref.id="filter_161193328645100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_TMS320C6452"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6452"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_3.projectspec">
					<filter.ref ref.id="filter_161193328645100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_TMS320C6452"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6452"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_4.projectspec">
					<filter.ref ref.id="filter_161193328645100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_TMS320C6452"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6452"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_5.projectspec">
					<filter.ref ref.id="filter_161193328645100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_TMS320C6452"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6452"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_6.projectspec">
					<filter.ref ref.id="filter_161193328645100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_TMS320C6452"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6452"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_7.projectspec">
					<filter.ref ref.id="filter_161193328645100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_TMS320C6452"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6452"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_8.projectspec">
					<filter.ref ref.id="filter_161193328645100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_TMS320C6452"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6452"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_9.projectspec">
					<filter.ref ref.id="filter_161193328645100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_TMS320C6452"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6452"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_11.projectspec">
					<filter.ref ref.id="filter_161193328645100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_TMS320C6452"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6452"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_12.projectspec">
					<filter.ref ref.id="filter_161193328645100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_TMS320C6452"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6452"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_13.projectspec">
					<filter.ref ref.id="filter_161193328645100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_TMS320C6452"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6452"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_10.projectspec">
					<filter.ref ref.id="filter_161193328645100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_TMS320C6452"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6452"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="TMS320C6454" desc="TMS320C6454" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_161193329221700">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>TMS320C6454</tag>
					<tag>C645x High Performance DSP</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_0.projectspec">
					<filter.ref ref.id="filter_161193329221700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_TMS320C6454"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6454"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_1.projectspec">
					<filter.ref ref.id="filter_161193329221700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_TMS320C6454"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6454"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_161193329305400">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>TMS320C6454</tag>
					<tag>C645x High Performance DSP</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_14.projectspec">
					<filter.ref ref.id="filter_161193329305400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_TMS320C6454"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6454"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_3.projectspec">
					<filter.ref ref.id="filter_161193329305400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_TMS320C6454"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6454"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_4.projectspec">
					<filter.ref ref.id="filter_161193329305400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_TMS320C6454"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6454"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_5.projectspec">
					<filter.ref ref.id="filter_161193329305400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_TMS320C6454"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6454"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_6.projectspec">
					<filter.ref ref.id="filter_161193329305400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_TMS320C6454"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6454"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_7.projectspec">
					<filter.ref ref.id="filter_161193329305400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_TMS320C6454"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6454"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_8.projectspec">
					<filter.ref ref.id="filter_161193329305400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_TMS320C6454"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6454"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_9.projectspec">
					<filter.ref ref.id="filter_161193329305400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_TMS320C6454"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6454"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_11.projectspec">
					<filter.ref ref.id="filter_161193329305400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_TMS320C6454"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6454"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_12.projectspec">
					<filter.ref ref.id="filter_161193329305400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_TMS320C6454"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6454"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_13.projectspec">
					<filter.ref ref.id="filter_161193329305400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_TMS320C6454"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6454"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_10.projectspec">
					<filter.ref ref.id="filter_161193329305400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_TMS320C6454"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6454"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="TMS320C6455" desc="TMS320C6455" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_161193329889100">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>TMS320C6455</tag>
					<tag>C645x High Performance DSP</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_0.projectspec">
					<filter.ref ref.id="filter_161193329889100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_TMS320C6455"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6455"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_1.projectspec">
					<filter.ref ref.id="filter_161193329889100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_TMS320C6455"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6455"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_161193329972100">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>TMS320C6455</tag>
					<tag>C645x High Performance DSP</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_14.projectspec">
					<filter.ref ref.id="filter_161193329972100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_TMS320C6455"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6455"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_3.projectspec">
					<filter.ref ref.id="filter_161193329972100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_TMS320C6455"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6455"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_4.projectspec">
					<filter.ref ref.id="filter_161193329972100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_TMS320C6455"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6455"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_5.projectspec">
					<filter.ref ref.id="filter_161193329972100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_TMS320C6455"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6455"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_6.projectspec">
					<filter.ref ref.id="filter_161193329972100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_TMS320C6455"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6455"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_7.projectspec">
					<filter.ref ref.id="filter_161193329972100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_TMS320C6455"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6455"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_8.projectspec">
					<filter.ref ref.id="filter_161193329972100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_TMS320C6455"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6455"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_9.projectspec">
					<filter.ref ref.id="filter_161193329972100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_TMS320C6455"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6455"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_11.projectspec">
					<filter.ref ref.id="filter_161193329972100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_TMS320C6455"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6455"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_12.projectspec">
					<filter.ref ref.id="filter_161193329972100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_TMS320C6455"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6455"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_13.projectspec">
					<filter.ref ref.id="filter_161193329972100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_TMS320C6455"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6455"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_10.projectspec">
					<filter.ref ref.id="filter_161193329972100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_TMS320C6455"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6455"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="TMS320C6457" desc="TMS320C6457" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_161193330538100">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>TMS320C6457</tag>
					<tag>C645x High Performance DSP</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_0.projectspec">
					<filter.ref ref.id="filter_161193330538100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_TMS320C6457"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6457"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_1.projectspec">
					<filter.ref ref.id="filter_161193330538100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_TMS320C6457"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6457"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_161193330632300">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>TMS320C6457</tag>
					<tag>C645x High Performance DSP</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_14.projectspec">
					<filter.ref ref.id="filter_161193330632300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_TMS320C6457"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6457"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_3.projectspec">
					<filter.ref ref.id="filter_161193330632300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_TMS320C6457"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6457"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_4.projectspec">
					<filter.ref ref.id="filter_161193330632300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_TMS320C6457"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6457"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_5.projectspec">
					<filter.ref ref.id="filter_161193330632300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_TMS320C6457"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6457"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_6.projectspec">
					<filter.ref ref.id="filter_161193330632300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_TMS320C6457"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6457"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_7.projectspec">
					<filter.ref ref.id="filter_161193330632300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_TMS320C6457"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6457"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_8.projectspec">
					<filter.ref ref.id="filter_161193330632300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_TMS320C6457"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6457"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_9.projectspec">
					<filter.ref ref.id="filter_161193330632300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_TMS320C6457"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6457"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_11.projectspec">
					<filter.ref ref.id="filter_161193330632300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_TMS320C6457"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6457"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_12.projectspec">
					<filter.ref ref.id="filter_161193330632300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_TMS320C6457"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6457"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_13.projectspec">
					<filter.ref ref.id="filter_161193330632300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_TMS320C6457"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6457"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_10.projectspec">
					<filter.ref ref.id="filter_161193330632300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_TMS320C6457"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6457"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
		</contents>
		<contents name="C64xx Multicore DSP" desc="C64xx Multicore DSP" icon="plugin://icons/obj16/devices.png">
			<contents name="EVMC6472" desc="EVMC6472" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_161193332483100">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>EVMC6472</tag>
					<tag>C64xx Multicore DSP</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_0.projectspec">
					<filter.ref ref.id="filter_161193332483100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_EVMC6472"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6472.EVMC6472"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_1.projectspec">
					<filter.ref ref.id="filter_161193332483100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_EVMC6472"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6472.EVMC6472"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_161193332575600">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>EVMC6472</tag>
					<tag>C64xx Multicore DSP</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_14.projectspec">
					<filter.ref ref.id="filter_161193332575600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_EVMC6472"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6472.EVMC6472"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_3.projectspec">
					<filter.ref ref.id="filter_161193332575600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_EVMC6472"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6472.EVMC6472"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_4.projectspec">
					<filter.ref ref.id="filter_161193332575600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_EVMC6472"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6472.EVMC6472"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_5.projectspec">
					<filter.ref ref.id="filter_161193332575600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_EVMC6472"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6472.EVMC6472"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_6.projectspec">
					<filter.ref ref.id="filter_161193332575600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_EVMC6472"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6472.EVMC6472"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_7.projectspec">
					<filter.ref ref.id="filter_161193332575600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_EVMC6472"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6472.EVMC6472"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_8.projectspec">
					<filter.ref ref.id="filter_161193332575600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_EVMC6472"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6472.EVMC6472"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_9.projectspec">
					<filter.ref ref.id="filter_161193332575600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_EVMC6472"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6472.EVMC6472"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_11.projectspec">
					<filter.ref ref.id="filter_161193332575600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_EVMC6472"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6472.EVMC6472"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_12.projectspec">
					<filter.ref ref.id="filter_161193332575600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_EVMC6472"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6472.EVMC6472"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_13.projectspec">
					<filter.ref ref.id="filter_161193332575600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_EVMC6472"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6472.EVMC6472"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_10.projectspec">
					<filter.ref ref.id="filter_161193332575600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_EVMC6472"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6472.EVMC6472"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="TMDSEVM6474L" desc="TMDSEVM6474L" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_161193333173000">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>TMDSEVM6474L</tag>
					<tag>C64xx Multicore DSP</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_0.projectspec">
					<filter.ref ref.id="filter_161193333173000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_TMDSEVM6474L"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6474.TMDSEVM6474L"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_1.projectspec">
					<filter.ref ref.id="filter_161193333173000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_TMDSEVM6474L"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6474.TMDSEVM6474L"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_161193333259500">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>TMDSEVM6474L</tag>
					<tag>C64xx Multicore DSP</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_14.projectspec">
					<filter.ref ref.id="filter_161193333259500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_TMDSEVM6474L"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6474.TMDSEVM6474L"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_3.projectspec">
					<filter.ref ref.id="filter_161193333259500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_TMDSEVM6474L"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6474.TMDSEVM6474L"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_4.projectspec">
					<filter.ref ref.id="filter_161193333259500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_TMDSEVM6474L"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6474.TMDSEVM6474L"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_5.projectspec">
					<filter.ref ref.id="filter_161193333259500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_TMDSEVM6474L"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6474.TMDSEVM6474L"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_6.projectspec">
					<filter.ref ref.id="filter_161193333259500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_TMDSEVM6474L"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6474.TMDSEVM6474L"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_7.projectspec">
					<filter.ref ref.id="filter_161193333259500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_TMDSEVM6474L"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6474.TMDSEVM6474L"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_8.projectspec">
					<filter.ref ref.id="filter_161193333259500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_TMDSEVM6474L"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6474.TMDSEVM6474L"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_9.projectspec">
					<filter.ref ref.id="filter_161193333259500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_TMDSEVM6474L"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6474.TMDSEVM6474L"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_11.projectspec">
					<filter.ref ref.id="filter_161193333259500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_TMDSEVM6474L"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6474.TMDSEVM6474L"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_12.projectspec">
					<filter.ref ref.id="filter_161193333259500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_TMDSEVM6474L"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6474.TMDSEVM6474L"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_13.projectspec">
					<filter.ref ref.id="filter_161193333259500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_TMDSEVM6474L"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6474.TMDSEVM6474L"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_10.projectspec">
					<filter.ref ref.id="filter_161193333259500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_TMDSEVM6474L"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6474.TMDSEVM6474L"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="TMS320C6472" desc="TMS320C6472" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_161193333839100">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>TMS320C6472</tag>
					<tag>C64xx Multicore DSP</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_0.projectspec">
					<filter.ref ref.id="filter_161193333839100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_TMS320C6472"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6472"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_1.projectspec">
					<filter.ref ref.id="filter_161193333839100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_TMS320C6472"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6472"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_161193333921200">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>TMS320C6472</tag>
					<tag>C64xx Multicore DSP</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_14.projectspec">
					<filter.ref ref.id="filter_161193333921200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_TMS320C6472"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6472"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_3.projectspec">
					<filter.ref ref.id="filter_161193333921200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_TMS320C6472"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6472"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_4.projectspec">
					<filter.ref ref.id="filter_161193333921200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_TMS320C6472"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6472"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_5.projectspec">
					<filter.ref ref.id="filter_161193333921200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_TMS320C6472"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6472"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_6.projectspec">
					<filter.ref ref.id="filter_161193333921200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_TMS320C6472"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6472"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_7.projectspec">
					<filter.ref ref.id="filter_161193333921200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_TMS320C6472"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6472"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_8.projectspec">
					<filter.ref ref.id="filter_161193333921200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_TMS320C6472"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6472"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_9.projectspec">
					<filter.ref ref.id="filter_161193333921200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_TMS320C6472"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6472"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_11.projectspec">
					<filter.ref ref.id="filter_161193333921200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_TMS320C6472"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6472"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_12.projectspec">
					<filter.ref ref.id="filter_161193333921200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_TMS320C6472"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6472"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_13.projectspec">
					<filter.ref ref.id="filter_161193333921200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_TMS320C6472"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6472"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_10.projectspec">
					<filter.ref ref.id="filter_161193333921200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_TMS320C6472"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6472"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="TMS320C6474" desc="TMS320C6474" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_161193335779100">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>TMS320C6474</tag>
					<tag>C64xx Multicore DSP</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_0.projectspec">
					<filter.ref ref.id="filter_161193335779100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_TMS320C6474"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6474"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_1.projectspec">
					<filter.ref ref.id="filter_161193335779100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_TMS320C6474"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6474"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_161193335876100">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>TMS320C6474</tag>
					<tag>C64xx Multicore DSP</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_14.projectspec">
					<filter.ref ref.id="filter_161193335876100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_TMS320C6474"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6474"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_3.projectspec">
					<filter.ref ref.id="filter_161193335876100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_TMS320C6474"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6474"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_4.projectspec">
					<filter.ref ref.id="filter_161193335876100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_TMS320C6474"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6474"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_5.projectspec">
					<filter.ref ref.id="filter_161193335876100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_TMS320C6474"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6474"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_6.projectspec">
					<filter.ref ref.id="filter_161193335876100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_TMS320C6474"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6474"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_7.projectspec">
					<filter.ref ref.id="filter_161193335876100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_TMS320C6474"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6474"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_8.projectspec">
					<filter.ref ref.id="filter_161193335876100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_TMS320C6474"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6474"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_9.projectspec">
					<filter.ref ref.id="filter_161193335876100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_TMS320C6474"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6474"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_11.projectspec">
					<filter.ref ref.id="filter_161193335876100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_TMS320C6474"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6474"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_12.projectspec">
					<filter.ref ref.id="filter_161193335876100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_TMS320C6474"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6474"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_13.projectspec">
					<filter.ref ref.id="filter_161193335876100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_TMS320C6474"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6474"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_10.projectspec">
					<filter.ref ref.id="filter_161193335876100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_TMS320C6474"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6474"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="TMS320TCI6486" desc="TMS320TCI6486" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_161193336489300">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>TMS320TCI6486</tag>
					<tag>C64xx Multicore DSP</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_0.projectspec">
					<filter.ref ref.id="filter_161193336489300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_TMS320TCI6486"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320TCI6486"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_1.projectspec">
					<filter.ref ref.id="filter_161193336489300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_TMS320TCI6486"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320TCI6486"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_161193336579500">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>TMS320TCI6486</tag>
					<tag>C64xx Multicore DSP</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_14.projectspec">
					<filter.ref ref.id="filter_161193336579500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_TMS320TCI6486"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320TCI6486"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_3.projectspec">
					<filter.ref ref.id="filter_161193336579500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_TMS320TCI6486"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320TCI6486"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_4.projectspec">
					<filter.ref ref.id="filter_161193336579500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_TMS320TCI6486"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320TCI6486"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_5.projectspec">
					<filter.ref ref.id="filter_161193336579500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_TMS320TCI6486"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320TCI6486"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_6.projectspec">
					<filter.ref ref.id="filter_161193336579500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_TMS320TCI6486"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320TCI6486"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_7.projectspec">
					<filter.ref ref.id="filter_161193336579500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_TMS320TCI6486"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320TCI6486"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_8.projectspec">
					<filter.ref ref.id="filter_161193336579500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_TMS320TCI6486"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320TCI6486"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_9.projectspec">
					<filter.ref ref.id="filter_161193336579500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_TMS320TCI6486"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320TCI6486"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_11.projectspec">
					<filter.ref ref.id="filter_161193336579500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_TMS320TCI6486"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320TCI6486"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_12.projectspec">
					<filter.ref ref.id="filter_161193336579500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_TMS320TCI6486"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320TCI6486"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_13.projectspec">
					<filter.ref ref.id="filter_161193336579500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_TMS320TCI6486"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320TCI6486"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_10.projectspec">
					<filter.ref ref.id="filter_161193336579500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_TMS320TCI6486"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320TCI6486"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="TMS320TCI6487" desc="TMS320TCI6487" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_161193337160900">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>TMS320TCI6487</tag>
					<tag>C64xx Multicore DSP</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_0.projectspec">
					<filter.ref ref.id="filter_161193337160900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_TMS320TCI6487"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320TCI6487"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_1.projectspec">
					<filter.ref ref.id="filter_161193337160900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_TMS320TCI6487"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320TCI6487"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_161193337244400">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>TMS320TCI6487</tag>
					<tag>C64xx Multicore DSP</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_14.projectspec">
					<filter.ref ref.id="filter_161193337244400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_TMS320TCI6487"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320TCI6487"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_3.projectspec">
					<filter.ref ref.id="filter_161193337244400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_TMS320TCI6487"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320TCI6487"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_4.projectspec">
					<filter.ref ref.id="filter_161193337244400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_TMS320TCI6487"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320TCI6487"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_5.projectspec">
					<filter.ref ref.id="filter_161193337244400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_TMS320TCI6487"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320TCI6487"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_6.projectspec">
					<filter.ref ref.id="filter_161193337244400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_TMS320TCI6487"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320TCI6487"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_7.projectspec">
					<filter.ref ref.id="filter_161193337244400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_TMS320TCI6487"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320TCI6487"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_8.projectspec">
					<filter.ref ref.id="filter_161193337244400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_TMS320TCI6487"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320TCI6487"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_9.projectspec">
					<filter.ref ref.id="filter_161193337244400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_TMS320TCI6487"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320TCI6487"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_11.projectspec">
					<filter.ref ref.id="filter_161193337244400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_TMS320TCI6487"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320TCI6487"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_12.projectspec">
					<filter.ref ref.id="filter_161193337244400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_TMS320TCI6487"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320TCI6487"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_13.projectspec">
					<filter.ref ref.id="filter_161193337244400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_TMS320TCI6487"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320TCI6487"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_10.projectspec">
					<filter.ref ref.id="filter_161193337244400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_TMS320TCI6487"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320TCI6487"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="TMS320TCI6488" desc="TMS320TCI6488" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_161193337815400">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>TMS320TCI6488</tag>
					<tag>C64xx Multicore DSP</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_0.projectspec">
					<filter.ref ref.id="filter_161193337815400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_TMS320TCI6488"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320TCI6488"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_1.projectspec">
					<filter.ref ref.id="filter_161193337815400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_TMS320TCI6488"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320TCI6488"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_161193337898700">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>TMS320TCI6488</tag>
					<tag>C64xx Multicore DSP</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_14.projectspec">
					<filter.ref ref.id="filter_161193337898700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_TMS320TCI6488"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320TCI6488"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_3.projectspec">
					<filter.ref ref.id="filter_161193337898700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_TMS320TCI6488"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320TCI6488"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_4.projectspec">
					<filter.ref ref.id="filter_161193337898700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_TMS320TCI6488"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320TCI6488"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_5.projectspec">
					<filter.ref ref.id="filter_161193337898700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_TMS320TCI6488"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320TCI6488"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_6.projectspec">
					<filter.ref ref.id="filter_161193337898700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_TMS320TCI6488"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320TCI6488"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_7.projectspec">
					<filter.ref ref.id="filter_161193337898700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_TMS320TCI6488"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320TCI6488"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_8.projectspec">
					<filter.ref ref.id="filter_161193337898700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_TMS320TCI6488"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320TCI6488"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_9.projectspec">
					<filter.ref ref.id="filter_161193337898700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_TMS320TCI6488"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320TCI6488"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_11.projectspec">
					<filter.ref ref.id="filter_161193337898700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_TMS320TCI6488"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320TCI6488"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_12.projectspec">
					<filter.ref ref.id="filter_161193337898700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_TMS320TCI6488"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320TCI6488"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_13.projectspec">
					<filter.ref ref.id="filter_161193337898700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_TMS320TCI6488"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320TCI6488"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_10.projectspec">
					<filter.ref ref.id="filter_161193337898700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_TMS320TCI6488"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320TCI6488"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
		</contents>
		<contents name="C66xx Multicore DSP" desc="C66xx Multicore DSP" icon="plugin://icons/obj16/devices.png">
			<contents name="TCI6608" desc="TCI6608" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_161193339499500">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>TCI6608</tag>
					<tag>C66xx Multicore DSP</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_0.projectspec">
					<filter.ref ref.id="filter_161193339499500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_TCI6608"/>
							<attribute key="device.variant" value="TMS320C66XX.TCI6608"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_1.projectspec">
					<filter.ref ref.id="filter_161193339499500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_TCI6608"/>
							<attribute key="device.variant" value="TMS320C66XX.TCI6608"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_161193339611100">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>TCI6608</tag>
					<tag>C66xx Multicore DSP</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_14.projectspec">
					<filter.ref ref.id="filter_161193339611100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_TCI6608"/>
							<attribute key="device.variant" value="TMS320C66XX.TCI6608"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_3.projectspec">
					<filter.ref ref.id="filter_161193339611100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_TCI6608"/>
							<attribute key="device.variant" value="TMS320C66XX.TCI6608"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_4.projectspec">
					<filter.ref ref.id="filter_161193339611100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_TCI6608"/>
							<attribute key="device.variant" value="TMS320C66XX.TCI6608"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_5.projectspec">
					<filter.ref ref.id="filter_161193339611100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_TCI6608"/>
							<attribute key="device.variant" value="TMS320C66XX.TCI6608"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_6.projectspec">
					<filter.ref ref.id="filter_161193339611100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_TCI6608"/>
							<attribute key="device.variant" value="TMS320C66XX.TCI6608"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_7.projectspec">
					<filter.ref ref.id="filter_161193339611100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_TCI6608"/>
							<attribute key="device.variant" value="TMS320C66XX.TCI6608"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_8.projectspec">
					<filter.ref ref.id="filter_161193339611100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_TCI6608"/>
							<attribute key="device.variant" value="TMS320C66XX.TCI6608"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_9.projectspec">
					<filter.ref ref.id="filter_161193339611100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_TCI6608"/>
							<attribute key="device.variant" value="TMS320C66XX.TCI6608"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_11.projectspec">
					<filter.ref ref.id="filter_161193339611100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_TCI6608"/>
							<attribute key="device.variant" value="TMS320C66XX.TCI6608"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_12.projectspec">
					<filter.ref ref.id="filter_161193339611100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_TCI6608"/>
							<attribute key="device.variant" value="TMS320C66XX.TCI6608"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_13.projectspec">
					<filter.ref ref.id="filter_161193339611100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_TCI6608"/>
							<attribute key="device.variant" value="TMS320C66XX.TCI6608"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_10.projectspec">
					<filter.ref ref.id="filter_161193339611100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_TCI6608"/>
							<attribute key="device.variant" value="TMS320C66XX.TCI6608"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="TCI6614" desc="TCI6614" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_161193340264300">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>TCI6614</tag>
					<tag>C66xx Multicore DSP</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_0.projectspec">
					<filter.ref ref.id="filter_161193340264300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_TCI6614_TMS320C66XX"/>
							<attribute key="device.variant" value="TMS320C66XX.TCI6614"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_1.projectspec">
					<filter.ref ref.id="filter_161193340264300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_TCI6614_TMS320C66XX"/>
							<attribute key="device.variant" value="TMS320C66XX.TCI6614"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_161193340371700">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>TCI6614</tag>
					<tag>C66xx Multicore DSP</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_14.projectspec">
					<filter.ref ref.id="filter_161193340371700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_TCI6614_TMS320C66XX"/>
							<attribute key="device.variant" value="TMS320C66XX.TCI6614"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_3.projectspec">
					<filter.ref ref.id="filter_161193340371700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_TCI6614_TMS320C66XX"/>
							<attribute key="device.variant" value="TMS320C66XX.TCI6614"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_4.projectspec">
					<filter.ref ref.id="filter_161193340371700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_TCI6614_TMS320C66XX"/>
							<attribute key="device.variant" value="TMS320C66XX.TCI6614"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_5.projectspec">
					<filter.ref ref.id="filter_161193340371700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_TCI6614_TMS320C66XX"/>
							<attribute key="device.variant" value="TMS320C66XX.TCI6614"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_6.projectspec">
					<filter.ref ref.id="filter_161193340371700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_TCI6614_TMS320C66XX"/>
							<attribute key="device.variant" value="TMS320C66XX.TCI6614"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_7.projectspec">
					<filter.ref ref.id="filter_161193340371700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_TCI6614_TMS320C66XX"/>
							<attribute key="device.variant" value="TMS320C66XX.TCI6614"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_8.projectspec">
					<filter.ref ref.id="filter_161193340371700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_TCI6614_TMS320C66XX"/>
							<attribute key="device.variant" value="TMS320C66XX.TCI6614"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_9.projectspec">
					<filter.ref ref.id="filter_161193340371700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_TCI6614_TMS320C66XX"/>
							<attribute key="device.variant" value="TMS320C66XX.TCI6614"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_11.projectspec">
					<filter.ref ref.id="filter_161193340371700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_TCI6614_TMS320C66XX"/>
							<attribute key="device.variant" value="TMS320C66XX.TCI6614"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_12.projectspec">
					<filter.ref ref.id="filter_161193340371700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_TCI6614_TMS320C66XX"/>
							<attribute key="device.variant" value="TMS320C66XX.TCI6614"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_13.projectspec">
					<filter.ref ref.id="filter_161193340371700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_TCI6614_TMS320C66XX"/>
							<attribute key="device.variant" value="TMS320C66XX.TCI6614"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_10.projectspec">
					<filter.ref ref.id="filter_161193340371700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_TCI6614_TMS320C66XX"/>
							<attribute key="device.variant" value="TMS320C66XX.TCI6614"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="TCI6616" desc="TCI6616" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_161193340974600">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>TCI6616</tag>
					<tag>C66xx Multicore DSP</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_0.projectspec">
					<filter.ref ref.id="filter_161193340974600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_TCI6616"/>
							<attribute key="device.variant" value="TMS320C66XX.TCI6616"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_1.projectspec">
					<filter.ref ref.id="filter_161193340974600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_TCI6616"/>
							<attribute key="device.variant" value="TMS320C66XX.TCI6616"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_161193341060300">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>TCI6616</tag>
					<tag>C66xx Multicore DSP</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_14.projectspec">
					<filter.ref ref.id="filter_161193341060300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_TCI6616"/>
							<attribute key="device.variant" value="TMS320C66XX.TCI6616"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_3.projectspec">
					<filter.ref ref.id="filter_161193341060300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_TCI6616"/>
							<attribute key="device.variant" value="TMS320C66XX.TCI6616"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_4.projectspec">
					<filter.ref ref.id="filter_161193341060300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_TCI6616"/>
							<attribute key="device.variant" value="TMS320C66XX.TCI6616"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_5.projectspec">
					<filter.ref ref.id="filter_161193341060300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_TCI6616"/>
							<attribute key="device.variant" value="TMS320C66XX.TCI6616"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_6.projectspec">
					<filter.ref ref.id="filter_161193341060300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_TCI6616"/>
							<attribute key="device.variant" value="TMS320C66XX.TCI6616"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_7.projectspec">
					<filter.ref ref.id="filter_161193341060300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_TCI6616"/>
							<attribute key="device.variant" value="TMS320C66XX.TCI6616"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_8.projectspec">
					<filter.ref ref.id="filter_161193341060300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_TCI6616"/>
							<attribute key="device.variant" value="TMS320C66XX.TCI6616"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_9.projectspec">
					<filter.ref ref.id="filter_161193341060300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_TCI6616"/>
							<attribute key="device.variant" value="TMS320C66XX.TCI6616"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_11.projectspec">
					<filter.ref ref.id="filter_161193341060300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_TCI6616"/>
							<attribute key="device.variant" value="TMS320C66XX.TCI6616"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_12.projectspec">
					<filter.ref ref.id="filter_161193341060300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_TCI6616"/>
							<attribute key="device.variant" value="TMS320C66XX.TCI6616"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_13.projectspec">
					<filter.ref ref.id="filter_161193341060300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_TCI6616"/>
							<attribute key="device.variant" value="TMS320C66XX.TCI6616"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_10.projectspec">
					<filter.ref ref.id="filter_161193341060300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_TCI6616"/>
							<attribute key="device.variant" value="TMS320C66XX.TCI6616"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="TCI6618" desc="TCI6618" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_161193341610100">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>TCI6618</tag>
					<tag>C66xx Multicore DSP</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_0.projectspec">
					<filter.ref ref.id="filter_161193341610100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_TCI6618"/>
							<attribute key="device.variant" value="TMS320C66XX.TCI6618"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_1.projectspec">
					<filter.ref ref.id="filter_161193341610100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_TCI6618"/>
							<attribute key="device.variant" value="TMS320C66XX.TCI6618"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_161193341690900">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>TCI6618</tag>
					<tag>C66xx Multicore DSP</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_14.projectspec">
					<filter.ref ref.id="filter_161193341690900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_TCI6618"/>
							<attribute key="device.variant" value="TMS320C66XX.TCI6618"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_3.projectspec">
					<filter.ref ref.id="filter_161193341690900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_TCI6618"/>
							<attribute key="device.variant" value="TMS320C66XX.TCI6618"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_4.projectspec">
					<filter.ref ref.id="filter_161193341690900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_TCI6618"/>
							<attribute key="device.variant" value="TMS320C66XX.TCI6618"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_5.projectspec">
					<filter.ref ref.id="filter_161193341690900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_TCI6618"/>
							<attribute key="device.variant" value="TMS320C66XX.TCI6618"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_6.projectspec">
					<filter.ref ref.id="filter_161193341690900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_TCI6618"/>
							<attribute key="device.variant" value="TMS320C66XX.TCI6618"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_7.projectspec">
					<filter.ref ref.id="filter_161193341690900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_TCI6618"/>
							<attribute key="device.variant" value="TMS320C66XX.TCI6618"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_8.projectspec">
					<filter.ref ref.id="filter_161193341690900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_TCI6618"/>
							<attribute key="device.variant" value="TMS320C66XX.TCI6618"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_9.projectspec">
					<filter.ref ref.id="filter_161193341690900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_TCI6618"/>
							<attribute key="device.variant" value="TMS320C66XX.TCI6618"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_11.projectspec">
					<filter.ref ref.id="filter_161193341690900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_TCI6618"/>
							<attribute key="device.variant" value="TMS320C66XX.TCI6618"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_12.projectspec">
					<filter.ref ref.id="filter_161193341690900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_TCI6618"/>
							<attribute key="device.variant" value="TMS320C66XX.TCI6618"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_13.projectspec">
					<filter.ref ref.id="filter_161193341690900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_TCI6618"/>
							<attribute key="device.variant" value="TMS320C66XX.TCI6618"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_10.projectspec">
					<filter.ref ref.id="filter_161193341690900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_TCI6618"/>
							<attribute key="device.variant" value="TMS320C66XX.TCI6618"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="TMS320C6654" desc="TMS320C6654" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_161193343120100">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>TMS320C6654</tag>
					<tag>C66xx Multicore DSP</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_0.projectspec">
					<filter.ref ref.id="filter_161193343120100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_TMS320C6654"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6654"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_1.projectspec">
					<filter.ref ref.id="filter_161193343120100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_TMS320C6654"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6654"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_161193343264400">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>TMS320C6654</tag>
					<tag>C66xx Multicore DSP</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_14.projectspec">
					<filter.ref ref.id="filter_161193343264400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_TMS320C6654"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6654"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_3.projectspec">
					<filter.ref ref.id="filter_161193343264400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_TMS320C6654"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6654"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_4.projectspec">
					<filter.ref ref.id="filter_161193343264400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_TMS320C6654"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6654"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_5.projectspec">
					<filter.ref ref.id="filter_161193343264400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_TMS320C6654"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6654"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_6.projectspec">
					<filter.ref ref.id="filter_161193343264400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_TMS320C6654"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6654"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_7.projectspec">
					<filter.ref ref.id="filter_161193343264400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_TMS320C6654"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6654"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_8.projectspec">
					<filter.ref ref.id="filter_161193343264400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_TMS320C6654"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6654"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_9.projectspec">
					<filter.ref ref.id="filter_161193343264400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_TMS320C6654"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6654"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_11.projectspec">
					<filter.ref ref.id="filter_161193343264400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_TMS320C6654"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6654"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_12.projectspec">
					<filter.ref ref.id="filter_161193343264400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_TMS320C6654"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6654"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_13.projectspec">
					<filter.ref ref.id="filter_161193343264400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_TMS320C6654"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6654"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_10.projectspec">
					<filter.ref ref.id="filter_161193343264400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_TMS320C6654"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6654"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="TMS320C6655" desc="TMS320C6655" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_161193343843500">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>TMS320C6655</tag>
					<tag>C66xx Multicore DSP</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_0.projectspec">
					<filter.ref ref.id="filter_161193343843500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_TMS320C6655"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6655"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_1.projectspec">
					<filter.ref ref.id="filter_161193343843500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_TMS320C6655"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6655"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_161193343927700">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>TMS320C6655</tag>
					<tag>C66xx Multicore DSP</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_14.projectspec">
					<filter.ref ref.id="filter_161193343927700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_TMS320C6655"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6655"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_3.projectspec">
					<filter.ref ref.id="filter_161193343927700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_TMS320C6655"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6655"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_4.projectspec">
					<filter.ref ref.id="filter_161193343927700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_TMS320C6655"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6655"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_5.projectspec">
					<filter.ref ref.id="filter_161193343927700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_TMS320C6655"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6655"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_6.projectspec">
					<filter.ref ref.id="filter_161193343927700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_TMS320C6655"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6655"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_7.projectspec">
					<filter.ref ref.id="filter_161193343927700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_TMS320C6655"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6655"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_8.projectspec">
					<filter.ref ref.id="filter_161193343927700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_TMS320C6655"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6655"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_9.projectspec">
					<filter.ref ref.id="filter_161193343927700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_TMS320C6655"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6655"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_11.projectspec">
					<filter.ref ref.id="filter_161193343927700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_TMS320C6655"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6655"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_12.projectspec">
					<filter.ref ref.id="filter_161193343927700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_TMS320C6655"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6655"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_13.projectspec">
					<filter.ref ref.id="filter_161193343927700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_TMS320C6655"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6655"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_10.projectspec">
					<filter.ref ref.id="filter_161193343927700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_TMS320C6655"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6655"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="TMS320C6657" desc="TMS320C6657" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_161193344488400">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>TMS320C6657</tag>
					<tag>C66xx Multicore DSP</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_0.projectspec">
					<filter.ref ref.id="filter_161193344488400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_TMS320C6657"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6657"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_1.projectspec">
					<filter.ref ref.id="filter_161193344488400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_TMS320C6657"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6657"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_161193344569800">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>TMS320C6657</tag>
					<tag>C66xx Multicore DSP</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_14.projectspec">
					<filter.ref ref.id="filter_161193344569800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_TMS320C6657"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6657"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_3.projectspec">
					<filter.ref ref.id="filter_161193344569800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_TMS320C6657"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6657"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_4.projectspec">
					<filter.ref ref.id="filter_161193344569800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_TMS320C6657"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6657"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_5.projectspec">
					<filter.ref ref.id="filter_161193344569800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_TMS320C6657"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6657"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_6.projectspec">
					<filter.ref ref.id="filter_161193344569800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_TMS320C6657"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6657"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_7.projectspec">
					<filter.ref ref.id="filter_161193344569800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_TMS320C6657"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6657"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_8.projectspec">
					<filter.ref ref.id="filter_161193344569800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_TMS320C6657"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6657"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_9.projectspec">
					<filter.ref ref.id="filter_161193344569800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_TMS320C6657"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6657"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_11.projectspec">
					<filter.ref ref.id="filter_161193344569800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_TMS320C6657"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6657"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_12.projectspec">
					<filter.ref ref.id="filter_161193344569800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_TMS320C6657"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6657"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_13.projectspec">
					<filter.ref ref.id="filter_161193344569800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_TMS320C6657"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6657"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_10.projectspec">
					<filter.ref ref.id="filter_161193344569800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_TMS320C6657"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6657"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="TMS320C6670" desc="TMS320C6670" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_161193345128600">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>TMS320C6670</tag>
					<tag>C66xx Multicore DSP</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_0.projectspec">
					<filter.ref ref.id="filter_161193345128600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_TMS320C6670"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6670"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_1.projectspec">
					<filter.ref ref.id="filter_161193345128600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_TMS320C6670"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6670"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_161193345210400">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>TMS320C6670</tag>
					<tag>C66xx Multicore DSP</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_14.projectspec">
					<filter.ref ref.id="filter_161193345210400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_TMS320C6670"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6670"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_3.projectspec">
					<filter.ref ref.id="filter_161193345210400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_TMS320C6670"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6670"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_4.projectspec">
					<filter.ref ref.id="filter_161193345210400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_TMS320C6670"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6670"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_5.projectspec">
					<filter.ref ref.id="filter_161193345210400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_TMS320C6670"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6670"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_6.projectspec">
					<filter.ref ref.id="filter_161193345210400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_TMS320C6670"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6670"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_7.projectspec">
					<filter.ref ref.id="filter_161193345210400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_TMS320C6670"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6670"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_8.projectspec">
					<filter.ref ref.id="filter_161193345210400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_TMS320C6670"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6670"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_9.projectspec">
					<filter.ref ref.id="filter_161193345210400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_TMS320C6670"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6670"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_11.projectspec">
					<filter.ref ref.id="filter_161193345210400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_TMS320C6670"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6670"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_12.projectspec">
					<filter.ref ref.id="filter_161193345210400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_TMS320C6670"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6670"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_13.projectspec">
					<filter.ref ref.id="filter_161193345210400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_TMS320C6670"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6670"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_10.projectspec">
					<filter.ref ref.id="filter_161193345210400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_TMS320C6670"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6670"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="TMS320C6671" desc="TMS320C6671" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_161193345787500">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>TMS320C6671</tag>
					<tag>C66xx Multicore DSP</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_0.projectspec">
					<filter.ref ref.id="filter_161193345787500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_TMS320C6671"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6671"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_1.projectspec">
					<filter.ref ref.id="filter_161193345787500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_TMS320C6671"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6671"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_161193345872900">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>TMS320C6671</tag>
					<tag>C66xx Multicore DSP</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_14.projectspec">
					<filter.ref ref.id="filter_161193345872900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_TMS320C6671"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6671"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_3.projectspec">
					<filter.ref ref.id="filter_161193345872900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_TMS320C6671"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6671"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_4.projectspec">
					<filter.ref ref.id="filter_161193345872900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_TMS320C6671"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6671"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_5.projectspec">
					<filter.ref ref.id="filter_161193345872900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_TMS320C6671"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6671"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_6.projectspec">
					<filter.ref ref.id="filter_161193345872900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_TMS320C6671"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6671"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_7.projectspec">
					<filter.ref ref.id="filter_161193345872900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_TMS320C6671"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6671"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_8.projectspec">
					<filter.ref ref.id="filter_161193345872900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_TMS320C6671"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6671"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_9.projectspec">
					<filter.ref ref.id="filter_161193345872900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_TMS320C6671"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6671"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_11.projectspec">
					<filter.ref ref.id="filter_161193345872900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_TMS320C6671"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6671"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_12.projectspec">
					<filter.ref ref.id="filter_161193345872900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_TMS320C6671"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6671"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_13.projectspec">
					<filter.ref ref.id="filter_161193345872900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_TMS320C6671"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6671"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_10.projectspec">
					<filter.ref ref.id="filter_161193345872900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_TMS320C6671"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6671"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="TMS320C6672" desc="TMS320C6672" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_161193347584900">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>TMS320C6672</tag>
					<tag>C66xx Multicore DSP</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_0.projectspec">
					<filter.ref ref.id="filter_161193347584900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_TMS320C6672"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6672"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_1.projectspec">
					<filter.ref ref.id="filter_161193347584900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_TMS320C6672"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6672"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_161193347694100">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>TMS320C6672</tag>
					<tag>C66xx Multicore DSP</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_14.projectspec">
					<filter.ref ref.id="filter_161193347694100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_TMS320C6672"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6672"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_3.projectspec">
					<filter.ref ref.id="filter_161193347694100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_TMS320C6672"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6672"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_4.projectspec">
					<filter.ref ref.id="filter_161193347694100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_TMS320C6672"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6672"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_5.projectspec">
					<filter.ref ref.id="filter_161193347694100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_TMS320C6672"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6672"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_6.projectspec">
					<filter.ref ref.id="filter_161193347694100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_TMS320C6672"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6672"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_7.projectspec">
					<filter.ref ref.id="filter_161193347694100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_TMS320C6672"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6672"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_8.projectspec">
					<filter.ref ref.id="filter_161193347694100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_TMS320C6672"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6672"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_9.projectspec">
					<filter.ref ref.id="filter_161193347694100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_TMS320C6672"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6672"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_11.projectspec">
					<filter.ref ref.id="filter_161193347694100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_TMS320C6672"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6672"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_12.projectspec">
					<filter.ref ref.id="filter_161193347694100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_TMS320C6672"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6672"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_13.projectspec">
					<filter.ref ref.id="filter_161193347694100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_TMS320C6672"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6672"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_10.projectspec">
					<filter.ref ref.id="filter_161193347694100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_TMS320C6672"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6672"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="TMS320C6674" desc="TMS320C6674" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_161193348421400">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>TMS320C6674</tag>
					<tag>C66xx Multicore DSP</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_0.projectspec">
					<filter.ref ref.id="filter_161193348421400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_TMS320C6674"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6674"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_1.projectspec">
					<filter.ref ref.id="filter_161193348421400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_TMS320C6674"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6674"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_161193348523400">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>TMS320C6674</tag>
					<tag>C66xx Multicore DSP</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_14.projectspec">
					<filter.ref ref.id="filter_161193348523400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_TMS320C6674"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6674"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_3.projectspec">
					<filter.ref ref.id="filter_161193348523400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_TMS320C6674"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6674"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_4.projectspec">
					<filter.ref ref.id="filter_161193348523400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_TMS320C6674"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6674"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_5.projectspec">
					<filter.ref ref.id="filter_161193348523400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_TMS320C6674"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6674"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_6.projectspec">
					<filter.ref ref.id="filter_161193348523400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_TMS320C6674"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6674"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_7.projectspec">
					<filter.ref ref.id="filter_161193348523400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_TMS320C6674"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6674"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_8.projectspec">
					<filter.ref ref.id="filter_161193348523400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_TMS320C6674"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6674"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_9.projectspec">
					<filter.ref ref.id="filter_161193348523400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_TMS320C6674"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6674"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_11.projectspec">
					<filter.ref ref.id="filter_161193348523400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_TMS320C6674"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6674"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_12.projectspec">
					<filter.ref ref.id="filter_161193348523400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_TMS320C6674"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6674"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_13.projectspec">
					<filter.ref ref.id="filter_161193348523400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_TMS320C6674"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6674"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_10.projectspec">
					<filter.ref ref.id="filter_161193348523400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_TMS320C6674"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6674"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="TMS320C6678" desc="TMS320C6678" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_161193349138800">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>TMS320C6678</tag>
					<tag>C66xx Multicore DSP</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_0.projectspec">
					<filter.ref ref.id="filter_161193349138800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_TMS320C6678"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6678"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_1.projectspec">
					<filter.ref ref.id="filter_161193349138800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_TMS320C6678"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6678"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_161193349222000">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>TMS320C6678</tag>
					<tag>C66xx Multicore DSP</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_14.projectspec">
					<filter.ref ref.id="filter_161193349222000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_TMS320C6678"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6678"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_3.projectspec">
					<filter.ref ref.id="filter_161193349222000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_TMS320C6678"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6678"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_4.projectspec">
					<filter.ref ref.id="filter_161193349222000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_TMS320C6678"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6678"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_5.projectspec">
					<filter.ref ref.id="filter_161193349222000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_TMS320C6678"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6678"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_6.projectspec">
					<filter.ref ref.id="filter_161193349222000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_TMS320C6678"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6678"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_7.projectspec">
					<filter.ref ref.id="filter_161193349222000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_TMS320C6678"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6678"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_8.projectspec">
					<filter.ref ref.id="filter_161193349222000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_TMS320C6678"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6678"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_9.projectspec">
					<filter.ref ref.id="filter_161193349222000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_TMS320C6678"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6678"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_11.projectspec">
					<filter.ref ref.id="filter_161193349222000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_TMS320C6678"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6678"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_12.projectspec">
					<filter.ref ref.id="filter_161193349222000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_TMS320C6678"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6678"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_13.projectspec">
					<filter.ref ref.id="filter_161193349222000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_TMS320C6678"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6678"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_10.projectspec">
					<filter.ref ref.id="filter_161193349222000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_TMS320C6678"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6678"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
		</contents>
		<contents name="C674x Floating-point DSP" desc="C674x Floating-point DSP" icon="plugin://icons/obj16/devices.png">
			<contents name="EVMC6747" desc="EVMC6747" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_161193358376300">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>EVMC6747</tag>
					<tag>C674x Floating-point DSP</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_0.projectspec">
					<filter.ref ref.id="filter_161193358376300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_EVMC6747"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6747.EVMC6747"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_1.projectspec">
					<filter.ref ref.id="filter_161193358376300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_EVMC6747"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6747.EVMC6747"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_161193358496500">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>EVMC6747</tag>
					<tag>C674x Floating-point DSP</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_14.projectspec">
					<filter.ref ref.id="filter_161193358496500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_EVMC6747"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6747.EVMC6747"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_3.projectspec">
					<filter.ref ref.id="filter_161193358496500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_EVMC6747"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6747.EVMC6747"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_4.projectspec">
					<filter.ref ref.id="filter_161193358496500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_EVMC6747"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6747.EVMC6747"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_5.projectspec">
					<filter.ref ref.id="filter_161193358496500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_EVMC6747"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6747.EVMC6747"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_6.projectspec">
					<filter.ref ref.id="filter_161193358496500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_EVMC6747"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6747.EVMC6747"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_7.projectspec">
					<filter.ref ref.id="filter_161193358496500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_EVMC6747"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6747.EVMC6747"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_8.projectspec">
					<filter.ref ref.id="filter_161193358496500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_EVMC6747"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6747.EVMC6747"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_9.projectspec">
					<filter.ref ref.id="filter_161193358496500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_EVMC6747"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6747.EVMC6747"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_11.projectspec">
					<filter.ref ref.id="filter_161193358496500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_EVMC6747"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6747.EVMC6747"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_12.projectspec">
					<filter.ref ref.id="filter_161193358496500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_EVMC6747"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6747.EVMC6747"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_13.projectspec">
					<filter.ref ref.id="filter_161193358496500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_EVMC6747"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6747.EVMC6747"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_10.projectspec">
					<filter.ref ref.id="filter_161193358496500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_EVMC6747"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6747.EVMC6747"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="EVMC6748" desc="EVMC6748" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_161193359101200">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>EVMC6748</tag>
					<tag>C674x Floating-point DSP</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_0.projectspec">
					<filter.ref ref.id="filter_161193359101200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_EVMC6748"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6748.EVMC6748"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_1.projectspec">
					<filter.ref ref.id="filter_161193359101200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_EVMC6748"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6748.EVMC6748"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_161193359187200">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>EVMC6748</tag>
					<tag>C674x Floating-point DSP</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_14.projectspec">
					<filter.ref ref.id="filter_161193359187200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_EVMC6748"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6748.EVMC6748"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_3.projectspec">
					<filter.ref ref.id="filter_161193359187200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_EVMC6748"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6748.EVMC6748"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_4.projectspec">
					<filter.ref ref.id="filter_161193359187200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_EVMC6748"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6748.EVMC6748"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_5.projectspec">
					<filter.ref ref.id="filter_161193359187200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_EVMC6748"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6748.EVMC6748"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_6.projectspec">
					<filter.ref ref.id="filter_161193359187200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_EVMC6748"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6748.EVMC6748"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_7.projectspec">
					<filter.ref ref.id="filter_161193359187200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_EVMC6748"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6748.EVMC6748"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_8.projectspec">
					<filter.ref ref.id="filter_161193359187200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_EVMC6748"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6748.EVMC6748"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_9.projectspec">
					<filter.ref ref.id="filter_161193359187200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_EVMC6748"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6748.EVMC6748"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_11.projectspec">
					<filter.ref ref.id="filter_161193359187200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_EVMC6748"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6748.EVMC6748"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_12.projectspec">
					<filter.ref ref.id="filter_161193359187200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_EVMC6748"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6748.EVMC6748"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_13.projectspec">
					<filter.ref ref.id="filter_161193359187200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_EVMC6748"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6748.EVMC6748"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_10.projectspec">
					<filter.ref ref.id="filter_161193359187200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_EVMC6748"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6748.EVMC6748"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="LCDKC6748" desc="LCDKC6748" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_161193359776600">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>LCDKC6748</tag>
					<tag>C674x Floating-point DSP</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_0.projectspec">
					<filter.ref ref.id="filter_161193359776600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_LCDKC6748"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6748.LCDKC6748"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_1.projectspec">
					<filter.ref ref.id="filter_161193359776600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_LCDKC6748"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6748.LCDKC6748"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_161193359863200">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>LCDKC6748</tag>
					<tag>C674x Floating-point DSP</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_14.projectspec">
					<filter.ref ref.id="filter_161193359863200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_LCDKC6748"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6748.LCDKC6748"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_3.projectspec">
					<filter.ref ref.id="filter_161193359863200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_LCDKC6748"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6748.LCDKC6748"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_4.projectspec">
					<filter.ref ref.id="filter_161193359863200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_LCDKC6748"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6748.LCDKC6748"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_5.projectspec">
					<filter.ref ref.id="filter_161193359863200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_LCDKC6748"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6748.LCDKC6748"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_6.projectspec">
					<filter.ref ref.id="filter_161193359863200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_LCDKC6748"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6748.LCDKC6748"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_7.projectspec">
					<filter.ref ref.id="filter_161193359863200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_LCDKC6748"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6748.LCDKC6748"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_8.projectspec">
					<filter.ref ref.id="filter_161193359863200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_LCDKC6748"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6748.LCDKC6748"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_9.projectspec">
					<filter.ref ref.id="filter_161193359863200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_LCDKC6748"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6748.LCDKC6748"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_11.projectspec">
					<filter.ref ref.id="filter_161193359863200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_LCDKC6748"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6748.LCDKC6748"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_12.projectspec">
					<filter.ref ref.id="filter_161193359863200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_LCDKC6748"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6748.LCDKC6748"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_13.projectspec">
					<filter.ref ref.id="filter_161193359863200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_LCDKC6748"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6748.LCDKC6748"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_10.projectspec">
					<filter.ref ref.id="filter_161193359863200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_LCDKC6748"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6748.LCDKC6748"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="TMS320C6742" desc="TMS320C6742" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_161193360452400">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>TMS320C6742</tag>
					<tag>C674x Floating-point DSP</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_0.projectspec">
					<filter.ref ref.id="filter_161193360452400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_TMS320C6742"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6742"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_1.projectspec">
					<filter.ref ref.id="filter_161193360452400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_TMS320C6742"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6742"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_161193360535400">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>TMS320C6742</tag>
					<tag>C674x Floating-point DSP</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_14.projectspec">
					<filter.ref ref.id="filter_161193360535400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_TMS320C6742"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6742"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_3.projectspec">
					<filter.ref ref.id="filter_161193360535400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_TMS320C6742"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6742"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_4.projectspec">
					<filter.ref ref.id="filter_161193360535400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_TMS320C6742"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6742"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_5.projectspec">
					<filter.ref ref.id="filter_161193360535400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_TMS320C6742"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6742"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_6.projectspec">
					<filter.ref ref.id="filter_161193360535400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_TMS320C6742"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6742"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_7.projectspec">
					<filter.ref ref.id="filter_161193360535400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_TMS320C6742"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6742"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_8.projectspec">
					<filter.ref ref.id="filter_161193360535400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_TMS320C6742"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6742"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_9.projectspec">
					<filter.ref ref.id="filter_161193360535400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_TMS320C6742"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6742"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_11.projectspec">
					<filter.ref ref.id="filter_161193360535400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_TMS320C6742"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6742"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_12.projectspec">
					<filter.ref ref.id="filter_161193360535400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_TMS320C6742"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6742"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_13.projectspec">
					<filter.ref ref.id="filter_161193360535400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_TMS320C6742"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6742"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_10.projectspec">
					<filter.ref ref.id="filter_161193360535400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_TMS320C6742"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6742"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="TMS320C6743" desc="TMS320C6743" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_161193362082500">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>TMS320C6743</tag>
					<tag>C674x Floating-point DSP</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_0.projectspec">
					<filter.ref ref.id="filter_161193362082500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_TMS320C6743"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6743"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_1.projectspec">
					<filter.ref ref.id="filter_161193362082500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_TMS320C6743"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6743"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_161193362169300">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>TMS320C6743</tag>
					<tag>C674x Floating-point DSP</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_14.projectspec">
					<filter.ref ref.id="filter_161193362169300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_TMS320C6743"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6743"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_3.projectspec">
					<filter.ref ref.id="filter_161193362169300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_TMS320C6743"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6743"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_4.projectspec">
					<filter.ref ref.id="filter_161193362169300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_TMS320C6743"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6743"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_5.projectspec">
					<filter.ref ref.id="filter_161193362169300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_TMS320C6743"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6743"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_6.projectspec">
					<filter.ref ref.id="filter_161193362169300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_TMS320C6743"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6743"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_7.projectspec">
					<filter.ref ref.id="filter_161193362169300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_TMS320C6743"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6743"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_8.projectspec">
					<filter.ref ref.id="filter_161193362169300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_TMS320C6743"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6743"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_9.projectspec">
					<filter.ref ref.id="filter_161193362169300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_TMS320C6743"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6743"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_11.projectspec">
					<filter.ref ref.id="filter_161193362169300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_TMS320C6743"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6743"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_12.projectspec">
					<filter.ref ref.id="filter_161193362169300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_TMS320C6743"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6743"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_13.projectspec">
					<filter.ref ref.id="filter_161193362169300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_TMS320C6743"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6743"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_10.projectspec">
					<filter.ref ref.id="filter_161193362169300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_TMS320C6743"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6743"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="TMS320C6745" desc="TMS320C6745" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_161193362810300">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>TMS320C6745</tag>
					<tag>C674x Floating-point DSP</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_0.projectspec">
					<filter.ref ref.id="filter_161193362810300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_TMS320C6745"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6745"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_1.projectspec">
					<filter.ref ref.id="filter_161193362810300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_TMS320C6745"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6745"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_161193362912900">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>TMS320C6745</tag>
					<tag>C674x Floating-point DSP</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_14.projectspec">
					<filter.ref ref.id="filter_161193362912900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_TMS320C6745"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6745"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_3.projectspec">
					<filter.ref ref.id="filter_161193362912900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_TMS320C6745"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6745"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_4.projectspec">
					<filter.ref ref.id="filter_161193362912900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_TMS320C6745"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6745"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_5.projectspec">
					<filter.ref ref.id="filter_161193362912900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_TMS320C6745"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6745"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_6.projectspec">
					<filter.ref ref.id="filter_161193362912900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_TMS320C6745"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6745"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_7.projectspec">
					<filter.ref ref.id="filter_161193362912900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_TMS320C6745"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6745"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_8.projectspec">
					<filter.ref ref.id="filter_161193362912900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_TMS320C6745"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6745"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_9.projectspec">
					<filter.ref ref.id="filter_161193362912900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_TMS320C6745"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6745"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_11.projectspec">
					<filter.ref ref.id="filter_161193362912900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_TMS320C6745"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6745"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_12.projectspec">
					<filter.ref ref.id="filter_161193362912900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_TMS320C6745"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6745"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_13.projectspec">
					<filter.ref ref.id="filter_161193362912900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_TMS320C6745"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6745"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_10.projectspec">
					<filter.ref ref.id="filter_161193362912900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_TMS320C6745"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6745"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="TMS320C6746" desc="TMS320C6746" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_161193363636200">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>TMS320C6746</tag>
					<tag>C674x Floating-point DSP</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_0.projectspec">
					<filter.ref ref.id="filter_161193363636200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_TMS320C6746"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6746"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_1.projectspec">
					<filter.ref ref.id="filter_161193363636200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_TMS320C6746"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6746"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_161193363720200">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>TMS320C6746</tag>
					<tag>C674x Floating-point DSP</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_14.projectspec">
					<filter.ref ref.id="filter_161193363720200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_TMS320C6746"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6746"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_3.projectspec">
					<filter.ref ref.id="filter_161193363720200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_TMS320C6746"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6746"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_4.projectspec">
					<filter.ref ref.id="filter_161193363720200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_TMS320C6746"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6746"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_5.projectspec">
					<filter.ref ref.id="filter_161193363720200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_TMS320C6746"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6746"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_6.projectspec">
					<filter.ref ref.id="filter_161193363720200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_TMS320C6746"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6746"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_7.projectspec">
					<filter.ref ref.id="filter_161193363720200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_TMS320C6746"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6746"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_8.projectspec">
					<filter.ref ref.id="filter_161193363720200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_TMS320C6746"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6746"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_9.projectspec">
					<filter.ref ref.id="filter_161193363720200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_TMS320C6746"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6746"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_11.projectspec">
					<filter.ref ref.id="filter_161193363720200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_TMS320C6746"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6746"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_12.projectspec">
					<filter.ref ref.id="filter_161193363720200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_TMS320C6746"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6746"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_13.projectspec">
					<filter.ref ref.id="filter_161193363720200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_TMS320C6746"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6746"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_10.projectspec">
					<filter.ref ref.id="filter_161193363720200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_TMS320C6746"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6746"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="TMS320C6747" desc="TMS320C6747" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_161193364333500">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>TMS320C6747</tag>
					<tag>C674x Floating-point DSP</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_0.projectspec">
					<filter.ref ref.id="filter_161193364333500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_TMS320C6747"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6747"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_1.projectspec">
					<filter.ref ref.id="filter_161193364333500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_TMS320C6747"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6747"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_161193364418100">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>TMS320C6747</tag>
					<tag>C674x Floating-point DSP</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_14.projectspec">
					<filter.ref ref.id="filter_161193364418100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_TMS320C6747"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6747"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_3.projectspec">
					<filter.ref ref.id="filter_161193364418100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_TMS320C6747"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6747"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_4.projectspec">
					<filter.ref ref.id="filter_161193364418100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_TMS320C6747"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6747"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_5.projectspec">
					<filter.ref ref.id="filter_161193364418100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_TMS320C6747"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6747"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_6.projectspec">
					<filter.ref ref.id="filter_161193364418100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_TMS320C6747"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6747"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_7.projectspec">
					<filter.ref ref.id="filter_161193364418100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_TMS320C6747"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6747"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_8.projectspec">
					<filter.ref ref.id="filter_161193364418100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_TMS320C6747"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6747"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_9.projectspec">
					<filter.ref ref.id="filter_161193364418100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_TMS320C6747"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6747"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_11.projectspec">
					<filter.ref ref.id="filter_161193364418100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_TMS320C6747"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6747"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_12.projectspec">
					<filter.ref ref.id="filter_161193364418100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_TMS320C6747"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6747"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_13.projectspec">
					<filter.ref ref.id="filter_161193364418100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_TMS320C6747"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6747"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_10.projectspec">
					<filter.ref ref.id="filter_161193364418100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_TMS320C6747"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6747"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="TMS320C6748" desc="TMS320C6748" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_161193364974000">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>TMS320C6748</tag>
					<tag>C674x Floating-point DSP</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_0.projectspec">
					<filter.ref ref.id="filter_161193364974000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_TMS320C6748"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6748"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_1.projectspec">
					<filter.ref ref.id="filter_161193364974000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_TMS320C6748"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6748"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_161193365063200">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>TMS320C6748</tag>
					<tag>C674x Floating-point DSP</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_14.projectspec">
					<filter.ref ref.id="filter_161193365063200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_TMS320C6748"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6748"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_3.projectspec">
					<filter.ref ref.id="filter_161193365063200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_TMS320C6748"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6748"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_4.projectspec">
					<filter.ref ref.id="filter_161193365063200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_TMS320C6748"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6748"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_5.projectspec">
					<filter.ref ref.id="filter_161193365063200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_TMS320C6748"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6748"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_6.projectspec">
					<filter.ref ref.id="filter_161193365063200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_TMS320C6748"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6748"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_7.projectspec">
					<filter.ref ref.id="filter_161193365063200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_TMS320C6748"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6748"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_8.projectspec">
					<filter.ref ref.id="filter_161193365063200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_TMS320C6748"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6748"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_9.projectspec">
					<filter.ref ref.id="filter_161193365063200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_TMS320C6748"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6748"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_11.projectspec">
					<filter.ref ref.id="filter_161193365063200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_TMS320C6748"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6748"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_12.projectspec">
					<filter.ref ref.id="filter_161193365063200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_TMS320C6748"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6748"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_13.projectspec">
					<filter.ref ref.id="filter_161193365063200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_TMS320C6748"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6748"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_10.projectspec">
					<filter.ref ref.id="filter_161193365063200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_TMS320C6748"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6748"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
		</contents>
		<contents name="DaVinci DM37xx" desc="DaVinci DM37xx" icon="plugin://icons/obj16/devices.png">
			<contents name="BeagleBoard_xM" desc="BeagleBoard_xM" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_161193366681700">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>BeagleBoard_xM</tag>
					<tag>DaVinci DM37xx</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_0.projectspec">
					<filter.ref ref.id="filter_161193366681700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_BeagleBoard_xM_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.DM3730.BeagleBoard_xM"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_1.projectspec">
					<filter.ref ref.id="filter_161193366681700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_BeagleBoard_xM_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.DM3730.BeagleBoard_xM"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_161193366789800">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>BeagleBoard_xM</tag>
					<tag>DaVinci DM37xx</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_14.projectspec">
					<filter.ref ref.id="filter_161193366789800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_BeagleBoard_xM_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.DM3730.BeagleBoard_xM"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_3.projectspec">
					<filter.ref ref.id="filter_161193366789800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_BeagleBoard_xM_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.DM3730.BeagleBoard_xM"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_4.projectspec">
					<filter.ref ref.id="filter_161193366789800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_BeagleBoard_xM_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.DM3730.BeagleBoard_xM"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_5.projectspec">
					<filter.ref ref.id="filter_161193366789800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_BeagleBoard_xM_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.DM3730.BeagleBoard_xM"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_6.projectspec">
					<filter.ref ref.id="filter_161193366789800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_BeagleBoard_xM_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.DM3730.BeagleBoard_xM"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_7.projectspec">
					<filter.ref ref.id="filter_161193366789800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_BeagleBoard_xM_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.DM3730.BeagleBoard_xM"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_8.projectspec">
					<filter.ref ref.id="filter_161193366789800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_BeagleBoard_xM_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.DM3730.BeagleBoard_xM"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_9.projectspec">
					<filter.ref ref.id="filter_161193366789800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_BeagleBoard_xM_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.DM3730.BeagleBoard_xM"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_11.projectspec">
					<filter.ref ref.id="filter_161193366789800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_BeagleBoard_xM_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.DM3730.BeagleBoard_xM"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_12.projectspec">
					<filter.ref ref.id="filter_161193366789800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_BeagleBoard_xM_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.DM3730.BeagleBoard_xM"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_13.projectspec">
					<filter.ref ref.id="filter_161193366789800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_BeagleBoard_xM_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.DM3730.BeagleBoard_xM"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_10.projectspec">
					<filter.ref ref.id="filter_161193366789800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_BeagleBoard_xM_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.DM3730.BeagleBoard_xM"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="DM3725" desc="DM3725" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_161193367510100">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>DM3725</tag>
					<tag>DaVinci DM37xx</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_0.projectspec">
					<filter.ref ref.id="filter_161193367510100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_DM3725_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.DM3725"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_1.projectspec">
					<filter.ref ref.id="filter_161193367510100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_DM3725_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.DM3725"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_161193367606600">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>DM3725</tag>
					<tag>DaVinci DM37xx</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_14.projectspec">
					<filter.ref ref.id="filter_161193367606600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_DM3725_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.DM3725"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_3.projectspec">
					<filter.ref ref.id="filter_161193367606600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_DM3725_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.DM3725"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_4.projectspec">
					<filter.ref ref.id="filter_161193367606600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_DM3725_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.DM3725"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_5.projectspec">
					<filter.ref ref.id="filter_161193367606600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_DM3725_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.DM3725"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_6.projectspec">
					<filter.ref ref.id="filter_161193367606600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_DM3725_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.DM3725"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_7.projectspec">
					<filter.ref ref.id="filter_161193367606600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_DM3725_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.DM3725"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_8.projectspec">
					<filter.ref ref.id="filter_161193367606600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_DM3725_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.DM3725"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_9.projectspec">
					<filter.ref ref.id="filter_161193367606600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_DM3725_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.DM3725"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_11.projectspec">
					<filter.ref ref.id="filter_161193367606600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_DM3725_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.DM3725"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_12.projectspec">
					<filter.ref ref.id="filter_161193367606600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_DM3725_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.DM3725"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_13.projectspec">
					<filter.ref ref.id="filter_161193367606600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_DM3725_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.DM3725"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_10.projectspec">
					<filter.ref ref.id="filter_161193367606600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_DM3725_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.DM3725"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="DM3730" desc="DM3730" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_161193368186900">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>DM3730</tag>
					<tag>DaVinci DM37xx</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_0.projectspec">
					<filter.ref ref.id="filter_161193368186900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_DM3730_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.DM3730"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_1.projectspec">
					<filter.ref ref.id="filter_161193368186900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_DM3730_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.DM3730"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_161193368269700">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>DM3730</tag>
					<tag>DaVinci DM37xx</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_14.projectspec">
					<filter.ref ref.id="filter_161193368269700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_DM3730_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.DM3730"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_3.projectspec">
					<filter.ref ref.id="filter_161193368269700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_DM3730_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.DM3730"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_4.projectspec">
					<filter.ref ref.id="filter_161193368269700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_DM3730_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.DM3730"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_5.projectspec">
					<filter.ref ref.id="filter_161193368269700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_DM3730_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.DM3730"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_6.projectspec">
					<filter.ref ref.id="filter_161193368269700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_DM3730_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.DM3730"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_7.projectspec">
					<filter.ref ref.id="filter_161193368269700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_DM3730_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.DM3730"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_8.projectspec">
					<filter.ref ref.id="filter_161193368269700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_DM3730_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.DM3730"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_9.projectspec">
					<filter.ref ref.id="filter_161193368269700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_DM3730_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.DM3730"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_11.projectspec">
					<filter.ref ref.id="filter_161193368269700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_DM3730_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.DM3730"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_12.projectspec">
					<filter.ref ref.id="filter_161193368269700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_DM3730_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.DM3730"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_13.projectspec">
					<filter.ref ref.id="filter_161193368269700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_DM3730_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.DM3730"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_10.projectspec">
					<filter.ref ref.id="filter_161193368269700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_DM3730_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.DM3730"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="EVMDM3730" desc="EVMDM3730" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_161193369837400">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>EVMDM3730</tag>
					<tag>DaVinci DM37xx</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_0.projectspec">
					<filter.ref ref.id="filter_161193369837400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_EVMDM3730_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.DM3730.EVMDM3730"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_1.projectspec">
					<filter.ref ref.id="filter_161193369837400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_EVMDM3730_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.DM3730.EVMDM3730"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_161193369930300">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>EVMDM3730</tag>
					<tag>DaVinci DM37xx</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_14.projectspec">
					<filter.ref ref.id="filter_161193369930300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_EVMDM3730_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.DM3730.EVMDM3730"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_3.projectspec">
					<filter.ref ref.id="filter_161193369930300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_EVMDM3730_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.DM3730.EVMDM3730"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_4.projectspec">
					<filter.ref ref.id="filter_161193369930300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_EVMDM3730_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.DM3730.EVMDM3730"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_5.projectspec">
					<filter.ref ref.id="filter_161193369930300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_EVMDM3730_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.DM3730.EVMDM3730"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_6.projectspec">
					<filter.ref ref.id="filter_161193369930300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_EVMDM3730_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.DM3730.EVMDM3730"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_7.projectspec">
					<filter.ref ref.id="filter_161193369930300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_EVMDM3730_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.DM3730.EVMDM3730"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_8.projectspec">
					<filter.ref ref.id="filter_161193369930300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_EVMDM3730_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.DM3730.EVMDM3730"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_9.projectspec">
					<filter.ref ref.id="filter_161193369930300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_EVMDM3730_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.DM3730.EVMDM3730"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_11.projectspec">
					<filter.ref ref.id="filter_161193369930300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_EVMDM3730_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.DM3730.EVMDM3730"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_12.projectspec">
					<filter.ref ref.id="filter_161193369930300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_EVMDM3730_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.DM3730.EVMDM3730"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_13.projectspec">
					<filter.ref ref.id="filter_161193369930300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_EVMDM3730_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.DM3730.EVMDM3730"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_10.projectspec">
					<filter.ref ref.id="filter_161193369930300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_EVMDM3730_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.DM3730.EVMDM3730"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
		</contents>
		<contents name="DaVinci DM643x" desc="DaVinci DM643x" icon="plugin://icons/obj16/devices.png">
			<contents name="EVMDM6437" desc="EVMDM6437" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_161193370604000">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>EVMDM6437</tag>
					<tag>DaVinci DM643x</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_0.projectspec">
					<filter.ref ref.id="filter_161193370604000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_EVMDM6437"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM6437.EVMDM6437"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_1.projectspec">
					<filter.ref ref.id="filter_161193370604000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_EVMDM6437"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM6437.EVMDM6437"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_161193370708000">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>EVMDM6437</tag>
					<tag>DaVinci DM643x</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_14.projectspec">
					<filter.ref ref.id="filter_161193370708000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_EVMDM6437"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM6437.EVMDM6437"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_3.projectspec">
					<filter.ref ref.id="filter_161193370708000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_EVMDM6437"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM6437.EVMDM6437"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_4.projectspec">
					<filter.ref ref.id="filter_161193370708000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_EVMDM6437"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM6437.EVMDM6437"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_5.projectspec">
					<filter.ref ref.id="filter_161193370708000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_EVMDM6437"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM6437.EVMDM6437"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_6.projectspec">
					<filter.ref ref.id="filter_161193370708000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_EVMDM6437"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM6437.EVMDM6437"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_7.projectspec">
					<filter.ref ref.id="filter_161193370708000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_EVMDM6437"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM6437.EVMDM6437"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_8.projectspec">
					<filter.ref ref.id="filter_161193370708000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_EVMDM6437"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM6437.EVMDM6437"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_9.projectspec">
					<filter.ref ref.id="filter_161193370708000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_EVMDM6437"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM6437.EVMDM6437"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_11.projectspec">
					<filter.ref ref.id="filter_161193370708000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_EVMDM6437"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM6437.EVMDM6437"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_12.projectspec">
					<filter.ref ref.id="filter_161193370708000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_EVMDM6437"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM6437.EVMDM6437"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_13.projectspec">
					<filter.ref ref.id="filter_161193370708000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_EVMDM6437"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM6437.EVMDM6437"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_10.projectspec">
					<filter.ref ref.id="filter_161193370708000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_EVMDM6437"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM6437.EVMDM6437"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="TMS320DM6431" desc="TMS320DM6431" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_161193371422300">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>TMS320DM6431</tag>
					<tag>DaVinci DM643x</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_0.projectspec">
					<filter.ref ref.id="filter_161193371422300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_TMS320DM6431"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM6431"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_1.projectspec">
					<filter.ref ref.id="filter_161193371422300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_TMS320DM6431"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM6431"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_161193371526300">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>TMS320DM6431</tag>
					<tag>DaVinci DM643x</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_14.projectspec">
					<filter.ref ref.id="filter_161193371526300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_TMS320DM6431"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM6431"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_3.projectspec">
					<filter.ref ref.id="filter_161193371526300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_TMS320DM6431"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM6431"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_4.projectspec">
					<filter.ref ref.id="filter_161193371526300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_TMS320DM6431"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM6431"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_5.projectspec">
					<filter.ref ref.id="filter_161193371526300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_TMS320DM6431"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM6431"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_6.projectspec">
					<filter.ref ref.id="filter_161193371526300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_TMS320DM6431"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM6431"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_7.projectspec">
					<filter.ref ref.id="filter_161193371526300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_TMS320DM6431"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM6431"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_8.projectspec">
					<filter.ref ref.id="filter_161193371526300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_TMS320DM6431"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM6431"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_9.projectspec">
					<filter.ref ref.id="filter_161193371526300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_TMS320DM6431"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM6431"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_11.projectspec">
					<filter.ref ref.id="filter_161193371526300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_TMS320DM6431"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM6431"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_12.projectspec">
					<filter.ref ref.id="filter_161193371526300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_TMS320DM6431"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM6431"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_13.projectspec">
					<filter.ref ref.id="filter_161193371526300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_TMS320DM6431"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM6431"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_10.projectspec">
					<filter.ref ref.id="filter_161193371526300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_TMS320DM6431"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM6431"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="TMS320DM6433" desc="TMS320DM6433" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_161193372182700">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>TMS320DM6433</tag>
					<tag>DaVinci DM643x</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_0.projectspec">
					<filter.ref ref.id="filter_161193372182700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_TMS320DM6433"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM6433"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_1.projectspec">
					<filter.ref ref.id="filter_161193372182700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_TMS320DM6433"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM6433"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_161193372264600">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>TMS320DM6433</tag>
					<tag>DaVinci DM643x</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_14.projectspec">
					<filter.ref ref.id="filter_161193372264600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_TMS320DM6433"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM6433"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_3.projectspec">
					<filter.ref ref.id="filter_161193372264600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_TMS320DM6433"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM6433"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_4.projectspec">
					<filter.ref ref.id="filter_161193372264600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_TMS320DM6433"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM6433"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_5.projectspec">
					<filter.ref ref.id="filter_161193372264600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_TMS320DM6433"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM6433"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_6.projectspec">
					<filter.ref ref.id="filter_161193372264600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_TMS320DM6433"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM6433"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_7.projectspec">
					<filter.ref ref.id="filter_161193372264600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_TMS320DM6433"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM6433"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_8.projectspec">
					<filter.ref ref.id="filter_161193372264600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_TMS320DM6433"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM6433"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_9.projectspec">
					<filter.ref ref.id="filter_161193372264600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_TMS320DM6433"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM6433"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_11.projectspec">
					<filter.ref ref.id="filter_161193372264600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_TMS320DM6433"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM6433"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_12.projectspec">
					<filter.ref ref.id="filter_161193372264600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_TMS320DM6433"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM6433"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_13.projectspec">
					<filter.ref ref.id="filter_161193372264600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_TMS320DM6433"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM6433"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_10.projectspec">
					<filter.ref ref.id="filter_161193372264600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_TMS320DM6433"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM6433"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="TMS320DM6435" desc="TMS320DM6435" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_161193372823800">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>TMS320DM6435</tag>
					<tag>DaVinci DM643x</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_0.projectspec">
					<filter.ref ref.id="filter_161193372823800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_TMS320DM6435"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM6435"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_1.projectspec">
					<filter.ref ref.id="filter_161193372823800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_TMS320DM6435"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM6435"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_161193372904800">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>TMS320DM6435</tag>
					<tag>DaVinci DM643x</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_14.projectspec">
					<filter.ref ref.id="filter_161193372904800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_TMS320DM6435"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM6435"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_3.projectspec">
					<filter.ref ref.id="filter_161193372904800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_TMS320DM6435"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM6435"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_4.projectspec">
					<filter.ref ref.id="filter_161193372904800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_TMS320DM6435"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM6435"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_5.projectspec">
					<filter.ref ref.id="filter_161193372904800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_TMS320DM6435"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM6435"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_6.projectspec">
					<filter.ref ref.id="filter_161193372904800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_TMS320DM6435"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM6435"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_7.projectspec">
					<filter.ref ref.id="filter_161193372904800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_TMS320DM6435"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM6435"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_8.projectspec">
					<filter.ref ref.id="filter_161193372904800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_TMS320DM6435"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM6435"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_9.projectspec">
					<filter.ref ref.id="filter_161193372904800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_TMS320DM6435"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM6435"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_11.projectspec">
					<filter.ref ref.id="filter_161193372904800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_TMS320DM6435"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM6435"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_12.projectspec">
					<filter.ref ref.id="filter_161193372904800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_TMS320DM6435"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM6435"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_13.projectspec">
					<filter.ref ref.id="filter_161193372904800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_TMS320DM6435"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM6435"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_10.projectspec">
					<filter.ref ref.id="filter_161193372904800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_TMS320DM6435"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM6435"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="TMS320DM6437" desc="TMS320DM6437" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_161193374369700">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>TMS320DM6437</tag>
					<tag>DaVinci DM643x</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_0.projectspec">
					<filter.ref ref.id="filter_161193374369700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_TMS320DM6437"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM6437"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_1.projectspec">
					<filter.ref ref.id="filter_161193374369700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_TMS320DM6437"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM6437"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_161193374466300">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>TMS320DM6437</tag>
					<tag>DaVinci DM643x</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_14.projectspec">
					<filter.ref ref.id="filter_161193374466300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_TMS320DM6437"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM6437"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_3.projectspec">
					<filter.ref ref.id="filter_161193374466300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_TMS320DM6437"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM6437"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_4.projectspec">
					<filter.ref ref.id="filter_161193374466300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_TMS320DM6437"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM6437"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_5.projectspec">
					<filter.ref ref.id="filter_161193374466300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_TMS320DM6437"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM6437"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_6.projectspec">
					<filter.ref ref.id="filter_161193374466300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_TMS320DM6437"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM6437"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_7.projectspec">
					<filter.ref ref.id="filter_161193374466300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_TMS320DM6437"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM6437"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_8.projectspec">
					<filter.ref ref.id="filter_161193374466300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_TMS320DM6437"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM6437"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_9.projectspec">
					<filter.ref ref.id="filter_161193374466300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_TMS320DM6437"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM6437"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_11.projectspec">
					<filter.ref ref.id="filter_161193374466300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_TMS320DM6437"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM6437"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_12.projectspec">
					<filter.ref ref.id="filter_161193374466300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_TMS320DM6437"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM6437"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_13.projectspec">
					<filter.ref ref.id="filter_161193374466300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_TMS320DM6437"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM6437"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_10.projectspec">
					<filter.ref ref.id="filter_161193374466300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_TMS320DM6437"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM6437"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
		</contents>
		<contents name="DaVinci DM644x" desc="DaVinci DM644x" icon="plugin://icons/obj16/devices.png">
			<contents name="EVMDM6446" desc="EVMDM6446" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_161193375231700">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>EVMDM6446</tag>
					<tag>DaVinci DM644x</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_0.projectspec">
					<filter.ref ref.id="filter_161193375231700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_EVMDM6446_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM6446.EVMDM6446"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_1.projectspec">
					<filter.ref ref.id="filter_161193375231700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_EVMDM6446_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM6446.EVMDM6446"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_161193375341100">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>EVMDM6446</tag>
					<tag>DaVinci DM644x</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_14.projectspec">
					<filter.ref ref.id="filter_161193375341100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_EVMDM6446_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM6446.EVMDM6446"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_3.projectspec">
					<filter.ref ref.id="filter_161193375341100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_EVMDM6446_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM6446.EVMDM6446"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_4.projectspec">
					<filter.ref ref.id="filter_161193375341100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_EVMDM6446_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM6446.EVMDM6446"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_5.projectspec">
					<filter.ref ref.id="filter_161193375341100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_EVMDM6446_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM6446.EVMDM6446"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_6.projectspec">
					<filter.ref ref.id="filter_161193375341100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_EVMDM6446_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM6446.EVMDM6446"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_7.projectspec">
					<filter.ref ref.id="filter_161193375341100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_EVMDM6446_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM6446.EVMDM6446"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_8.projectspec">
					<filter.ref ref.id="filter_161193375341100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_EVMDM6446_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM6446.EVMDM6446"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_9.projectspec">
					<filter.ref ref.id="filter_161193375341100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_EVMDM6446_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM6446.EVMDM6446"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_11.projectspec">
					<filter.ref ref.id="filter_161193375341100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_EVMDM6446_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM6446.EVMDM6446"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_12.projectspec">
					<filter.ref ref.id="filter_161193375341100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_EVMDM6446_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM6446.EVMDM6446"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_13.projectspec">
					<filter.ref ref.id="filter_161193375341100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_EVMDM6446_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM6446.EVMDM6446"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_10.projectspec">
					<filter.ref ref.id="filter_161193375341100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_EVMDM6446_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM6446.EVMDM6446"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="TMS320DM6441" desc="TMS320DM6441" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_161193375946400">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>TMS320DM6441</tag>
					<tag>DaVinci DM644x</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_0.projectspec">
					<filter.ref ref.id="filter_161193375946400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_TMS320DM6441_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM6441"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_1.projectspec">
					<filter.ref ref.id="filter_161193375946400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_TMS320DM6441_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM6441"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_161193376030900">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>TMS320DM6441</tag>
					<tag>DaVinci DM644x</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_14.projectspec">
					<filter.ref ref.id="filter_161193376030900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_TMS320DM6441_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM6441"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_3.projectspec">
					<filter.ref ref.id="filter_161193376030900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_TMS320DM6441_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM6441"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_4.projectspec">
					<filter.ref ref.id="filter_161193376030900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_TMS320DM6441_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM6441"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_5.projectspec">
					<filter.ref ref.id="filter_161193376030900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_TMS320DM6441_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM6441"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_6.projectspec">
					<filter.ref ref.id="filter_161193376030900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_TMS320DM6441_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM6441"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_7.projectspec">
					<filter.ref ref.id="filter_161193376030900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_TMS320DM6441_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM6441"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_8.projectspec">
					<filter.ref ref.id="filter_161193376030900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_TMS320DM6441_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM6441"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_9.projectspec">
					<filter.ref ref.id="filter_161193376030900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_TMS320DM6441_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM6441"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_11.projectspec">
					<filter.ref ref.id="filter_161193376030900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_TMS320DM6441_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM6441"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_12.projectspec">
					<filter.ref ref.id="filter_161193376030900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_TMS320DM6441_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM6441"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_13.projectspec">
					<filter.ref ref.id="filter_161193376030900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_TMS320DM6441_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM6441"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_10.projectspec">
					<filter.ref ref.id="filter_161193376030900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_TMS320DM6441_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM6441"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="TMS320DM6443" desc="TMS320DM6443" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_161193376605100">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>TMS320DM6443</tag>
					<tag>DaVinci DM644x</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_0.projectspec">
					<filter.ref ref.id="filter_161193376605100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_TMS320DM6443_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM6443"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_1.projectspec">
					<filter.ref ref.id="filter_161193376605100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_TMS320DM6443_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM6443"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_161193376687400">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>TMS320DM6443</tag>
					<tag>DaVinci DM644x</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_14.projectspec">
					<filter.ref ref.id="filter_161193376687400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_TMS320DM6443_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM6443"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_3.projectspec">
					<filter.ref ref.id="filter_161193376687400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_TMS320DM6443_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM6443"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_4.projectspec">
					<filter.ref ref.id="filter_161193376687400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_TMS320DM6443_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM6443"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_5.projectspec">
					<filter.ref ref.id="filter_161193376687400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_TMS320DM6443_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM6443"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_6.projectspec">
					<filter.ref ref.id="filter_161193376687400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_TMS320DM6443_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM6443"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_7.projectspec">
					<filter.ref ref.id="filter_161193376687400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_TMS320DM6443_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM6443"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_8.projectspec">
					<filter.ref ref.id="filter_161193376687400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_TMS320DM6443_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM6443"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_9.projectspec">
					<filter.ref ref.id="filter_161193376687400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_TMS320DM6443_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM6443"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_11.projectspec">
					<filter.ref ref.id="filter_161193376687400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_TMS320DM6443_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM6443"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_12.projectspec">
					<filter.ref ref.id="filter_161193376687400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_TMS320DM6443_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM6443"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_13.projectspec">
					<filter.ref ref.id="filter_161193376687400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_TMS320DM6443_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM6443"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_10.projectspec">
					<filter.ref ref.id="filter_161193376687400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_TMS320DM6443_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM6443"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="TMS320DM6446" desc="TMS320DM6446" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_161193378074600">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>TMS320DM6446</tag>
					<tag>DaVinci DM644x</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_0.projectspec">
					<filter.ref ref.id="filter_161193378074600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_TMS320DM6446_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM6446"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_1.projectspec">
					<filter.ref ref.id="filter_161193378074600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_TMS320DM6446_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM6446"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_161193378161000">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>TMS320DM6446</tag>
					<tag>DaVinci DM644x</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_14.projectspec">
					<filter.ref ref.id="filter_161193378161000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_TMS320DM6446_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM6446"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_3.projectspec">
					<filter.ref ref.id="filter_161193378161000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_TMS320DM6446_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM6446"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_4.projectspec">
					<filter.ref ref.id="filter_161193378161000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_TMS320DM6446_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM6446"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_5.projectspec">
					<filter.ref ref.id="filter_161193378161000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_TMS320DM6446_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM6446"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_6.projectspec">
					<filter.ref ref.id="filter_161193378161000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_TMS320DM6446_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM6446"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_7.projectspec">
					<filter.ref ref.id="filter_161193378161000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_TMS320DM6446_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM6446"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_8.projectspec">
					<filter.ref ref.id="filter_161193378161000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_TMS320DM6446_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM6446"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_9.projectspec">
					<filter.ref ref.id="filter_161193378161000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_TMS320DM6446_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM6446"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_11.projectspec">
					<filter.ref ref.id="filter_161193378161000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_TMS320DM6446_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM6446"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_12.projectspec">
					<filter.ref ref.id="filter_161193378161000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_TMS320DM6446_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM6446"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_13.projectspec">
					<filter.ref ref.id="filter_161193378161000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_TMS320DM6446_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM6446"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_10.projectspec">
					<filter.ref ref.id="filter_161193378161000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_TMS320DM6446_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM6446"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
		</contents>
		<contents name="DaVinci DM646x" desc="DaVinci DM646x" icon="plugin://icons/obj16/devices.png">
			<contents name="EVMDM6467" desc="EVMDM6467" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_161193379003500">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>EVMDM6467</tag>
					<tag>DaVinci DM646x</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_0.projectspec">
					<filter.ref ref.id="filter_161193379003500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_EVMDM6467_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM6467.EVMDM6467"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_1.projectspec">
					<filter.ref ref.id="filter_161193379003500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_EVMDM6467_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM6467.EVMDM6467"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_161193379119200">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>EVMDM6467</tag>
					<tag>DaVinci DM646x</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_14.projectspec">
					<filter.ref ref.id="filter_161193379119200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_EVMDM6467_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM6467.EVMDM6467"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_3.projectspec">
					<filter.ref ref.id="filter_161193379119200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_EVMDM6467_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM6467.EVMDM6467"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_4.projectspec">
					<filter.ref ref.id="filter_161193379119200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_EVMDM6467_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM6467.EVMDM6467"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_5.projectspec">
					<filter.ref ref.id="filter_161193379119200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_EVMDM6467_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM6467.EVMDM6467"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_6.projectspec">
					<filter.ref ref.id="filter_161193379119200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_EVMDM6467_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM6467.EVMDM6467"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_7.projectspec">
					<filter.ref ref.id="filter_161193379119200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_EVMDM6467_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM6467.EVMDM6467"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_8.projectspec">
					<filter.ref ref.id="filter_161193379119200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_EVMDM6467_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM6467.EVMDM6467"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_9.projectspec">
					<filter.ref ref.id="filter_161193379119200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_EVMDM6467_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM6467.EVMDM6467"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_11.projectspec">
					<filter.ref ref.id="filter_161193379119200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_EVMDM6467_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM6467.EVMDM6467"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_12.projectspec">
					<filter.ref ref.id="filter_161193379119200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_EVMDM6467_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM6467.EVMDM6467"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_13.projectspec">
					<filter.ref ref.id="filter_161193379119200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_EVMDM6467_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM6467.EVMDM6467"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_10.projectspec">
					<filter.ref ref.id="filter_161193379119200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_EVMDM6467_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM6467.EVMDM6467"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="EVMDM6467T" desc="EVMDM6467T" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_161193382110900">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>EVMDM6467T</tag>
					<tag>DaVinci DM646x</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_0.projectspec">
					<filter.ref ref.id="filter_161193382110900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_EVMDM6467T_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM6467.EVMDM6467T"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_1.projectspec">
					<filter.ref ref.id="filter_161193382110900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_EVMDM6467T_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM6467.EVMDM6467T"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_161193382229700">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>EVMDM6467T</tag>
					<tag>DaVinci DM646x</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_14.projectspec">
					<filter.ref ref.id="filter_161193382229700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_EVMDM6467T_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM6467.EVMDM6467T"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_3.projectspec">
					<filter.ref ref.id="filter_161193382229700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_EVMDM6467T_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM6467.EVMDM6467T"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_4.projectspec">
					<filter.ref ref.id="filter_161193382229700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_EVMDM6467T_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM6467.EVMDM6467T"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_5.projectspec">
					<filter.ref ref.id="filter_161193382229700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_EVMDM6467T_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM6467.EVMDM6467T"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_6.projectspec">
					<filter.ref ref.id="filter_161193382229700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_EVMDM6467T_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM6467.EVMDM6467T"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_7.projectspec">
					<filter.ref ref.id="filter_161193382229700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_EVMDM6467T_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM6467.EVMDM6467T"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_8.projectspec">
					<filter.ref ref.id="filter_161193382229700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_EVMDM6467T_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM6467.EVMDM6467T"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_9.projectspec">
					<filter.ref ref.id="filter_161193382229700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_EVMDM6467T_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM6467.EVMDM6467T"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_11.projectspec">
					<filter.ref ref.id="filter_161193382229700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_EVMDM6467T_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM6467.EVMDM6467T"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_12.projectspec">
					<filter.ref ref.id="filter_161193382229700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_EVMDM6467T_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM6467.EVMDM6467T"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_13.projectspec">
					<filter.ref ref.id="filter_161193382229700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_EVMDM6467T_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM6467.EVMDM6467T"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_10.projectspec">
					<filter.ref ref.id="filter_161193382229700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_EVMDM6467T_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM6467.EVMDM6467T"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="TMS320DM6467" desc="TMS320DM6467" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_161193382867800">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>TMS320DM6467</tag>
					<tag>DaVinci DM646x</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_0.projectspec">
					<filter.ref ref.id="filter_161193382867800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_TMS320DM6467_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM6467"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_1.projectspec">
					<filter.ref ref.id="filter_161193382867800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_TMS320DM6467_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM6467"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_161193382953300">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>TMS320DM6467</tag>
					<tag>DaVinci DM646x</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_14.projectspec">
					<filter.ref ref.id="filter_161193382953300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_TMS320DM6467_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM6467"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_3.projectspec">
					<filter.ref ref.id="filter_161193382953300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_TMS320DM6467_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM6467"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_4.projectspec">
					<filter.ref ref.id="filter_161193382953300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_TMS320DM6467_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM6467"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_5.projectspec">
					<filter.ref ref.id="filter_161193382953300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_TMS320DM6467_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM6467"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_6.projectspec">
					<filter.ref ref.id="filter_161193382953300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_TMS320DM6467_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM6467"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_7.projectspec">
					<filter.ref ref.id="filter_161193382953300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_TMS320DM6467_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM6467"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_8.projectspec">
					<filter.ref ref.id="filter_161193382953300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_TMS320DM6467_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM6467"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_9.projectspec">
					<filter.ref ref.id="filter_161193382953300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_TMS320DM6467_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM6467"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_11.projectspec">
					<filter.ref ref.id="filter_161193382953300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_TMS320DM6467_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM6467"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_12.projectspec">
					<filter.ref ref.id="filter_161193382953300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_TMS320DM6467_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM6467"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_13.projectspec">
					<filter.ref ref.id="filter_161193382953300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_TMS320DM6467_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM6467"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_10.projectspec">
					<filter.ref ref.id="filter_161193382953300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_TMS320DM6467_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM6467"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
		</contents>
		<contents name="DaVinci DM64x" desc="DaVinci DM64x" icon="plugin://icons/obj16/devices.png">
			<contents name="EVMDM642" desc="EVMDM642" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_161193383569700">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>EVMDM642</tag>
					<tag>DaVinci DM64x</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_0.projectspec">
					<filter.ref ref.id="filter_161193383569700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_EVMDM642"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM642.EVMDM642"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_1.projectspec">
					<filter.ref ref.id="filter_161193383569700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_EVMDM642"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM642.EVMDM642"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_161193383654000">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>EVMDM642</tag>
					<tag>DaVinci DM64x</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_14.projectspec">
					<filter.ref ref.id="filter_161193383654000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_EVMDM642"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM642.EVMDM642"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_3.projectspec">
					<filter.ref ref.id="filter_161193383654000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_EVMDM642"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM642.EVMDM642"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_4.projectspec">
					<filter.ref ref.id="filter_161193383654000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_EVMDM642"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM642.EVMDM642"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_5.projectspec">
					<filter.ref ref.id="filter_161193383654000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_EVMDM642"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM642.EVMDM642"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_6.projectspec">
					<filter.ref ref.id="filter_161193383654000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_EVMDM642"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM642.EVMDM642"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_7.projectspec">
					<filter.ref ref.id="filter_161193383654000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_EVMDM642"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM642.EVMDM642"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_8.projectspec">
					<filter.ref ref.id="filter_161193383654000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_EVMDM642"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM642.EVMDM642"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_9.projectspec">
					<filter.ref ref.id="filter_161193383654000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_EVMDM642"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM642.EVMDM642"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_11.projectspec">
					<filter.ref ref.id="filter_161193383654000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_EVMDM642"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM642.EVMDM642"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_12.projectspec">
					<filter.ref ref.id="filter_161193383654000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_EVMDM642"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM642.EVMDM642"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_13.projectspec">
					<filter.ref ref.id="filter_161193383654000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_EVMDM642"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM642.EVMDM642"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_10.projectspec">
					<filter.ref ref.id="filter_161193383654000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_EVMDM642"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM642.EVMDM642"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="EVMDM648" desc="EVMDM648" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_161193384224400">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>EVMDM648</tag>
					<tag>DaVinci DM64x</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_0.projectspec">
					<filter.ref ref.id="filter_161193384224400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_EVMDM648"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM648.EVMDM648"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_1.projectspec">
					<filter.ref ref.id="filter_161193384224400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_EVMDM648"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM648.EVMDM648"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_161193384306500">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>EVMDM648</tag>
					<tag>DaVinci DM64x</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_14.projectspec">
					<filter.ref ref.id="filter_161193384306500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_EVMDM648"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM648.EVMDM648"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_3.projectspec">
					<filter.ref ref.id="filter_161193384306500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_EVMDM648"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM648.EVMDM648"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_4.projectspec">
					<filter.ref ref.id="filter_161193384306500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_EVMDM648"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM648.EVMDM648"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_5.projectspec">
					<filter.ref ref.id="filter_161193384306500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_EVMDM648"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM648.EVMDM648"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_6.projectspec">
					<filter.ref ref.id="filter_161193384306500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_EVMDM648"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM648.EVMDM648"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_7.projectspec">
					<filter.ref ref.id="filter_161193384306500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_EVMDM648"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM648.EVMDM648"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_8.projectspec">
					<filter.ref ref.id="filter_161193384306500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_EVMDM648"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM648.EVMDM648"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_9.projectspec">
					<filter.ref ref.id="filter_161193384306500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_EVMDM648"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM648.EVMDM648"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_11.projectspec">
					<filter.ref ref.id="filter_161193384306500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_EVMDM648"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM648.EVMDM648"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_12.projectspec">
					<filter.ref ref.id="filter_161193384306500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_EVMDM648"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM648.EVMDM648"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_13.projectspec">
					<filter.ref ref.id="filter_161193384306500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_EVMDM648"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM648.EVMDM648"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_10.projectspec">
					<filter.ref ref.id="filter_161193384306500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_EVMDM648"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM648.EVMDM648"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="TMS320DM640" desc="TMS320DM640" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_161193385774300">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>TMS320DM640</tag>
					<tag>DaVinci DM64x</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_0.projectspec">
					<filter.ref ref.id="filter_161193385774300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_TMS320DM640"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM640"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_1.projectspec">
					<filter.ref ref.id="filter_161193385774300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_TMS320DM640"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM640"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_161193385860000">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>TMS320DM640</tag>
					<tag>DaVinci DM64x</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_14.projectspec">
					<filter.ref ref.id="filter_161193385860000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_TMS320DM640"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM640"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_3.projectspec">
					<filter.ref ref.id="filter_161193385860000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_TMS320DM640"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM640"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_4.projectspec">
					<filter.ref ref.id="filter_161193385860000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_TMS320DM640"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM640"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_5.projectspec">
					<filter.ref ref.id="filter_161193385860000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_TMS320DM640"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM640"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_6.projectspec">
					<filter.ref ref.id="filter_161193385860000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_TMS320DM640"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM640"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_7.projectspec">
					<filter.ref ref.id="filter_161193385860000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_TMS320DM640"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM640"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_8.projectspec">
					<filter.ref ref.id="filter_161193385860000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_TMS320DM640"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM640"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_9.projectspec">
					<filter.ref ref.id="filter_161193385860000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_TMS320DM640"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM640"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_11.projectspec">
					<filter.ref ref.id="filter_161193385860000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_TMS320DM640"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM640"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_12.projectspec">
					<filter.ref ref.id="filter_161193385860000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_TMS320DM640"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM640"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_13.projectspec">
					<filter.ref ref.id="filter_161193385860000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_TMS320DM640"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM640"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_10.projectspec">
					<filter.ref ref.id="filter_161193385860000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_TMS320DM640"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM640"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="TMS320DM641" desc="TMS320DM641" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_161193386416800">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>TMS320DM641</tag>
					<tag>DaVinci DM64x</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_0.projectspec">
					<filter.ref ref.id="filter_161193386416800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_TMS320DM641"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM641"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_1.projectspec">
					<filter.ref ref.id="filter_161193386416800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_TMS320DM641"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM641"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_161193386499400">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>TMS320DM641</tag>
					<tag>DaVinci DM64x</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_14.projectspec">
					<filter.ref ref.id="filter_161193386499400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_TMS320DM641"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM641"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_3.projectspec">
					<filter.ref ref.id="filter_161193386499400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_TMS320DM641"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM641"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_4.projectspec">
					<filter.ref ref.id="filter_161193386499400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_TMS320DM641"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM641"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_5.projectspec">
					<filter.ref ref.id="filter_161193386499400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_TMS320DM641"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM641"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_6.projectspec">
					<filter.ref ref.id="filter_161193386499400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_TMS320DM641"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM641"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_7.projectspec">
					<filter.ref ref.id="filter_161193386499400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_TMS320DM641"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM641"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_8.projectspec">
					<filter.ref ref.id="filter_161193386499400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_TMS320DM641"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM641"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_9.projectspec">
					<filter.ref ref.id="filter_161193386499400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_TMS320DM641"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM641"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_11.projectspec">
					<filter.ref ref.id="filter_161193386499400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_TMS320DM641"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM641"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_12.projectspec">
					<filter.ref ref.id="filter_161193386499400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_TMS320DM641"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM641"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_13.projectspec">
					<filter.ref ref.id="filter_161193386499400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_TMS320DM641"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM641"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_10.projectspec">
					<filter.ref ref.id="filter_161193386499400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_TMS320DM641"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM641"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="TMS320DM642" desc="TMS320DM642" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_161193387053800">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>TMS320DM642</tag>
					<tag>DaVinci DM64x</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_0.projectspec">
					<filter.ref ref.id="filter_161193387053800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_TMS320DM642"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM642"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_1.projectspec">
					<filter.ref ref.id="filter_161193387053800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_TMS320DM642"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM642"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_161193387135900">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>TMS320DM642</tag>
					<tag>DaVinci DM64x</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_14.projectspec">
					<filter.ref ref.id="filter_161193387135900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_TMS320DM642"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM642"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_3.projectspec">
					<filter.ref ref.id="filter_161193387135900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_TMS320DM642"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM642"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_4.projectspec">
					<filter.ref ref.id="filter_161193387135900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_TMS320DM642"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM642"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_5.projectspec">
					<filter.ref ref.id="filter_161193387135900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_TMS320DM642"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM642"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_6.projectspec">
					<filter.ref ref.id="filter_161193387135900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_TMS320DM642"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM642"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_7.projectspec">
					<filter.ref ref.id="filter_161193387135900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_TMS320DM642"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM642"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_8.projectspec">
					<filter.ref ref.id="filter_161193387135900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_TMS320DM642"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM642"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_9.projectspec">
					<filter.ref ref.id="filter_161193387135900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_TMS320DM642"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM642"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_11.projectspec">
					<filter.ref ref.id="filter_161193387135900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_TMS320DM642"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM642"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_12.projectspec">
					<filter.ref ref.id="filter_161193387135900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_TMS320DM642"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM642"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_13.projectspec">
					<filter.ref ref.id="filter_161193387135900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_TMS320DM642"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM642"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_10.projectspec">
					<filter.ref ref.id="filter_161193387135900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_TMS320DM642"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM642"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="TMS320DM643" desc="TMS320DM643" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_161193387729500">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>TMS320DM643</tag>
					<tag>DaVinci DM64x</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_0.projectspec">
					<filter.ref ref.id="filter_161193387729500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_TMS320DM643"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM643"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_1.projectspec">
					<filter.ref ref.id="filter_161193387729500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_TMS320DM643"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM643"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_161193387817100">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>TMS320DM643</tag>
					<tag>DaVinci DM64x</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_14.projectspec">
					<filter.ref ref.id="filter_161193387817100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_TMS320DM643"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM643"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_3.projectspec">
					<filter.ref ref.id="filter_161193387817100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_TMS320DM643"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM643"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_4.projectspec">
					<filter.ref ref.id="filter_161193387817100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_TMS320DM643"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM643"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_5.projectspec">
					<filter.ref ref.id="filter_161193387817100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_TMS320DM643"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM643"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_6.projectspec">
					<filter.ref ref.id="filter_161193387817100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_TMS320DM643"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM643"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_7.projectspec">
					<filter.ref ref.id="filter_161193387817100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_TMS320DM643"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM643"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_8.projectspec">
					<filter.ref ref.id="filter_161193387817100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_TMS320DM643"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM643"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_9.projectspec">
					<filter.ref ref.id="filter_161193387817100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_TMS320DM643"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM643"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_11.projectspec">
					<filter.ref ref.id="filter_161193387817100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_TMS320DM643"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM643"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_12.projectspec">
					<filter.ref ref.id="filter_161193387817100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_TMS320DM643"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM643"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_13.projectspec">
					<filter.ref ref.id="filter_161193387817100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_TMS320DM643"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM643"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_10.projectspec">
					<filter.ref ref.id="filter_161193387817100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_TMS320DM643"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM643"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="TMS320DM647" desc="TMS320DM647" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_161193389425000">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>TMS320DM647</tag>
					<tag>DaVinci DM64x</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_0.projectspec">
					<filter.ref ref.id="filter_161193389425000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_TMS320DM647"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM647"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_1.projectspec">
					<filter.ref ref.id="filter_161193389425000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_TMS320DM647"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM647"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_161193389524200">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>TMS320DM647</tag>
					<tag>DaVinci DM64x</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_14.projectspec">
					<filter.ref ref.id="filter_161193389524200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_TMS320DM647"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM647"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_3.projectspec">
					<filter.ref ref.id="filter_161193389524200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_TMS320DM647"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM647"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_4.projectspec">
					<filter.ref ref.id="filter_161193389524200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_TMS320DM647"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM647"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_5.projectspec">
					<filter.ref ref.id="filter_161193389524200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_TMS320DM647"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM647"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_6.projectspec">
					<filter.ref ref.id="filter_161193389524200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_TMS320DM647"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM647"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_7.projectspec">
					<filter.ref ref.id="filter_161193389524200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_TMS320DM647"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM647"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_8.projectspec">
					<filter.ref ref.id="filter_161193389524200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_TMS320DM647"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM647"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_9.projectspec">
					<filter.ref ref.id="filter_161193389524200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_TMS320DM647"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM647"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_11.projectspec">
					<filter.ref ref.id="filter_161193389524200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_TMS320DM647"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM647"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_12.projectspec">
					<filter.ref ref.id="filter_161193389524200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_TMS320DM647"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM647"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_13.projectspec">
					<filter.ref ref.id="filter_161193389524200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_TMS320DM647"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM647"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_10.projectspec">
					<filter.ref ref.id="filter_161193389524200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_TMS320DM647"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM647"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="TMS320DM648" desc="TMS320DM648" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_161193390143800">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>TMS320DM648</tag>
					<tag>DaVinci DM64x</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_0.projectspec">
					<filter.ref ref.id="filter_161193390143800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_TMS320DM648"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM648"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_1.projectspec">
					<filter.ref ref.id="filter_161193390143800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_TMS320DM648"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM648"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_161193390233000">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>TMS320DM648</tag>
					<tag>DaVinci DM64x</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_14.projectspec">
					<filter.ref ref.id="filter_161193390233000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_TMS320DM648"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM648"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_3.projectspec">
					<filter.ref ref.id="filter_161193390233000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_TMS320DM648"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM648"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_4.projectspec">
					<filter.ref ref.id="filter_161193390233000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_TMS320DM648"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM648"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_5.projectspec">
					<filter.ref ref.id="filter_161193390233000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_TMS320DM648"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM648"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_6.projectspec">
					<filter.ref ref.id="filter_161193390233000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_TMS320DM648"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM648"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_7.projectspec">
					<filter.ref ref.id="filter_161193390233000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_TMS320DM648"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM648"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_8.projectspec">
					<filter.ref ref.id="filter_161193390233000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_TMS320DM648"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM648"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_9.projectspec">
					<filter.ref ref.id="filter_161193390233000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_TMS320DM648"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM648"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_11.projectspec">
					<filter.ref ref.id="filter_161193390233000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_TMS320DM648"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM648"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_12.projectspec">
					<filter.ref ref.id="filter_161193390233000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_TMS320DM648"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM648"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_13.projectspec">
					<filter.ref ref.id="filter_161193390233000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_TMS320DM648"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM648"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_10.projectspec">
					<filter.ref ref.id="filter_161193390233000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_TMS320DM648"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320DM648"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
		</contents>
		<contents name="DaVinci DM81xx" desc="DaVinci DM81xx" icon="plugin://icons/obj16/devices.png">
			<contents name="DM8146" desc="DM8146" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_161193390889900">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>DM8146</tag>
					<tag>DaVinci DM81xx</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_0.projectspec">
					<filter.ref ref.id="filter_161193390889900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_DM8146_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320DM8146"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_1.projectspec">
					<filter.ref ref.id="filter_161193390889900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_DM8146_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320DM8146"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_161193390980900">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>DM8146</tag>
					<tag>DaVinci DM81xx</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_14.projectspec">
					<filter.ref ref.id="filter_161193390980900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_DM8146_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320DM8146"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_3.projectspec">
					<filter.ref ref.id="filter_161193390980900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_DM8146_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320DM8146"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_4.projectspec">
					<filter.ref ref.id="filter_161193390980900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_DM8146_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320DM8146"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_5.projectspec">
					<filter.ref ref.id="filter_161193390980900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_DM8146_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320DM8146"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_6.projectspec">
					<filter.ref ref.id="filter_161193390980900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_DM8146_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320DM8146"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_7.projectspec">
					<filter.ref ref.id="filter_161193390980900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_DM8146_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320DM8146"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_8.projectspec">
					<filter.ref ref.id="filter_161193390980900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_DM8146_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320DM8146"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_9.projectspec">
					<filter.ref ref.id="filter_161193390980900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_DM8146_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320DM8146"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_11.projectspec">
					<filter.ref ref.id="filter_161193390980900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_DM8146_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320DM8146"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_12.projectspec">
					<filter.ref ref.id="filter_161193390980900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_DM8146_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320DM8146"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_13.projectspec">
					<filter.ref ref.id="filter_161193390980900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_DM8146_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320DM8146"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_10.projectspec">
					<filter.ref ref.id="filter_161193390980900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_DM8146_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320DM8146"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="DM8147" desc="DM8147" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_161193391581700">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>DM8147</tag>
					<tag>DaVinci DM81xx</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_0.projectspec">
					<filter.ref ref.id="filter_161193391581700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_DM8147_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320DM8147"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_1.projectspec">
					<filter.ref ref.id="filter_161193391581700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_DM8147_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320DM8147"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_161193391666600">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>DM8147</tag>
					<tag>DaVinci DM81xx</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_14.projectspec">
					<filter.ref ref.id="filter_161193391666600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_DM8147_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320DM8147"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_3.projectspec">
					<filter.ref ref.id="filter_161193391666600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_DM8147_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320DM8147"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_4.projectspec">
					<filter.ref ref.id="filter_161193391666600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_DM8147_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320DM8147"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_5.projectspec">
					<filter.ref ref.id="filter_161193391666600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_DM8147_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320DM8147"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_6.projectspec">
					<filter.ref ref.id="filter_161193391666600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_DM8147_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320DM8147"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_7.projectspec">
					<filter.ref ref.id="filter_161193391666600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_DM8147_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320DM8147"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_8.projectspec">
					<filter.ref ref.id="filter_161193391666600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_DM8147_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320DM8147"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_9.projectspec">
					<filter.ref ref.id="filter_161193391666600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_DM8147_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320DM8147"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_11.projectspec">
					<filter.ref ref.id="filter_161193391666600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_DM8147_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320DM8147"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_12.projectspec">
					<filter.ref ref.id="filter_161193391666600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_DM8147_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320DM8147"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_13.projectspec">
					<filter.ref ref.id="filter_161193391666600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_DM8147_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320DM8147"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_10.projectspec">
					<filter.ref ref.id="filter_161193391666600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_DM8147_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320DM8147"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="DM8148" desc="DM8148" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_161193393299200">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>DM8148</tag>
					<tag>DaVinci DM81xx</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_0.projectspec">
					<filter.ref ref.id="filter_161193393299200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_DM8148_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320DM8148"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_1.projectspec">
					<filter.ref ref.id="filter_161193393299200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_DM8148_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320DM8148"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_161193393393000">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>DM8148</tag>
					<tag>DaVinci DM81xx</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_14.projectspec">
					<filter.ref ref.id="filter_161193393393000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_DM8148_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320DM8148"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_3.projectspec">
					<filter.ref ref.id="filter_161193393393000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_DM8148_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320DM8148"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_4.projectspec">
					<filter.ref ref.id="filter_161193393393000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_DM8148_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320DM8148"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_5.projectspec">
					<filter.ref ref.id="filter_161193393393000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_DM8148_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320DM8148"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_6.projectspec">
					<filter.ref ref.id="filter_161193393393000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_DM8148_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320DM8148"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_7.projectspec">
					<filter.ref ref.id="filter_161193393393000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_DM8148_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320DM8148"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_8.projectspec">
					<filter.ref ref.id="filter_161193393393000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_DM8148_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320DM8148"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_9.projectspec">
					<filter.ref ref.id="filter_161193393393000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_DM8148_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320DM8148"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_11.projectspec">
					<filter.ref ref.id="filter_161193393393000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_DM8148_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320DM8148"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_12.projectspec">
					<filter.ref ref.id="filter_161193393393000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_DM8148_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320DM8148"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_13.projectspec">
					<filter.ref ref.id="filter_161193393393000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_DM8148_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320DM8148"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_10.projectspec">
					<filter.ref ref.id="filter_161193393393000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_DM8148_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320DM8148"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="DM8165" desc="DM8165" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_161193393979300">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>DM8165</tag>
					<tag>DaVinci DM81xx</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_0.projectspec">
					<filter.ref ref.id="filter_161193393979300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_DM8165_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320DM8165"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_1.projectspec">
					<filter.ref ref.id="filter_161193393979300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_DM8165_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320DM8165"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_161193394068700">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>DM8165</tag>
					<tag>DaVinci DM81xx</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_14.projectspec">
					<filter.ref ref.id="filter_161193394068700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_DM8165_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320DM8165"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_3.projectspec">
					<filter.ref ref.id="filter_161193394068700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_DM8165_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320DM8165"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_4.projectspec">
					<filter.ref ref.id="filter_161193394068700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_DM8165_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320DM8165"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_5.projectspec">
					<filter.ref ref.id="filter_161193394068700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_DM8165_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320DM8165"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_6.projectspec">
					<filter.ref ref.id="filter_161193394068700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_DM8165_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320DM8165"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_7.projectspec">
					<filter.ref ref.id="filter_161193394068700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_DM8165_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320DM8165"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_8.projectspec">
					<filter.ref ref.id="filter_161193394068700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_DM8165_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320DM8165"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_9.projectspec">
					<filter.ref ref.id="filter_161193394068700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_DM8165_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320DM8165"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_11.projectspec">
					<filter.ref ref.id="filter_161193394068700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_DM8165_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320DM8165"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_12.projectspec">
					<filter.ref ref.id="filter_161193394068700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_DM8165_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320DM8165"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_13.projectspec">
					<filter.ref ref.id="filter_161193394068700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_DM8165_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320DM8165"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_10.projectspec">
					<filter.ref ref.id="filter_161193394068700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_DM8165_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320DM8165"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="DM8166" desc="DM8166" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_161193394649700">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>DM8166</tag>
					<tag>DaVinci DM81xx</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_0.projectspec">
					<filter.ref ref.id="filter_161193394649700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_DM8166_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320DM8166"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_1.projectspec">
					<filter.ref ref.id="filter_161193394649700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_DM8166_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320DM8166"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_161193394734600">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>DM8166</tag>
					<tag>DaVinci DM81xx</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_14.projectspec">
					<filter.ref ref.id="filter_161193394734600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_DM8166_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320DM8166"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_3.projectspec">
					<filter.ref ref.id="filter_161193394734600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_DM8166_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320DM8166"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_4.projectspec">
					<filter.ref ref.id="filter_161193394734600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_DM8166_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320DM8166"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_5.projectspec">
					<filter.ref ref.id="filter_161193394734600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_DM8166_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320DM8166"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_6.projectspec">
					<filter.ref ref.id="filter_161193394734600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_DM8166_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320DM8166"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_7.projectspec">
					<filter.ref ref.id="filter_161193394734600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_DM8166_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320DM8166"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_8.projectspec">
					<filter.ref ref.id="filter_161193394734600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_DM8166_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320DM8166"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_9.projectspec">
					<filter.ref ref.id="filter_161193394734600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_DM8166_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320DM8166"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_11.projectspec">
					<filter.ref ref.id="filter_161193394734600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_DM8166_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320DM8166"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_12.projectspec">
					<filter.ref ref.id="filter_161193394734600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_DM8166_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320DM8166"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_13.projectspec">
					<filter.ref ref.id="filter_161193394734600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_DM8166_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320DM8166"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_10.projectspec">
					<filter.ref ref.id="filter_161193394734600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_DM8166_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320DM8166"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="DM8167" desc="DM8167" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_161193395426300">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>DM8167</tag>
					<tag>DaVinci DM81xx</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_0.projectspec">
					<filter.ref ref.id="filter_161193395426300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_DM8167_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320DM8167"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_1.projectspec">
					<filter.ref ref.id="filter_161193395426300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_DM8167_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320DM8167"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_161193395517500">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>DM8167</tag>
					<tag>DaVinci DM81xx</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_14.projectspec">
					<filter.ref ref.id="filter_161193395517500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_DM8167_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320DM8167"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_3.projectspec">
					<filter.ref ref.id="filter_161193395517500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_DM8167_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320DM8167"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_4.projectspec">
					<filter.ref ref.id="filter_161193395517500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_DM8167_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320DM8167"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_5.projectspec">
					<filter.ref ref.id="filter_161193395517500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_DM8167_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320DM8167"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_6.projectspec">
					<filter.ref ref.id="filter_161193395517500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_DM8167_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320DM8167"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_7.projectspec">
					<filter.ref ref.id="filter_161193395517500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_DM8167_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320DM8167"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_8.projectspec">
					<filter.ref ref.id="filter_161193395517500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_DM8167_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320DM8167"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_9.projectspec">
					<filter.ref ref.id="filter_161193395517500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_DM8167_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320DM8167"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_11.projectspec">
					<filter.ref ref.id="filter_161193395517500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_DM8167_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320DM8167"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_12.projectspec">
					<filter.ref ref.id="filter_161193395517500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_DM8167_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320DM8167"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_13.projectspec">
					<filter.ref ref.id="filter_161193395517500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_DM8167_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320DM8167"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_10.projectspec">
					<filter.ref ref.id="filter_161193395517500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_DM8167_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320DM8167"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="DM8168" desc="DM8168" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_161193396106800">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>DM8168</tag>
					<tag>DaVinci DM81xx</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_0.projectspec">
					<filter.ref ref.id="filter_161193396106800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_DM8168_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320DM8168"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_1.projectspec">
					<filter.ref ref.id="filter_161193396106800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_DM8168_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320DM8168"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_161193396192300">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>DM8168</tag>
					<tag>DaVinci DM81xx</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_14.projectspec">
					<filter.ref ref.id="filter_161193396192300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_DM8168_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320DM8168"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_3.projectspec">
					<filter.ref ref.id="filter_161193396192300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_DM8168_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320DM8168"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_4.projectspec">
					<filter.ref ref.id="filter_161193396192300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_DM8168_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320DM8168"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_5.projectspec">
					<filter.ref ref.id="filter_161193396192300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_DM8168_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320DM8168"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_6.projectspec">
					<filter.ref ref.id="filter_161193396192300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_DM8168_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320DM8168"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_7.projectspec">
					<filter.ref ref.id="filter_161193396192300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_DM8168_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320DM8168"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_8.projectspec">
					<filter.ref ref.id="filter_161193396192300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_DM8168_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320DM8168"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_9.projectspec">
					<filter.ref ref.id="filter_161193396192300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_DM8168_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320DM8168"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_11.projectspec">
					<filter.ref ref.id="filter_161193396192300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_DM8168_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320DM8168"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_12.projectspec">
					<filter.ref ref.id="filter_161193396192300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_DM8168_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320DM8168"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_13.projectspec">
					<filter.ref ref.id="filter_161193396192300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_DM8168_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320DM8168"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_10.projectspec">
					<filter.ref ref.id="filter_161193396192300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_DM8168_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320DM8168"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="EVMDM8148" desc="EVMDM8148" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_161193397730300">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>EVMDM8148</tag>
					<tag>DaVinci DM81xx</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_0.projectspec">
					<filter.ref ref.id="filter_161193397730300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_EVMDM8148_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320DM8148.EVMDM8148"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_1.projectspec">
					<filter.ref ref.id="filter_161193397730300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_EVMDM8148_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320DM8148.EVMDM8148"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_161193397827800">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>EVMDM8148</tag>
					<tag>DaVinci DM81xx</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_14.projectspec">
					<filter.ref ref.id="filter_161193397827800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_EVMDM8148_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320DM8148.EVMDM8148"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_3.projectspec">
					<filter.ref ref.id="filter_161193397827800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_EVMDM8148_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320DM8148.EVMDM8148"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_4.projectspec">
					<filter.ref ref.id="filter_161193397827800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_EVMDM8148_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320DM8148.EVMDM8148"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_5.projectspec">
					<filter.ref ref.id="filter_161193397827800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_EVMDM8148_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320DM8148.EVMDM8148"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_6.projectspec">
					<filter.ref ref.id="filter_161193397827800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_EVMDM8148_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320DM8148.EVMDM8148"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_7.projectspec">
					<filter.ref ref.id="filter_161193397827800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_EVMDM8148_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320DM8148.EVMDM8148"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_8.projectspec">
					<filter.ref ref.id="filter_161193397827800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_EVMDM8148_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320DM8148.EVMDM8148"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_9.projectspec">
					<filter.ref ref.id="filter_161193397827800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_EVMDM8148_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320DM8148.EVMDM8148"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_11.projectspec">
					<filter.ref ref.id="filter_161193397827800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_EVMDM8148_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320DM8148.EVMDM8148"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_12.projectspec">
					<filter.ref ref.id="filter_161193397827800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_EVMDM8148_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320DM8148.EVMDM8148"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_13.projectspec">
					<filter.ref ref.id="filter_161193397827800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_EVMDM8148_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320DM8148.EVMDM8148"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_10.projectspec">
					<filter.ref ref.id="filter_161193397827800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_EVMDM8148_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320DM8148.EVMDM8148"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="EVMDM8168" desc="EVMDM8168" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_161193398496200">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>EVMDM8168</tag>
					<tag>DaVinci DM81xx</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_0.projectspec">
					<filter.ref ref.id="filter_161193398496200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_EVMDM8168_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320DM8168.EVMDM8168"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_1.projectspec">
					<filter.ref ref.id="filter_161193398496200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_EVMDM8168_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320DM8168.EVMDM8168"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_161193398589300">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>EVMDM8168</tag>
					<tag>DaVinci DM81xx</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_14.projectspec">
					<filter.ref ref.id="filter_161193398589300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_EVMDM8168_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320DM8168.EVMDM8168"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_3.projectspec">
					<filter.ref ref.id="filter_161193398589300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_EVMDM8168_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320DM8168.EVMDM8168"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_4.projectspec">
					<filter.ref ref.id="filter_161193398589300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_EVMDM8168_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320DM8168.EVMDM8168"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_5.projectspec">
					<filter.ref ref.id="filter_161193398589300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_EVMDM8168_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320DM8168.EVMDM8168"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_6.projectspec">
					<filter.ref ref.id="filter_161193398589300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_EVMDM8168_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320DM8168.EVMDM8168"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_7.projectspec">
					<filter.ref ref.id="filter_161193398589300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_EVMDM8168_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320DM8168.EVMDM8168"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_8.projectspec">
					<filter.ref ref.id="filter_161193398589300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_EVMDM8168_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320DM8168.EVMDM8168"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_9.projectspec">
					<filter.ref ref.id="filter_161193398589300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_EVMDM8168_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320DM8168.EVMDM8168"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_11.projectspec">
					<filter.ref ref.id="filter_161193398589300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_EVMDM8168_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320DM8168.EVMDM8168"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_12.projectspec">
					<filter.ref ref.id="filter_161193398589300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_EVMDM8168_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320DM8168.EVMDM8168"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_13.projectspec">
					<filter.ref ref.id="filter_161193398589300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_EVMDM8168_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320DM8168.EVMDM8168"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_10.projectspec">
					<filter.ref ref.id="filter_161193398589300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_EVMDM8168_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320DM8168.EVMDM8168"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
		</contents>
		<contents name="OMAP-L1x" desc="OMAP-L1x" icon="plugin://icons/obj16/devices.png">
			<contents name="EVMOMAPL137" desc="EVMOMAPL137" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_161193399267500">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>EVMOMAPL137</tag>
					<tag>OMAP-L1x</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_0.projectspec">
					<filter.ref ref.id="filter_161193399267500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_EVMOMAPL137_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.OMAPL137.EVMOMAPL137"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_1.projectspec">
					<filter.ref ref.id="filter_161193399267500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_EVMOMAPL137_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.OMAPL137.EVMOMAPL137"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_161193399356500">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>EVMOMAPL137</tag>
					<tag>OMAP-L1x</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_14.projectspec">
					<filter.ref ref.id="filter_161193399356500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_EVMOMAPL137_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.OMAPL137.EVMOMAPL137"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_3.projectspec">
					<filter.ref ref.id="filter_161193399356500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_EVMOMAPL137_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.OMAPL137.EVMOMAPL137"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_4.projectspec">
					<filter.ref ref.id="filter_161193399356500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_EVMOMAPL137_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.OMAPL137.EVMOMAPL137"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_5.projectspec">
					<filter.ref ref.id="filter_161193399356500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_EVMOMAPL137_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.OMAPL137.EVMOMAPL137"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_6.projectspec">
					<filter.ref ref.id="filter_161193399356500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_EVMOMAPL137_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.OMAPL137.EVMOMAPL137"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_7.projectspec">
					<filter.ref ref.id="filter_161193399356500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_EVMOMAPL137_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.OMAPL137.EVMOMAPL137"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_8.projectspec">
					<filter.ref ref.id="filter_161193399356500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_EVMOMAPL137_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.OMAPL137.EVMOMAPL137"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_9.projectspec">
					<filter.ref ref.id="filter_161193399356500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_EVMOMAPL137_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.OMAPL137.EVMOMAPL137"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_11.projectspec">
					<filter.ref ref.id="filter_161193399356500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_EVMOMAPL137_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.OMAPL137.EVMOMAPL137"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_12.projectspec">
					<filter.ref ref.id="filter_161193399356500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_EVMOMAPL137_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.OMAPL137.EVMOMAPL137"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_13.projectspec">
					<filter.ref ref.id="filter_161193399356500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_EVMOMAPL137_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.OMAPL137.EVMOMAPL137"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_10.projectspec">
					<filter.ref ref.id="filter_161193399356500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_EVMOMAPL137_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.OMAPL137.EVMOMAPL137"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="EVMOMAPL138" desc="EVMOMAPL138" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_161193399947600">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>EVMOMAPL138</tag>
					<tag>OMAP-L1x</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_0.projectspec">
					<filter.ref ref.id="filter_161193399947600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_EVMOMAPL138_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.OMAPL138.EVMOMAPL138"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_1.projectspec">
					<filter.ref ref.id="filter_161193399947600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_EVMOMAPL138_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.OMAPL138.EVMOMAPL138"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_161193401070400">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>EVMOMAPL138</tag>
					<tag>OMAP-L1x</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_14.projectspec">
					<filter.ref ref.id="filter_161193401070400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_EVMOMAPL138_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.OMAPL138.EVMOMAPL138"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_3.projectspec">
					<filter.ref ref.id="filter_161193401070400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_EVMOMAPL138_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.OMAPL138.EVMOMAPL138"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_4.projectspec">
					<filter.ref ref.id="filter_161193401070400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_EVMOMAPL138_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.OMAPL138.EVMOMAPL138"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_5.projectspec">
					<filter.ref ref.id="filter_161193401070400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_EVMOMAPL138_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.OMAPL138.EVMOMAPL138"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_6.projectspec">
					<filter.ref ref.id="filter_161193401070400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_EVMOMAPL138_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.OMAPL138.EVMOMAPL138"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_7.projectspec">
					<filter.ref ref.id="filter_161193401070400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_EVMOMAPL138_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.OMAPL138.EVMOMAPL138"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_8.projectspec">
					<filter.ref ref.id="filter_161193401070400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_EVMOMAPL138_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.OMAPL138.EVMOMAPL138"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_9.projectspec">
					<filter.ref ref.id="filter_161193401070400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_EVMOMAPL138_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.OMAPL138.EVMOMAPL138"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_11.projectspec">
					<filter.ref ref.id="filter_161193401070400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_EVMOMAPL138_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.OMAPL138.EVMOMAPL138"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_12.projectspec">
					<filter.ref ref.id="filter_161193401070400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_EVMOMAPL138_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.OMAPL138.EVMOMAPL138"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_13.projectspec">
					<filter.ref ref.id="filter_161193401070400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_EVMOMAPL138_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.OMAPL138.EVMOMAPL138"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_10.projectspec">
					<filter.ref ref.id="filter_161193401070400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_EVMOMAPL138_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.OMAPL138.EVMOMAPL138"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="EXPKITOMAPL138" desc="EXPKITOMAPL138" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_161193401774700">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>EXPKITOMAPL138</tag>
					<tag>OMAP-L1x</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_0.projectspec">
					<filter.ref ref.id="filter_161193401774700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_EXPKITOMAPL138_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.OMAPL138.EXPKITOMAPL138"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_1.projectspec">
					<filter.ref ref.id="filter_161193401774700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_EXPKITOMAPL138_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.OMAPL138.EXPKITOMAPL138"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_161193401869800">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>EXPKITOMAPL138</tag>
					<tag>OMAP-L1x</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_14.projectspec">
					<filter.ref ref.id="filter_161193401869800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_EXPKITOMAPL138_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.OMAPL138.EXPKITOMAPL138"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_3.projectspec">
					<filter.ref ref.id="filter_161193401869800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_EXPKITOMAPL138_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.OMAPL138.EXPKITOMAPL138"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_4.projectspec">
					<filter.ref ref.id="filter_161193401869800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_EXPKITOMAPL138_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.OMAPL138.EXPKITOMAPL138"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_5.projectspec">
					<filter.ref ref.id="filter_161193401869800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_EXPKITOMAPL138_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.OMAPL138.EXPKITOMAPL138"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_6.projectspec">
					<filter.ref ref.id="filter_161193401869800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_EXPKITOMAPL138_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.OMAPL138.EXPKITOMAPL138"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_7.projectspec">
					<filter.ref ref.id="filter_161193401869800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_EXPKITOMAPL138_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.OMAPL138.EXPKITOMAPL138"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_8.projectspec">
					<filter.ref ref.id="filter_161193401869800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_EXPKITOMAPL138_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.OMAPL138.EXPKITOMAPL138"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_9.projectspec">
					<filter.ref ref.id="filter_161193401869800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_EXPKITOMAPL138_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.OMAPL138.EXPKITOMAPL138"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_11.projectspec">
					<filter.ref ref.id="filter_161193401869800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_EXPKITOMAPL138_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.OMAPL138.EXPKITOMAPL138"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_12.projectspec">
					<filter.ref ref.id="filter_161193401869800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_EXPKITOMAPL138_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.OMAPL138.EXPKITOMAPL138"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_13.projectspec">
					<filter.ref ref.id="filter_161193401869800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_EXPKITOMAPL138_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.OMAPL138.EXPKITOMAPL138"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_10.projectspec">
					<filter.ref ref.id="filter_161193401869800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_EXPKITOMAPL138_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.OMAPL138.EXPKITOMAPL138"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="LCDKOMAPL138" desc="LCDKOMAPL138" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_161193402479000">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>LCDKOMAPL138</tag>
					<tag>OMAP-L1x</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_0.projectspec">
					<filter.ref ref.id="filter_161193402479000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_LCDKOMAPL138_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.OMAPL138.LCDKOMAPL138"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_1.projectspec">
					<filter.ref ref.id="filter_161193402479000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_LCDKOMAPL138_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.OMAPL138.LCDKOMAPL138"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_161193402568300">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>LCDKOMAPL138</tag>
					<tag>OMAP-L1x</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_14.projectspec">
					<filter.ref ref.id="filter_161193402568300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_LCDKOMAPL138_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.OMAPL138.LCDKOMAPL138"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_3.projectspec">
					<filter.ref ref.id="filter_161193402568300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_LCDKOMAPL138_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.OMAPL138.LCDKOMAPL138"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_4.projectspec">
					<filter.ref ref.id="filter_161193402568300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_LCDKOMAPL138_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.OMAPL138.LCDKOMAPL138"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_5.projectspec">
					<filter.ref ref.id="filter_161193402568300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_LCDKOMAPL138_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.OMAPL138.LCDKOMAPL138"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_6.projectspec">
					<filter.ref ref.id="filter_161193402568300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_LCDKOMAPL138_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.OMAPL138.LCDKOMAPL138"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_7.projectspec">
					<filter.ref ref.id="filter_161193402568300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_LCDKOMAPL138_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.OMAPL138.LCDKOMAPL138"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_8.projectspec">
					<filter.ref ref.id="filter_161193402568300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_LCDKOMAPL138_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.OMAPL138.LCDKOMAPL138"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_9.projectspec">
					<filter.ref ref.id="filter_161193402568300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_LCDKOMAPL138_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.OMAPL138.LCDKOMAPL138"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_11.projectspec">
					<filter.ref ref.id="filter_161193402568300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_LCDKOMAPL138_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.OMAPL138.LCDKOMAPL138"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_12.projectspec">
					<filter.ref ref.id="filter_161193402568300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_LCDKOMAPL138_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.OMAPL138.LCDKOMAPL138"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_13.projectspec">
					<filter.ref ref.id="filter_161193402568300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_LCDKOMAPL138_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.OMAPL138.LCDKOMAPL138"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_10.projectspec">
					<filter.ref ref.id="filter_161193402568300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_LCDKOMAPL138_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.OMAPL138.LCDKOMAPL138"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="OMAPL132" desc="OMAPL132" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_161193403208800">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>OMAPL132</tag>
					<tag>OMAP-L1x</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_0.projectspec">
					<filter.ref ref.id="filter_161193403208800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_OMAPL132_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.OMAPL132"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_1.projectspec">
					<filter.ref ref.id="filter_161193403208800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_OMAPL132_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.OMAPL132"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_161193403293500">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>OMAPL132</tag>
					<tag>OMAP-L1x</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_14.projectspec">
					<filter.ref ref.id="filter_161193403293500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_OMAPL132_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.OMAPL132"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_3.projectspec">
					<filter.ref ref.id="filter_161193403293500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_OMAPL132_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.OMAPL132"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_4.projectspec">
					<filter.ref ref.id="filter_161193403293500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_OMAPL132_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.OMAPL132"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_5.projectspec">
					<filter.ref ref.id="filter_161193403293500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_OMAPL132_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.OMAPL132"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_6.projectspec">
					<filter.ref ref.id="filter_161193403293500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_OMAPL132_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.OMAPL132"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_7.projectspec">
					<filter.ref ref.id="filter_161193403293500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_OMAPL132_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.OMAPL132"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_8.projectspec">
					<filter.ref ref.id="filter_161193403293500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_OMAPL132_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.OMAPL132"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_9.projectspec">
					<filter.ref ref.id="filter_161193403293500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_OMAPL132_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.OMAPL132"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_11.projectspec">
					<filter.ref ref.id="filter_161193403293500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_OMAPL132_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.OMAPL132"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_12.projectspec">
					<filter.ref ref.id="filter_161193403293500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_OMAPL132_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.OMAPL132"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_13.projectspec">
					<filter.ref ref.id="filter_161193403293500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_OMAPL132_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.OMAPL132"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_10.projectspec">
					<filter.ref ref.id="filter_161193403293500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_OMAPL132_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.OMAPL132"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="OMAPL137" desc="OMAPL137" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_161193403854100">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>OMAPL137</tag>
					<tag>OMAP-L1x</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_0.projectspec">
					<filter.ref ref.id="filter_161193403854100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_OMAPL137_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.OMAPL137"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_1.projectspec">
					<filter.ref ref.id="filter_161193403854100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_OMAPL137_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.OMAPL137"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_161193403936800">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>OMAPL137</tag>
					<tag>OMAP-L1x</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_14.projectspec">
					<filter.ref ref.id="filter_161193403936800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_OMAPL137_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.OMAPL137"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_3.projectspec">
					<filter.ref ref.id="filter_161193403936800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_OMAPL137_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.OMAPL137"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_4.projectspec">
					<filter.ref ref.id="filter_161193403936800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_OMAPL137_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.OMAPL137"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_5.projectspec">
					<filter.ref ref.id="filter_161193403936800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_OMAPL137_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.OMAPL137"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_6.projectspec">
					<filter.ref ref.id="filter_161193403936800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_OMAPL137_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.OMAPL137"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_7.projectspec">
					<filter.ref ref.id="filter_161193403936800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_OMAPL137_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.OMAPL137"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_8.projectspec">
					<filter.ref ref.id="filter_161193403936800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_OMAPL137_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.OMAPL137"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_9.projectspec">
					<filter.ref ref.id="filter_161193403936800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_OMAPL137_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.OMAPL137"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_11.projectspec">
					<filter.ref ref.id="filter_161193403936800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_OMAPL137_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.OMAPL137"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_12.projectspec">
					<filter.ref ref.id="filter_161193403936800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_OMAPL137_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.OMAPL137"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_13.projectspec">
					<filter.ref ref.id="filter_161193403936800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_OMAPL137_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.OMAPL137"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_10.projectspec">
					<filter.ref ref.id="filter_161193403936800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_OMAPL137_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.OMAPL137"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="OMAPL138" desc="OMAPL138" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_161193405376500">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>OMAPL138</tag>
					<tag>OMAP-L1x</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_0.projectspec">
					<filter.ref ref.id="filter_161193405376500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_OMAPL138_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.OMAPL138"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_1.projectspec">
					<filter.ref ref.id="filter_161193405376500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_OMAPL138_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.OMAPL138"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_161193405462000">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>OMAPL138</tag>
					<tag>OMAP-L1x</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_14.projectspec">
					<filter.ref ref.id="filter_161193405462000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_OMAPL138_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.OMAPL138"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_3.projectspec">
					<filter.ref ref.id="filter_161193405462000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_OMAPL138_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.OMAPL138"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_4.projectspec">
					<filter.ref ref.id="filter_161193405462000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_OMAPL138_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.OMAPL138"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_5.projectspec">
					<filter.ref ref.id="filter_161193405462000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_OMAPL138_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.OMAPL138"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_6.projectspec">
					<filter.ref ref.id="filter_161193405462000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_OMAPL138_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.OMAPL138"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_7.projectspec">
					<filter.ref ref.id="filter_161193405462000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_OMAPL138_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.OMAPL138"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_8.projectspec">
					<filter.ref ref.id="filter_161193405462000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_OMAPL138_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.OMAPL138"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_9.projectspec">
					<filter.ref ref.id="filter_161193405462000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_OMAPL138_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.OMAPL138"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_11.projectspec">
					<filter.ref ref.id="filter_161193405462000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_OMAPL138_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.OMAPL138"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_12.projectspec">
					<filter.ref ref.id="filter_161193405462000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_OMAPL138_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.OMAPL138"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_13.projectspec">
					<filter.ref ref.id="filter_161193405462000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_OMAPL138_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.OMAPL138"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_10.projectspec">
					<filter.ref ref.id="filter_161193405462000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_OMAPL138_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.OMAPL138"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
		</contents>
		<contents name="OMAP3" desc="OMAP3" icon="plugin://icons/obj16/devices.png">
			<contents name="BeagleBoard" desc="BeagleBoard" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_161193406081500">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>BeagleBoard</tag>
					<tag>OMAP3</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_0.projectspec">
					<filter.ref ref.id="filter_161193406081500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_BeagleBoard_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP3530.BeagleBoard"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_1.projectspec">
					<filter.ref ref.id="filter_161193406081500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_BeagleBoard_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP3530.BeagleBoard"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_161193406168500">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>BeagleBoard</tag>
					<tag>OMAP3</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_14.projectspec">
					<filter.ref ref.id="filter_161193406168500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_BeagleBoard_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP3530.BeagleBoard"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_3.projectspec">
					<filter.ref ref.id="filter_161193406168500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_BeagleBoard_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP3530.BeagleBoard"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_4.projectspec">
					<filter.ref ref.id="filter_161193406168500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_BeagleBoard_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP3530.BeagleBoard"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_5.projectspec">
					<filter.ref ref.id="filter_161193406168500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_BeagleBoard_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP3530.BeagleBoard"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_6.projectspec">
					<filter.ref ref.id="filter_161193406168500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_BeagleBoard_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP3530.BeagleBoard"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_7.projectspec">
					<filter.ref ref.id="filter_161193406168500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_BeagleBoard_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP3530.BeagleBoard"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_8.projectspec">
					<filter.ref ref.id="filter_161193406168500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_BeagleBoard_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP3530.BeagleBoard"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_9.projectspec">
					<filter.ref ref.id="filter_161193406168500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_BeagleBoard_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP3530.BeagleBoard"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_11.projectspec">
					<filter.ref ref.id="filter_161193406168500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_BeagleBoard_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP3530.BeagleBoard"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_12.projectspec">
					<filter.ref ref.id="filter_161193406168500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_BeagleBoard_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP3530.BeagleBoard"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_13.projectspec">
					<filter.ref ref.id="filter_161193406168500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_BeagleBoard_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP3530.BeagleBoard"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_10.projectspec">
					<filter.ref ref.id="filter_161193406168500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_BeagleBoard_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP3530.BeagleBoard"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="EVMOMAP3530" desc="EVMOMAP3530" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_161193406751100">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>EVMOMAP3530</tag>
					<tag>OMAP3</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_0.projectspec">
					<filter.ref ref.id="filter_161193406751100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_EVMOMAP3530_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP3530.EVMOMAP3530"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_1.projectspec">
					<filter.ref ref.id="filter_161193406751100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_EVMOMAP3530_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP3530.EVMOMAP3530"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_161193406836800">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>EVMOMAP3530</tag>
					<tag>OMAP3</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_14.projectspec">
					<filter.ref ref.id="filter_161193406836800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_EVMOMAP3530_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP3530.EVMOMAP3530"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_3.projectspec">
					<filter.ref ref.id="filter_161193406836800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_EVMOMAP3530_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP3530.EVMOMAP3530"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_4.projectspec">
					<filter.ref ref.id="filter_161193406836800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_EVMOMAP3530_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP3530.EVMOMAP3530"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_5.projectspec">
					<filter.ref ref.id="filter_161193406836800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_EVMOMAP3530_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP3530.EVMOMAP3530"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_6.projectspec">
					<filter.ref ref.id="filter_161193406836800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_EVMOMAP3530_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP3530.EVMOMAP3530"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_7.projectspec">
					<filter.ref ref.id="filter_161193406836800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_EVMOMAP3530_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP3530.EVMOMAP3530"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_8.projectspec">
					<filter.ref ref.id="filter_161193406836800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_EVMOMAP3530_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP3530.EVMOMAP3530"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_9.projectspec">
					<filter.ref ref.id="filter_161193406836800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_EVMOMAP3530_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP3530.EVMOMAP3530"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_11.projectspec">
					<filter.ref ref.id="filter_161193406836800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_EVMOMAP3530_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP3530.EVMOMAP3530"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_12.projectspec">
					<filter.ref ref.id="filter_161193406836800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_EVMOMAP3530_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP3530.EVMOMAP3530"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_13.projectspec">
					<filter.ref ref.id="filter_161193406836800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_EVMOMAP3530_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP3530.EVMOMAP3530"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_10.projectspec">
					<filter.ref ref.id="filter_161193406836800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_EVMOMAP3530_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP3530.EVMOMAP3530"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="OMAP3430" desc="OMAP3430" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_161193407422100">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>OMAP3430</tag>
					<tag>OMAP3</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_0.projectspec">
					<filter.ref ref.id="filter_161193407422100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_OMAP3430_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP3430"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_1.projectspec">
					<filter.ref ref.id="filter_161193407422100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_OMAP3430_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP3430"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_161193407503600">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>OMAP3430</tag>
					<tag>OMAP3</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_14.projectspec">
					<filter.ref ref.id="filter_161193407503600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_OMAP3430_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP3430"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_3.projectspec">
					<filter.ref ref.id="filter_161193407503600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_OMAP3430_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP3430"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_4.projectspec">
					<filter.ref ref.id="filter_161193407503600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_OMAP3430_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP3430"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_5.projectspec">
					<filter.ref ref.id="filter_161193407503600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_OMAP3430_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP3430"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_6.projectspec">
					<filter.ref ref.id="filter_161193407503600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_OMAP3430_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP3430"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_7.projectspec">
					<filter.ref ref.id="filter_161193407503600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_OMAP3430_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP3430"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_8.projectspec">
					<filter.ref ref.id="filter_161193407503600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_OMAP3430_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP3430"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_9.projectspec">
					<filter.ref ref.id="filter_161193407503600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_OMAP3430_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP3430"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_11.projectspec">
					<filter.ref ref.id="filter_161193407503600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_OMAP3430_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP3430"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_12.projectspec">
					<filter.ref ref.id="filter_161193407503600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_OMAP3430_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP3430"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_13.projectspec">
					<filter.ref ref.id="filter_161193407503600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_OMAP3430_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP3430"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_10.projectspec">
					<filter.ref ref.id="filter_161193407503600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_OMAP3430_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP3430"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="OMAP3525" desc="OMAP3525" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_161193408887100">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>OMAP3525</tag>
					<tag>OMAP3</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_0.projectspec">
					<filter.ref ref.id="filter_161193408887100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_OMAP3525_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP3525"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_1.projectspec">
					<filter.ref ref.id="filter_161193408887100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_OMAP3525_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP3525"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_161193408996900">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>OMAP3525</tag>
					<tag>OMAP3</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_14.projectspec">
					<filter.ref ref.id="filter_161193408996900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_OMAP3525_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP3525"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_3.projectspec">
					<filter.ref ref.id="filter_161193408996900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_OMAP3525_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP3525"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_4.projectspec">
					<filter.ref ref.id="filter_161193408996900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_OMAP3525_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP3525"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_5.projectspec">
					<filter.ref ref.id="filter_161193408996900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_OMAP3525_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP3525"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_6.projectspec">
					<filter.ref ref.id="filter_161193408996900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_OMAP3525_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP3525"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_7.projectspec">
					<filter.ref ref.id="filter_161193408996900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_OMAP3525_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP3525"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_8.projectspec">
					<filter.ref ref.id="filter_161193408996900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_OMAP3525_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP3525"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_9.projectspec">
					<filter.ref ref.id="filter_161193408996900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_OMAP3525_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP3525"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_11.projectspec">
					<filter.ref ref.id="filter_161193408996900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_OMAP3525_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP3525"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_12.projectspec">
					<filter.ref ref.id="filter_161193408996900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_OMAP3525_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP3525"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_13.projectspec">
					<filter.ref ref.id="filter_161193408996900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_OMAP3525_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP3525"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_10.projectspec">
					<filter.ref ref.id="filter_161193408996900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_OMAP3525_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP3525"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="OMAP3530" desc="OMAP3530" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_161193409666200">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>OMAP3530</tag>
					<tag>OMAP3</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_0.projectspec">
					<filter.ref ref.id="filter_161193409666200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_OMAP3530_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP3530"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_1.projectspec">
					<filter.ref ref.id="filter_161193409666200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_OMAP3530_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP3530"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_161193409750100">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>OMAP3530</tag>
					<tag>OMAP3</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_14.projectspec">
					<filter.ref ref.id="filter_161193409750100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_OMAP3530_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP3530"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_3.projectspec">
					<filter.ref ref.id="filter_161193409750100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_OMAP3530_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP3530"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_4.projectspec">
					<filter.ref ref.id="filter_161193409750100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_OMAP3530_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP3530"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_5.projectspec">
					<filter.ref ref.id="filter_161193409750100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_OMAP3530_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP3530"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_6.projectspec">
					<filter.ref ref.id="filter_161193409750100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_OMAP3530_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP3530"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_7.projectspec">
					<filter.ref ref.id="filter_161193409750100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_OMAP3530_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP3530"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_8.projectspec">
					<filter.ref ref.id="filter_161193409750100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_OMAP3530_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP3530"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_9.projectspec">
					<filter.ref ref.id="filter_161193409750100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_OMAP3530_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP3530"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_11.projectspec">
					<filter.ref ref.id="filter_161193409750100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_OMAP3530_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP3530"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_12.projectspec">
					<filter.ref ref.id="filter_161193409750100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_OMAP3530_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP3530"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_13.projectspec">
					<filter.ref ref.id="filter_161193409750100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_OMAP3530_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP3530"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_10.projectspec">
					<filter.ref ref.id="filter_161193409750100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_OMAP3530_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP3530"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="OMAP3630" desc="OMAP3630" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_161193410434700">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>OMAP3630</tag>
					<tag>OMAP3</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_0.projectspec">
					<filter.ref ref.id="filter_161193410434700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_OMAP3630_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP3630"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_1.projectspec">
					<filter.ref ref.id="filter_161193410434700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_OMAP3630_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP3630"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_161193410520100">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>OMAP3630</tag>
					<tag>OMAP3</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_14.projectspec">
					<filter.ref ref.id="filter_161193410520100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_OMAP3630_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP3630"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_3.projectspec">
					<filter.ref ref.id="filter_161193410520100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_OMAP3630_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP3630"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_4.projectspec">
					<filter.ref ref.id="filter_161193410520100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_OMAP3630_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP3630"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_5.projectspec">
					<filter.ref ref.id="filter_161193410520100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_OMAP3630_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP3630"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_6.projectspec">
					<filter.ref ref.id="filter_161193410520100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_OMAP3630_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP3630"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_7.projectspec">
					<filter.ref ref.id="filter_161193410520100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_OMAP3630_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP3630"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_8.projectspec">
					<filter.ref ref.id="filter_161193410520100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_OMAP3630_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP3630"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_9.projectspec">
					<filter.ref ref.id="filter_161193410520100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_OMAP3630_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP3630"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_11.projectspec">
					<filter.ref ref.id="filter_161193410520100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_OMAP3630_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP3630"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_12.projectspec">
					<filter.ref ref.id="filter_161193410520100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_OMAP3630_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP3630"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_13.projectspec">
					<filter.ref ref.id="filter_161193410520100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_OMAP3630_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP3630"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_10.projectspec">
					<filter.ref ref.id="filter_161193410520100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_OMAP3630_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP3630"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
		</contents>
		<contents name="OMAP4" desc="OMAP4" icon="plugin://icons/obj16/devices.png">
			<contents name="Blaze_4430" desc="Blaze_4430" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_161193411134600">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>Blaze_4430</tag>
					<tag>OMAP4</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_0.projectspec">
					<filter.ref ref.id="filter_161193411134600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_Blaze_4430_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP4430.Blaze_4430"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_1.projectspec">
					<filter.ref ref.id="filter_161193411134600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_Blaze_4430_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP4430.Blaze_4430"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_161193411220600">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>Blaze_4430</tag>
					<tag>OMAP4</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_14.projectspec">
					<filter.ref ref.id="filter_161193411220600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_Blaze_4430_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP4430.Blaze_4430"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_3.projectspec">
					<filter.ref ref.id="filter_161193411220600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_Blaze_4430_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP4430.Blaze_4430"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_4.projectspec">
					<filter.ref ref.id="filter_161193411220600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_Blaze_4430_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP4430.Blaze_4430"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_5.projectspec">
					<filter.ref ref.id="filter_161193411220600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_Blaze_4430_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP4430.Blaze_4430"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_6.projectspec">
					<filter.ref ref.id="filter_161193411220600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_Blaze_4430_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP4430.Blaze_4430"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_7.projectspec">
					<filter.ref ref.id="filter_161193411220600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_Blaze_4430_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP4430.Blaze_4430"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_8.projectspec">
					<filter.ref ref.id="filter_161193411220600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_Blaze_4430_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP4430.Blaze_4430"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_9.projectspec">
					<filter.ref ref.id="filter_161193411220600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_Blaze_4430_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP4430.Blaze_4430"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_11.projectspec">
					<filter.ref ref.id="filter_161193411220600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_Blaze_4430_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP4430.Blaze_4430"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_12.projectspec">
					<filter.ref ref.id="filter_161193411220600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_Blaze_4430_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP4430.Blaze_4430"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_13.projectspec">
					<filter.ref ref.id="filter_161193411220600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_Blaze_4430_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP4430.Blaze_4430"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_10.projectspec">
					<filter.ref ref.id="filter_161193411220600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_Blaze_4430_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP4430.Blaze_4430"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="Blaze_4460" desc="Blaze_4460" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_161193412545600">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>Blaze_4460</tag>
					<tag>OMAP4</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_0.projectspec">
					<filter.ref ref.id="filter_161193412545600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_Blaze_4460_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP4460.Blaze_4460"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_1.projectspec">
					<filter.ref ref.id="filter_161193412545600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_Blaze_4460_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP4460.Blaze_4460"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_161193412642400">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>Blaze_4460</tag>
					<tag>OMAP4</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_14.projectspec">
					<filter.ref ref.id="filter_161193412642400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_Blaze_4460_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP4460.Blaze_4460"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_3.projectspec">
					<filter.ref ref.id="filter_161193412642400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_Blaze_4460_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP4460.Blaze_4460"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_4.projectspec">
					<filter.ref ref.id="filter_161193412642400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_Blaze_4460_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP4460.Blaze_4460"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_5.projectspec">
					<filter.ref ref.id="filter_161193412642400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_Blaze_4460_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP4460.Blaze_4460"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_6.projectspec">
					<filter.ref ref.id="filter_161193412642400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_Blaze_4460_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP4460.Blaze_4460"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_7.projectspec">
					<filter.ref ref.id="filter_161193412642400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_Blaze_4460_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP4460.Blaze_4460"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_8.projectspec">
					<filter.ref ref.id="filter_161193412642400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_Blaze_4460_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP4460.Blaze_4460"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_9.projectspec">
					<filter.ref ref.id="filter_161193412642400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_Blaze_4460_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP4460.Blaze_4460"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_11.projectspec">
					<filter.ref ref.id="filter_161193412642400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_Blaze_4460_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP4460.Blaze_4460"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_12.projectspec">
					<filter.ref ref.id="filter_161193412642400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_Blaze_4460_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP4460.Blaze_4460"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_13.projectspec">
					<filter.ref ref.id="filter_161193412642400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_Blaze_4460_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP4460.Blaze_4460"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_10.projectspec">
					<filter.ref ref.id="filter_161193412642400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_Blaze_4460_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP4460.Blaze_4460"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="OMAP4430" desc="OMAP4430" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_161193413229400">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>OMAP4430</tag>
					<tag>OMAP4</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_0.projectspec">
					<filter.ref ref.id="filter_161193413229400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_OMAP4430_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP4430"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_1.projectspec">
					<filter.ref ref.id="filter_161193413229400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_OMAP4430_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP4430"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_161193413314100">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>OMAP4430</tag>
					<tag>OMAP4</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_14.projectspec">
					<filter.ref ref.id="filter_161193413314100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_OMAP4430_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP4430"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_3.projectspec">
					<filter.ref ref.id="filter_161193413314100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_OMAP4430_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP4430"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_4.projectspec">
					<filter.ref ref.id="filter_161193413314100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_OMAP4430_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP4430"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_5.projectspec">
					<filter.ref ref.id="filter_161193413314100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_OMAP4430_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP4430"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_6.projectspec">
					<filter.ref ref.id="filter_161193413314100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_OMAP4430_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP4430"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_7.projectspec">
					<filter.ref ref.id="filter_161193413314100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_OMAP4430_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP4430"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_8.projectspec">
					<filter.ref ref.id="filter_161193413314100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_OMAP4430_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP4430"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_9.projectspec">
					<filter.ref ref.id="filter_161193413314100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_OMAP4430_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP4430"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_11.projectspec">
					<filter.ref ref.id="filter_161193413314100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_OMAP4430_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP4430"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_12.projectspec">
					<filter.ref ref.id="filter_161193413314100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_OMAP4430_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP4430"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_13.projectspec">
					<filter.ref ref.id="filter_161193413314100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_OMAP4430_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP4430"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_10.projectspec">
					<filter.ref ref.id="filter_161193413314100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_OMAP4430_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP4430"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="OMAP4460" desc="OMAP4460" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_161193413867000">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>OMAP4460</tag>
					<tag>OMAP4</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_0.projectspec">
					<filter.ref ref.id="filter_161193413867000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_OMAP4460_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP4460"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_1.projectspec">
					<filter.ref ref.id="filter_161193413867000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_OMAP4460_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP4460"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_161193413949600">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>OMAP4460</tag>
					<tag>OMAP4</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_14.projectspec">
					<filter.ref ref.id="filter_161193413949600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_OMAP4460_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP4460"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_3.projectspec">
					<filter.ref ref.id="filter_161193413949600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_OMAP4460_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP4460"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_4.projectspec">
					<filter.ref ref.id="filter_161193413949600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_OMAP4460_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP4460"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_5.projectspec">
					<filter.ref ref.id="filter_161193413949600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_OMAP4460_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP4460"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_6.projectspec">
					<filter.ref ref.id="filter_161193413949600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_OMAP4460_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP4460"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_7.projectspec">
					<filter.ref ref.id="filter_161193413949600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_OMAP4460_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP4460"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_8.projectspec">
					<filter.ref ref.id="filter_161193413949600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_OMAP4460_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP4460"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_9.projectspec">
					<filter.ref ref.id="filter_161193413949600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_OMAP4460_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP4460"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_11.projectspec">
					<filter.ref ref.id="filter_161193413949600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_OMAP4460_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP4460"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_12.projectspec">
					<filter.ref ref.id="filter_161193413949600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_OMAP4460_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP4460"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_13.projectspec">
					<filter.ref ref.id="filter_161193413949600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_OMAP4460_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP4460"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_10.projectspec">
					<filter.ref ref.id="filter_161193413949600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_OMAP4460_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP4460"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="PandaBoard" desc="PandaBoard" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_161193414504100">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>PandaBoard</tag>
					<tag>OMAP4</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_0.projectspec">
					<filter.ref ref.id="filter_161193414504100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_PandaBoard_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP4430.PandaBoard"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_1.projectspec">
					<filter.ref ref.id="filter_161193414504100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_PandaBoard_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP4430.PandaBoard"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_161193414587400">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>PandaBoard</tag>
					<tag>OMAP4</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_14.projectspec">
					<filter.ref ref.id="filter_161193414587400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_PandaBoard_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP4430.PandaBoard"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_3.projectspec">
					<filter.ref ref.id="filter_161193414587400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_PandaBoard_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP4430.PandaBoard"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_4.projectspec">
					<filter.ref ref.id="filter_161193414587400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_PandaBoard_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP4430.PandaBoard"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_5.projectspec">
					<filter.ref ref.id="filter_161193414587400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_PandaBoard_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP4430.PandaBoard"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_6.projectspec">
					<filter.ref ref.id="filter_161193414587400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_PandaBoard_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP4430.PandaBoard"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_7.projectspec">
					<filter.ref ref.id="filter_161193414587400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_PandaBoard_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP4430.PandaBoard"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_8.projectspec">
					<filter.ref ref.id="filter_161193414587400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_PandaBoard_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP4430.PandaBoard"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_9.projectspec">
					<filter.ref ref.id="filter_161193414587400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_PandaBoard_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP4430.PandaBoard"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_11.projectspec">
					<filter.ref ref.id="filter_161193414587400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_PandaBoard_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP4430.PandaBoard"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_12.projectspec">
					<filter.ref ref.id="filter_161193414587400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_PandaBoard_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP4430.PandaBoard"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_13.projectspec">
					<filter.ref ref.id="filter_161193414587400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_PandaBoard_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP4430.PandaBoard"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_10.projectspec">
					<filter.ref ref.id="filter_161193414587400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_PandaBoard_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP4430.PandaBoard"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="PandaBoard_ES" desc="PandaBoard_ES" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_161193415164700">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>PandaBoard_ES</tag>
					<tag>OMAP4</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_0.projectspec">
					<filter.ref ref.id="filter_161193415164700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_PandaBoard_ES_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP4460.PandaBoard_ES"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_1.projectspec">
					<filter.ref ref.id="filter_161193415164700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_PandaBoard_ES_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP4460.PandaBoard_ES"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_161193415251300">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>PandaBoard_ES</tag>
					<tag>OMAP4</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_14.projectspec">
					<filter.ref ref.id="filter_161193415251300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_PandaBoard_ES_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP4460.PandaBoard_ES"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_3.projectspec">
					<filter.ref ref.id="filter_161193415251300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_PandaBoard_ES_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP4460.PandaBoard_ES"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_4.projectspec">
					<filter.ref ref.id="filter_161193415251300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_PandaBoard_ES_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP4460.PandaBoard_ES"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_5.projectspec">
					<filter.ref ref.id="filter_161193415251300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_PandaBoard_ES_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP4460.PandaBoard_ES"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_6.projectspec">
					<filter.ref ref.id="filter_161193415251300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_PandaBoard_ES_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP4460.PandaBoard_ES"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_7.projectspec">
					<filter.ref ref.id="filter_161193415251300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_PandaBoard_ES_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP4460.PandaBoard_ES"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_8.projectspec">
					<filter.ref ref.id="filter_161193415251300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_PandaBoard_ES_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP4460.PandaBoard_ES"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_9.projectspec">
					<filter.ref ref.id="filter_161193415251300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_PandaBoard_ES_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP4460.PandaBoard_ES"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_11.projectspec">
					<filter.ref ref.id="filter_161193415251300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_PandaBoard_ES_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP4460.PandaBoard_ES"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_12.projectspec">
					<filter.ref ref.id="filter_161193415251300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_PandaBoard_ES_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP4460.PandaBoard_ES"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_13.projectspec">
					<filter.ref ref.id="filter_161193415251300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_PandaBoard_ES_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP4460.PandaBoard_ES"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_10.projectspec">
					<filter.ref ref.id="filter_161193415251300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_PandaBoard_ES_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP4460.PandaBoard_ES"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
		</contents>
		<contents name="OMAP5" desc="OMAP5" icon="plugin://icons/obj16/devices.png">
			<contents name="OMAP5430" desc="OMAP5430" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_161193416515500">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>OMAP5430</tag>
					<tag>OMAP5</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_0.projectspec">
					<filter.ref ref.id="filter_161193416515500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_OMAP5430_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP5430"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_1.projectspec">
					<filter.ref ref.id="filter_161193416515500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_OMAP5430_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP5430"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_161193416599100">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>OMAP5430</tag>
					<tag>OMAP5</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_14.projectspec">
					<filter.ref ref.id="filter_161193416599100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_OMAP5430_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP5430"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_3.projectspec">
					<filter.ref ref.id="filter_161193416599100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_OMAP5430_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP5430"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_4.projectspec">
					<filter.ref ref.id="filter_161193416599100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_OMAP5430_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP5430"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_5.projectspec">
					<filter.ref ref.id="filter_161193416599100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_OMAP5430_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP5430"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_6.projectspec">
					<filter.ref ref.id="filter_161193416599100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_OMAP5430_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP5430"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_7.projectspec">
					<filter.ref ref.id="filter_161193416599100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_OMAP5430_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP5430"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_8.projectspec">
					<filter.ref ref.id="filter_161193416599100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_OMAP5430_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP5430"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_9.projectspec">
					<filter.ref ref.id="filter_161193416599100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_OMAP5430_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP5430"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_11.projectspec">
					<filter.ref ref.id="filter_161193416599100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_OMAP5430_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP5430"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_12.projectspec">
					<filter.ref ref.id="filter_161193416599100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_OMAP5430_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP5430"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_13.projectspec">
					<filter.ref ref.id="filter_161193416599100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_OMAP5430_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP5430"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_10.projectspec">
					<filter.ref ref.id="filter_161193416599100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_OMAP5430_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP5430"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="OMAP5432" desc="OMAP5432" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_161193417159800">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>OMAP5432</tag>
					<tag>OMAP5</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_0.projectspec">
					<filter.ref ref.id="filter_161193417159800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_OMAP5432_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP5432"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_1.projectspec">
					<filter.ref ref.id="filter_161193417159800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_OMAP5432_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP5432"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_161193417242200">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>OMAP5432</tag>
					<tag>OMAP5</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_14.projectspec">
					<filter.ref ref.id="filter_161193417242200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_OMAP5432_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP5432"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_3.projectspec">
					<filter.ref ref.id="filter_161193417242200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_OMAP5432_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP5432"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_4.projectspec">
					<filter.ref ref.id="filter_161193417242200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_OMAP5432_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP5432"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_5.projectspec">
					<filter.ref ref.id="filter_161193417242200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_OMAP5432_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP5432"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_6.projectspec">
					<filter.ref ref.id="filter_161193417242200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_OMAP5432_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP5432"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_7.projectspec">
					<filter.ref ref.id="filter_161193417242200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_OMAP5432_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP5432"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_8.projectspec">
					<filter.ref ref.id="filter_161193417242200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_OMAP5432_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP5432"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_9.projectspec">
					<filter.ref ref.id="filter_161193417242200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_OMAP5432_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP5432"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_11.projectspec">
					<filter.ref ref.id="filter_161193417242200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_OMAP5432_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP5432"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_12.projectspec">
					<filter.ref ref.id="filter_161193417242200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_OMAP5432_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP5432"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_13.projectspec">
					<filter.ref ref.id="filter_161193417242200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_OMAP5432_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP5432"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_10.projectspec">
					<filter.ref ref.id="filter_161193417242200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_OMAP5432_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP5432"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="OMAP5432_UEVM" desc="OMAP5432_UEVM" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_161193417800000">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>OMAP5432_UEVM</tag>
					<tag>OMAP5</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_0.projectspec">
					<filter.ref ref.id="filter_161193417800000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_OMAP5432_UEVM_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP5432.OMAP5432_UEVM"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_1.projectspec">
					<filter.ref ref.id="filter_161193417800000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_OMAP5432_UEVM_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP5432.OMAP5432_UEVM"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_161193417884100">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>OMAP5432_UEVM</tag>
					<tag>OMAP5</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_14.projectspec">
					<filter.ref ref.id="filter_161193417884100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_OMAP5432_UEVM_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP5432.OMAP5432_UEVM"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_3.projectspec">
					<filter.ref ref.id="filter_161193417884100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_OMAP5432_UEVM_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP5432.OMAP5432_UEVM"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_4.projectspec">
					<filter.ref ref.id="filter_161193417884100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_OMAP5432_UEVM_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP5432.OMAP5432_UEVM"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_5.projectspec">
					<filter.ref ref.id="filter_161193417884100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_OMAP5432_UEVM_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP5432.OMAP5432_UEVM"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_6.projectspec">
					<filter.ref ref.id="filter_161193417884100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_OMAP5432_UEVM_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP5432.OMAP5432_UEVM"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_7.projectspec">
					<filter.ref ref.id="filter_161193417884100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_OMAP5432_UEVM_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP5432.OMAP5432_UEVM"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_8.projectspec">
					<filter.ref ref.id="filter_161193417884100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_OMAP5432_UEVM_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP5432.OMAP5432_UEVM"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_9.projectspec">
					<filter.ref ref.id="filter_161193417884100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_OMAP5432_UEVM_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP5432.OMAP5432_UEVM"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_11.projectspec">
					<filter.ref ref.id="filter_161193417884100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_OMAP5432_UEVM_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP5432.OMAP5432_UEVM"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_12.projectspec">
					<filter.ref ref.id="filter_161193417884100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_OMAP5432_UEVM_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP5432.OMAP5432_UEVM"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_13.projectspec">
					<filter.ref ref.id="filter_161193417884100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_OMAP5432_UEVM_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP5432.OMAP5432_UEVM"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_10.projectspec">
					<filter.ref ref.id="filter_161193417884100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_OMAP5432_UEVM_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP5432.OMAP5432_UEVM"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
		</contents>
		<contents name="TCI High Performance DSP" desc="TCI High Performance DSP" icon="plugin://icons/obj16/devices.png">
			<contents name="DSKTCI6482" desc="DSKTCI6482" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_161193418514900">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>DSKTCI6482</tag>
					<tag>TCI High Performance DSP</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_0.projectspec">
					<filter.ref ref.id="filter_161193418514900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_DSKTCI6482"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320TCI6482.DSKTCI6482"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_1.projectspec">
					<filter.ref ref.id="filter_161193418514900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_DSKTCI6482"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320TCI6482.DSKTCI6482"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_161193418599800">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>DSKTCI6482</tag>
					<tag>TCI High Performance DSP</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_14.projectspec">
					<filter.ref ref.id="filter_161193418599800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_DSKTCI6482"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320TCI6482.DSKTCI6482"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_3.projectspec">
					<filter.ref ref.id="filter_161193418599800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_DSKTCI6482"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320TCI6482.DSKTCI6482"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_4.projectspec">
					<filter.ref ref.id="filter_161193418599800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_DSKTCI6482"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320TCI6482.DSKTCI6482"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_5.projectspec">
					<filter.ref ref.id="filter_161193418599800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_DSKTCI6482"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320TCI6482.DSKTCI6482"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_6.projectspec">
					<filter.ref ref.id="filter_161193418599800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_DSKTCI6482"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320TCI6482.DSKTCI6482"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_7.projectspec">
					<filter.ref ref.id="filter_161193418599800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_DSKTCI6482"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320TCI6482.DSKTCI6482"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_8.projectspec">
					<filter.ref ref.id="filter_161193418599800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_DSKTCI6482"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320TCI6482.DSKTCI6482"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_9.projectspec">
					<filter.ref ref.id="filter_161193418599800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_DSKTCI6482"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320TCI6482.DSKTCI6482"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_11.projectspec">
					<filter.ref ref.id="filter_161193418599800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_DSKTCI6482"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320TCI6482.DSKTCI6482"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_12.projectspec">
					<filter.ref ref.id="filter_161193418599800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_DSKTCI6482"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320TCI6482.DSKTCI6482"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_13.projectspec">
					<filter.ref ref.id="filter_161193418599800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_DSKTCI6482"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320TCI6482.DSKTCI6482"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_10.projectspec">
					<filter.ref ref.id="filter_161193418599800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_DSKTCI6482"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320TCI6482.DSKTCI6482"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="EVMTCI6482 (TMS320TCI6482)" desc="EVMTCI6482 (TMS320TCI6482)" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_161193419887400">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>EVMTCI6482 (TMS320TCI6482)</tag>
					<tag>TCI High Performance DSP</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_0.projectspec">
					<filter.ref ref.id="filter_161193419887400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_EVMTCI6482_TMS320TCI6482"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320TCI6482.EVMTCI6482"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_1.projectspec">
					<filter.ref ref.id="filter_161193419887400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_EVMTCI6482_TMS320TCI6482"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320TCI6482.EVMTCI6482"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_161193419974500">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>EVMTCI6482 (TMS320TCI6482)</tag>
					<tag>TCI High Performance DSP</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_14.projectspec">
					<filter.ref ref.id="filter_161193419974500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_EVMTCI6482_TMS320TCI6482"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320TCI6482.EVMTCI6482"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_3.projectspec">
					<filter.ref ref.id="filter_161193419974500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_EVMTCI6482_TMS320TCI6482"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320TCI6482.EVMTCI6482"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_4.projectspec">
					<filter.ref ref.id="filter_161193419974500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_EVMTCI6482_TMS320TCI6482"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320TCI6482.EVMTCI6482"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_5.projectspec">
					<filter.ref ref.id="filter_161193419974500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_EVMTCI6482_TMS320TCI6482"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320TCI6482.EVMTCI6482"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_6.projectspec">
					<filter.ref ref.id="filter_161193419974500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_EVMTCI6482_TMS320TCI6482"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320TCI6482.EVMTCI6482"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_7.projectspec">
					<filter.ref ref.id="filter_161193419974500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_EVMTCI6482_TMS320TCI6482"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320TCI6482.EVMTCI6482"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_8.projectspec">
					<filter.ref ref.id="filter_161193419974500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_EVMTCI6482_TMS320TCI6482"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320TCI6482.EVMTCI6482"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_9.projectspec">
					<filter.ref ref.id="filter_161193419974500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_EVMTCI6482_TMS320TCI6482"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320TCI6482.EVMTCI6482"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_11.projectspec">
					<filter.ref ref.id="filter_161193419974500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_EVMTCI6482_TMS320TCI6482"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320TCI6482.EVMTCI6482"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_12.projectspec">
					<filter.ref ref.id="filter_161193419974500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_EVMTCI6482_TMS320TCI6482"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320TCI6482.EVMTCI6482"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_13.projectspec">
					<filter.ref ref.id="filter_161193419974500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_EVMTCI6482_TMS320TCI6482"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320TCI6482.EVMTCI6482"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_10.projectspec">
					<filter.ref ref.id="filter_161193419974500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_EVMTCI6482_TMS320TCI6482"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320TCI6482.EVMTCI6482"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="TMS320TCI6482" desc="TMS320TCI6482" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_161193420551000">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>TMS320TCI6482</tag>
					<tag>TCI High Performance DSP</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_0.projectspec">
					<filter.ref ref.id="filter_161193420551000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_TMS320TCI6482"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320TCI6482"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_1.projectspec">
					<filter.ref ref.id="filter_161193420551000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_TMS320TCI6482"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320TCI6482"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_161193420631900">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>TMS320TCI6482</tag>
					<tag>TCI High Performance DSP</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_14.projectspec">
					<filter.ref ref.id="filter_161193420631900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_TMS320TCI6482"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320TCI6482"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_3.projectspec">
					<filter.ref ref.id="filter_161193420631900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_TMS320TCI6482"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320TCI6482"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_4.projectspec">
					<filter.ref ref.id="filter_161193420631900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_TMS320TCI6482"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320TCI6482"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_5.projectspec">
					<filter.ref ref.id="filter_161193420631900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_TMS320TCI6482"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320TCI6482"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_6.projectspec">
					<filter.ref ref.id="filter_161193420631900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_TMS320TCI6482"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320TCI6482"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_7.projectspec">
					<filter.ref ref.id="filter_161193420631900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_TMS320TCI6482"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320TCI6482"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_8.projectspec">
					<filter.ref ref.id="filter_161193420631900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_TMS320TCI6482"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320TCI6482"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_9.projectspec">
					<filter.ref ref.id="filter_161193420631900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_TMS320TCI6482"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320TCI6482"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_11.projectspec">
					<filter.ref ref.id="filter_161193420631900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_TMS320TCI6482"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320TCI6482"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_12.projectspec">
					<filter.ref ref.id="filter_161193420631900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_TMS320TCI6482"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320TCI6482"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_13.projectspec">
					<filter.ref ref.id="filter_161193420631900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_TMS320TCI6482"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320TCI6482"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_10.projectspec">
					<filter.ref ref.id="filter_161193420631900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_TMS320TCI6482"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320TCI6482"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="TMS320TCI6484" desc="TMS320TCI6484" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_161193421186300">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>TMS320TCI6484</tag>
					<tag>TCI High Performance DSP</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_0.projectspec">
					<filter.ref ref.id="filter_161193421186300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_TMS320TCI6484"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320TCI6484"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_1.projectspec">
					<filter.ref ref.id="filter_161193421186300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_TMS320TCI6484"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320TCI6484"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_161193421268500">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>TMS320TCI6484</tag>
					<tag>TCI High Performance DSP</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_14.projectspec">
					<filter.ref ref.id="filter_161193421268500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_TMS320TCI6484"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320TCI6484"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_3.projectspec">
					<filter.ref ref.id="filter_161193421268500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_TMS320TCI6484"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320TCI6484"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_4.projectspec">
					<filter.ref ref.id="filter_161193421268500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_TMS320TCI6484"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320TCI6484"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_5.projectspec">
					<filter.ref ref.id="filter_161193421268500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_TMS320TCI6484"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320TCI6484"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_6.projectspec">
					<filter.ref ref.id="filter_161193421268500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_TMS320TCI6484"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320TCI6484"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_7.projectspec">
					<filter.ref ref.id="filter_161193421268500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_TMS320TCI6484"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320TCI6484"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_8.projectspec">
					<filter.ref ref.id="filter_161193421268500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_TMS320TCI6484"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320TCI6484"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_9.projectspec">
					<filter.ref ref.id="filter_161193421268500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_TMS320TCI6484"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320TCI6484"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_11.projectspec">
					<filter.ref ref.id="filter_161193421268500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_TMS320TCI6484"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320TCI6484"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_12.projectspec">
					<filter.ref ref.id="filter_161193421268500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_TMS320TCI6484"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320TCI6484"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_13.projectspec">
					<filter.ref ref.id="filter_161193421268500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_TMS320TCI6484"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320TCI6484"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_10.projectspec">
					<filter.ref ref.id="filter_161193421268500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_TMS320TCI6484"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320TCI6484"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
		</contents>
		<contents name="TMS320C64XX" desc="TMS320C64XX" icon="plugin://icons/obj16/devices.png">
			<contents name="EVMC6424" desc="EVMC6424" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_161193421889700">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>EVMC6424</tag>
					<tag>TMS320C64XX</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_0.projectspec">
					<filter.ref ref.id="filter_161193421889700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_EVMC6424"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6424.EVMC6424"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_1.projectspec">
					<filter.ref ref.id="filter_161193421889700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_EVMC6424"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6424.EVMC6424"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_161193421975100">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>EVMC6424</tag>
					<tag>TMS320C64XX</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_14.projectspec">
					<filter.ref ref.id="filter_161193421975100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_EVMC6424"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6424.EVMC6424"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_3.projectspec">
					<filter.ref ref.id="filter_161193421975100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_EVMC6424"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6424.EVMC6424"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_4.projectspec">
					<filter.ref ref.id="filter_161193421975100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_EVMC6424"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6424.EVMC6424"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_5.projectspec">
					<filter.ref ref.id="filter_161193421975100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_EVMC6424"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6424.EVMC6424"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_6.projectspec">
					<filter.ref ref.id="filter_161193421975100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_EVMC6424"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6424.EVMC6424"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_7.projectspec">
					<filter.ref ref.id="filter_161193421975100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_EVMC6424"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6424.EVMC6424"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_8.projectspec">
					<filter.ref ref.id="filter_161193421975100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_EVMC6424"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6424.EVMC6424"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_9.projectspec">
					<filter.ref ref.id="filter_161193421975100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_EVMC6424"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6424.EVMC6424"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_11.projectspec">
					<filter.ref ref.id="filter_161193421975100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_EVMC6424"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6424.EVMC6424"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_12.projectspec">
					<filter.ref ref.id="filter_161193421975100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_EVMC6424"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6424.EVMC6424"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_13.projectspec">
					<filter.ref ref.id="filter_161193421975100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_EVMC6424"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6424.EVMC6424"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_10.projectspec">
					<filter.ref ref.id="filter_161193421975100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_EVMC6424"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6424.EVMC6424"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="EVMC6474" desc="EVMC6474" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_161193423601200">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>EVMC6474</tag>
					<tag>TMS320C64XX</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_0.projectspec">
					<filter.ref ref.id="filter_161193423601200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_EVMC6474"/>
							<attribute key="device.variant" value="TMS320C64XX.EVMC6474"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_1.projectspec">
					<filter.ref ref.id="filter_161193423601200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_EVMC6474"/>
							<attribute key="device.variant" value="TMS320C64XX.EVMC6474"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_161193423686500">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>EVMC6474</tag>
					<tag>TMS320C64XX</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_14.projectspec">
					<filter.ref ref.id="filter_161193423686500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_EVMC6474"/>
							<attribute key="device.variant" value="TMS320C64XX.EVMC6474"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_3.projectspec">
					<filter.ref ref.id="filter_161193423686500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_EVMC6474"/>
							<attribute key="device.variant" value="TMS320C64XX.EVMC6474"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_4.projectspec">
					<filter.ref ref.id="filter_161193423686500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_EVMC6474"/>
							<attribute key="device.variant" value="TMS320C64XX.EVMC6474"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_5.projectspec">
					<filter.ref ref.id="filter_161193423686500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_EVMC6474"/>
							<attribute key="device.variant" value="TMS320C64XX.EVMC6474"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_6.projectspec">
					<filter.ref ref.id="filter_161193423686500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_EVMC6474"/>
							<attribute key="device.variant" value="TMS320C64XX.EVMC6474"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_7.projectspec">
					<filter.ref ref.id="filter_161193423686500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_EVMC6474"/>
							<attribute key="device.variant" value="TMS320C64XX.EVMC6474"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_8.projectspec">
					<filter.ref ref.id="filter_161193423686500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_EVMC6474"/>
							<attribute key="device.variant" value="TMS320C64XX.EVMC6474"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_9.projectspec">
					<filter.ref ref.id="filter_161193423686500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_EVMC6474"/>
							<attribute key="device.variant" value="TMS320C64XX.EVMC6474"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_11.projectspec">
					<filter.ref ref.id="filter_161193423686500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_EVMC6474"/>
							<attribute key="device.variant" value="TMS320C64XX.EVMC6474"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_12.projectspec">
					<filter.ref ref.id="filter_161193423686500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_EVMC6474"/>
							<attribute key="device.variant" value="TMS320C64XX.EVMC6474"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_13.projectspec">
					<filter.ref ref.id="filter_161193423686500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_EVMC6474"/>
							<attribute key="device.variant" value="TMS320C64XX.EVMC6474"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_10.projectspec">
					<filter.ref ref.id="filter_161193423686500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_EVMC6474"/>
							<attribute key="device.variant" value="TMS320C64XX.EVMC6474"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="EVMTCI6488" desc="EVMTCI6488" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_161193424523400">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>EVMTCI6488</tag>
					<tag>TMS320C64XX</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_0.projectspec">
					<filter.ref ref.id="filter_161193424523400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_EVMTCI6488"/>
							<attribute key="device.variant" value="TMS320C64XX.EVMTCI6488"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_1.projectspec">
					<filter.ref ref.id="filter_161193424523400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_EVMTCI6488"/>
							<attribute key="device.variant" value="TMS320C64XX.EVMTCI6488"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_161193424662500">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>EVMTCI6488</tag>
					<tag>TMS320C64XX</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_14.projectspec">
					<filter.ref ref.id="filter_161193424662500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_EVMTCI6488"/>
							<attribute key="device.variant" value="TMS320C64XX.EVMTCI6488"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_3.projectspec">
					<filter.ref ref.id="filter_161193424662500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_EVMTCI6488"/>
							<attribute key="device.variant" value="TMS320C64XX.EVMTCI6488"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_4.projectspec">
					<filter.ref ref.id="filter_161193424662500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_EVMTCI6488"/>
							<attribute key="device.variant" value="TMS320C64XX.EVMTCI6488"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_5.projectspec">
					<filter.ref ref.id="filter_161193424662500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_EVMTCI6488"/>
							<attribute key="device.variant" value="TMS320C64XX.EVMTCI6488"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_6.projectspec">
					<filter.ref ref.id="filter_161193424662500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_EVMTCI6488"/>
							<attribute key="device.variant" value="TMS320C64XX.EVMTCI6488"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_7.projectspec">
					<filter.ref ref.id="filter_161193424662500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_EVMTCI6488"/>
							<attribute key="device.variant" value="TMS320C64XX.EVMTCI6488"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_8.projectspec">
					<filter.ref ref.id="filter_161193424662500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_EVMTCI6488"/>
							<attribute key="device.variant" value="TMS320C64XX.EVMTCI6488"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_9.projectspec">
					<filter.ref ref.id="filter_161193424662500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_EVMTCI6488"/>
							<attribute key="device.variant" value="TMS320C64XX.EVMTCI6488"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_11.projectspec">
					<filter.ref ref.id="filter_161193424662500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_EVMTCI6488"/>
							<attribute key="device.variant" value="TMS320C64XX.EVMTCI6488"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_12.projectspec">
					<filter.ref ref.id="filter_161193424662500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_EVMTCI6488"/>
							<attribute key="device.variant" value="TMS320C64XX.EVMTCI6488"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_13.projectspec">
					<filter.ref ref.id="filter_161193424662500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_EVMTCI6488"/>
							<attribute key="device.variant" value="TMS320C64XX.EVMTCI6488"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_10.projectspec">
					<filter.ref ref.id="filter_161193424662500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_EVMTCI6488"/>
							<attribute key="device.variant" value="TMS320C64XX.EVMTCI6488"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="OMAP4430 (no STM, ETB only)" desc="OMAP4430 (no STM, ETB only)" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_161193425265300">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>OMAP4430 (no STM, ETB only)</tag>
					<tag>TMS320C64XX</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_0.projectspec">
					<filter.ref ref.id="filter_161193425265300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_OMAP4430_noSTM_ETBOnly_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP4430"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_1.projectspec">
					<filter.ref ref.id="filter_161193425265300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_OMAP4430_noSTM_ETBOnly_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP4430"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_161193425352200">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>OMAP4430 (no STM, ETB only)</tag>
					<tag>TMS320C64XX</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_14.projectspec">
					<filter.ref ref.id="filter_161193425352200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_OMAP4430_noSTM_ETBOnly_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP4430"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_3.projectspec">
					<filter.ref ref.id="filter_161193425352200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_OMAP4430_noSTM_ETBOnly_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP4430"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_4.projectspec">
					<filter.ref ref.id="filter_161193425352200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_OMAP4430_noSTM_ETBOnly_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP4430"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_5.projectspec">
					<filter.ref ref.id="filter_161193425352200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_OMAP4430_noSTM_ETBOnly_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP4430"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_6.projectspec">
					<filter.ref ref.id="filter_161193425352200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_OMAP4430_noSTM_ETBOnly_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP4430"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_7.projectspec">
					<filter.ref ref.id="filter_161193425352200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_OMAP4430_noSTM_ETBOnly_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP4430"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_8.projectspec">
					<filter.ref ref.id="filter_161193425352200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_OMAP4430_noSTM_ETBOnly_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP4430"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_9.projectspec">
					<filter.ref ref.id="filter_161193425352200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_OMAP4430_noSTM_ETBOnly_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP4430"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_11.projectspec">
					<filter.ref ref.id="filter_161193425352200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_OMAP4430_noSTM_ETBOnly_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP4430"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_12.projectspec">
					<filter.ref ref.id="filter_161193425352200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_OMAP4430_noSTM_ETBOnly_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP4430"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_13.projectspec">
					<filter.ref ref.id="filter_161193425352200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_OMAP4430_noSTM_ETBOnly_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP4430"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_10.projectspec">
					<filter.ref ref.id="filter_161193425352200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_OMAP4430_noSTM_ETBOnly_TMS320C64XX"/>
							<attribute key="device.variant" value="TMS320C64XX.OMAP4430"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="TMS320C6421" desc="TMS320C6421" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_161193425938000">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>TMS320C6421</tag>
					<tag>TMS320C64XX</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_0.projectspec">
					<filter.ref ref.id="filter_161193425938000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_TMS320C6421"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6421"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_1.projectspec">
					<filter.ref ref.id="filter_161193425938000"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_TMS320C6421"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6421"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_161193426019800">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>TMS320C6421</tag>
					<tag>TMS320C64XX</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_14.projectspec">
					<filter.ref ref.id="filter_161193426019800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_TMS320C6421"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6421"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_3.projectspec">
					<filter.ref ref.id="filter_161193426019800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_TMS320C6421"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6421"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_4.projectspec">
					<filter.ref ref.id="filter_161193426019800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_TMS320C6421"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6421"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_5.projectspec">
					<filter.ref ref.id="filter_161193426019800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_TMS320C6421"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6421"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_6.projectspec">
					<filter.ref ref.id="filter_161193426019800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_TMS320C6421"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6421"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_7.projectspec">
					<filter.ref ref.id="filter_161193426019800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_TMS320C6421"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6421"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_8.projectspec">
					<filter.ref ref.id="filter_161193426019800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_TMS320C6421"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6421"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_9.projectspec">
					<filter.ref ref.id="filter_161193426019800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_TMS320C6421"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6421"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_11.projectspec">
					<filter.ref ref.id="filter_161193426019800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_TMS320C6421"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6421"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_12.projectspec">
					<filter.ref ref.id="filter_161193426019800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_TMS320C6421"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6421"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_13.projectspec">
					<filter.ref ref.id="filter_161193426019800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_TMS320C6421"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6421"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_10.projectspec">
					<filter.ref ref.id="filter_161193426019800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_TMS320C6421"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6421"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="TMS320C6424" desc="TMS320C6424" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_161193426651200">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>TMS320C6424</tag>
					<tag>TMS320C64XX</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_0.projectspec">
					<filter.ref ref.id="filter_161193426651200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_TMS320C6424"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6424"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_1.projectspec">
					<filter.ref ref.id="filter_161193426651200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_TMS320C6424"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6424"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_161193427700500">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>TMS320C6424</tag>
					<tag>TMS320C64XX</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_14.projectspec">
					<filter.ref ref.id="filter_161193427700500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_TMS320C6424"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6424"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_3.projectspec">
					<filter.ref ref.id="filter_161193427700500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_TMS320C6424"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6424"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_4.projectspec">
					<filter.ref ref.id="filter_161193427700500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_TMS320C6424"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6424"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_5.projectspec">
					<filter.ref ref.id="filter_161193427700500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_TMS320C6424"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6424"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_6.projectspec">
					<filter.ref ref.id="filter_161193427700500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_TMS320C6424"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6424"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_7.projectspec">
					<filter.ref ref.id="filter_161193427700500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_TMS320C6424"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6424"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_8.projectspec">
					<filter.ref ref.id="filter_161193427700500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_TMS320C6424"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6424"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_9.projectspec">
					<filter.ref ref.id="filter_161193427700500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_TMS320C6424"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6424"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_11.projectspec">
					<filter.ref ref.id="filter_161193427700500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_TMS320C6424"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6424"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_12.projectspec">
					<filter.ref ref.id="filter_161193427700500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_TMS320C6424"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6424"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_13.projectspec">
					<filter.ref ref.id="filter_161193427700500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_TMS320C6424"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6424"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_10.projectspec">
					<filter.ref ref.id="filter_161193427700500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_TMS320C6424"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6424"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
		</contents>
		<contents name="TMS320C66XX" desc="TMS320C66XX" icon="plugin://icons/obj16/devices.png">
			<contents name="66AK2H06" desc="66AK2H06" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_161193542061700">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>66AK2H06</tag>
					<tag>TMS320C66XX</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_0.projectspec">
					<filter.ref ref.id="filter_161193542061700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_66AK2H06"/>
							<attribute key="device.variant" value="TMS320C66XX.66AK2H06"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_1.projectspec">
					<filter.ref ref.id="filter_161193542061700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_66AK2H06"/>
							<attribute key="device.variant" value="TMS320C66XX.66AK2H06"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_161193542189100">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>66AK2H06</tag>
					<tag>TMS320C66XX</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_14.projectspec">
					<filter.ref ref.id="filter_161193542189100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_66AK2H06"/>
							<attribute key="device.variant" value="TMS320C66XX.66AK2H06"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_3.projectspec">
					<filter.ref ref.id="filter_161193542189100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_66AK2H06"/>
							<attribute key="device.variant" value="TMS320C66XX.66AK2H06"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_4.projectspec">
					<filter.ref ref.id="filter_161193542189100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_66AK2H06"/>
							<attribute key="device.variant" value="TMS320C66XX.66AK2H06"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_5.projectspec">
					<filter.ref ref.id="filter_161193542189100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_66AK2H06"/>
							<attribute key="device.variant" value="TMS320C66XX.66AK2H06"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_6.projectspec">
					<filter.ref ref.id="filter_161193542189100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_66AK2H06"/>
							<attribute key="device.variant" value="TMS320C66XX.66AK2H06"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_7.projectspec">
					<filter.ref ref.id="filter_161193542189100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_66AK2H06"/>
							<attribute key="device.variant" value="TMS320C66XX.66AK2H06"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_8.projectspec">
					<filter.ref ref.id="filter_161193542189100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_66AK2H06"/>
							<attribute key="device.variant" value="TMS320C66XX.66AK2H06"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_9.projectspec">
					<filter.ref ref.id="filter_161193542189100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_66AK2H06"/>
							<attribute key="device.variant" value="TMS320C66XX.66AK2H06"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_11.projectspec">
					<filter.ref ref.id="filter_161193542189100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_66AK2H06"/>
							<attribute key="device.variant" value="TMS320C66XX.66AK2H06"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_12.projectspec">
					<filter.ref ref.id="filter_161193542189100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_66AK2H06"/>
							<attribute key="device.variant" value="TMS320C66XX.66AK2H06"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_13.projectspec">
					<filter.ref ref.id="filter_161193542189100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_66AK2H06"/>
							<attribute key="device.variant" value="TMS320C66XX.66AK2H06"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_10.projectspec">
					<filter.ref ref.id="filter_161193542189100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_66AK2H06"/>
							<attribute key="device.variant" value="TMS320C66XX.66AK2H06"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="66AK2H12" desc="66AK2H12" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_161193542869500">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>66AK2H12</tag>
					<tag>TMS320C66XX</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_0.projectspec">
					<filter.ref ref.id="filter_161193542869500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_66AK2H12"/>
							<attribute key="device.variant" value="TMS320C66XX.66AK2H12"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_1.projectspec">
					<filter.ref ref.id="filter_161193542869500"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_66AK2H12"/>
							<attribute key="device.variant" value="TMS320C66XX.66AK2H12"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_161193542955800">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>66AK2H12</tag>
					<tag>TMS320C66XX</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_14.projectspec">
					<filter.ref ref.id="filter_161193542955800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_66AK2H12"/>
							<attribute key="device.variant" value="TMS320C66XX.66AK2H12"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_3.projectspec">
					<filter.ref ref.id="filter_161193542955800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_66AK2H12"/>
							<attribute key="device.variant" value="TMS320C66XX.66AK2H12"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_4.projectspec">
					<filter.ref ref.id="filter_161193542955800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_66AK2H12"/>
							<attribute key="device.variant" value="TMS320C66XX.66AK2H12"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_5.projectspec">
					<filter.ref ref.id="filter_161193542955800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_66AK2H12"/>
							<attribute key="device.variant" value="TMS320C66XX.66AK2H12"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_6.projectspec">
					<filter.ref ref.id="filter_161193542955800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_66AK2H12"/>
							<attribute key="device.variant" value="TMS320C66XX.66AK2H12"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_7.projectspec">
					<filter.ref ref.id="filter_161193542955800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_66AK2H12"/>
							<attribute key="device.variant" value="TMS320C66XX.66AK2H12"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_8.projectspec">
					<filter.ref ref.id="filter_161193542955800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_66AK2H12"/>
							<attribute key="device.variant" value="TMS320C66XX.66AK2H12"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_9.projectspec">
					<filter.ref ref.id="filter_161193542955800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_66AK2H12"/>
							<attribute key="device.variant" value="TMS320C66XX.66AK2H12"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_11.projectspec">
					<filter.ref ref.id="filter_161193542955800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_66AK2H12"/>
							<attribute key="device.variant" value="TMS320C66XX.66AK2H12"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_12.projectspec">
					<filter.ref ref.id="filter_161193542955800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_66AK2H12"/>
							<attribute key="device.variant" value="TMS320C66XX.66AK2H12"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_13.projectspec">
					<filter.ref ref.id="filter_161193542955800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_66AK2H12"/>
							<attribute key="device.variant" value="TMS320C66XX.66AK2H12"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_10.projectspec">
					<filter.ref ref.id="filter_161193542955800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_66AK2H12"/>
							<attribute key="device.variant" value="TMS320C66XX.66AK2H12"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="TCI6634K2K" desc="TCI6634K2K" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_161193543579300">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>TCI6634K2K</tag>
					<tag>TMS320C66XX</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_0.projectspec">
					<filter.ref ref.id="filter_161193543579300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_TCI6634K2K"/>
							<attribute key="device.variant" value="TMS320C66XX.TCI6634K2K"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_1.projectspec">
					<filter.ref ref.id="filter_161193543579300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_TCI6634K2K"/>
							<attribute key="device.variant" value="TMS320C66XX.TCI6634K2K"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_161193543672600">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>TCI6634K2K</tag>
					<tag>TMS320C66XX</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_14.projectspec">
					<filter.ref ref.id="filter_161193543672600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_TCI6634K2K"/>
							<attribute key="device.variant" value="TMS320C66XX.TCI6634K2K"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_3.projectspec">
					<filter.ref ref.id="filter_161193543672600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_TCI6634K2K"/>
							<attribute key="device.variant" value="TMS320C66XX.TCI6634K2K"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_4.projectspec">
					<filter.ref ref.id="filter_161193543672600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_TCI6634K2K"/>
							<attribute key="device.variant" value="TMS320C66XX.TCI6634K2K"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_5.projectspec">
					<filter.ref ref.id="filter_161193543672600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_TCI6634K2K"/>
							<attribute key="device.variant" value="TMS320C66XX.TCI6634K2K"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_6.projectspec">
					<filter.ref ref.id="filter_161193543672600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_TCI6634K2K"/>
							<attribute key="device.variant" value="TMS320C66XX.TCI6634K2K"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_7.projectspec">
					<filter.ref ref.id="filter_161193543672600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_TCI6634K2K"/>
							<attribute key="device.variant" value="TMS320C66XX.TCI6634K2K"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_8.projectspec">
					<filter.ref ref.id="filter_161193543672600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_TCI6634K2K"/>
							<attribute key="device.variant" value="TMS320C66XX.TCI6634K2K"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_9.projectspec">
					<filter.ref ref.id="filter_161193543672600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_TCI6634K2K"/>
							<attribute key="device.variant" value="TMS320C66XX.TCI6634K2K"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_11.projectspec">
					<filter.ref ref.id="filter_161193543672600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_TCI6634K2K"/>
							<attribute key="device.variant" value="TMS320C66XX.TCI6634K2K"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_12.projectspec">
					<filter.ref ref.id="filter_161193543672600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_TCI6634K2K"/>
							<attribute key="device.variant" value="TMS320C66XX.TCI6634K2K"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_13.projectspec">
					<filter.ref ref.id="filter_161193543672600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_TCI6634K2K"/>
							<attribute key="device.variant" value="TMS320C66XX.TCI6634K2K"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_10.projectspec">
					<filter.ref ref.id="filter_161193543672600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_TCI6634K2K"/>
							<attribute key="device.variant" value="TMS320C66XX.TCI6634K2K"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="TCI6636K2H" desc="TCI6636K2H" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_161193544301100">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>TCI6636K2H</tag>
					<tag>TMS320C66XX</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_0.projectspec">
					<filter.ref ref.id="filter_161193544301100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_TCI6636K2H"/>
							<attribute key="device.variant" value="TMS320C66XX.TCI6636K2H"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_1.projectspec">
					<filter.ref ref.id="filter_161193544301100"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_TCI6636K2H"/>
							<attribute key="device.variant" value="TMS320C66XX.TCI6636K2H"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_161193544387300">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>TCI6636K2H</tag>
					<tag>TMS320C66XX</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_14.projectspec">
					<filter.ref ref.id="filter_161193544387300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_TCI6636K2H"/>
							<attribute key="device.variant" value="TMS320C66XX.TCI6636K2H"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_3.projectspec">
					<filter.ref ref.id="filter_161193544387300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_TCI6636K2H"/>
							<attribute key="device.variant" value="TMS320C66XX.TCI6636K2H"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_4.projectspec">
					<filter.ref ref.id="filter_161193544387300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_TCI6636K2H"/>
							<attribute key="device.variant" value="TMS320C66XX.TCI6636K2H"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_5.projectspec">
					<filter.ref ref.id="filter_161193544387300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_TCI6636K2H"/>
							<attribute key="device.variant" value="TMS320C66XX.TCI6636K2H"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_6.projectspec">
					<filter.ref ref.id="filter_161193544387300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_TCI6636K2H"/>
							<attribute key="device.variant" value="TMS320C66XX.TCI6636K2H"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_7.projectspec">
					<filter.ref ref.id="filter_161193544387300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_TCI6636K2H"/>
							<attribute key="device.variant" value="TMS320C66XX.TCI6636K2H"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_8.projectspec">
					<filter.ref ref.id="filter_161193544387300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_TCI6636K2H"/>
							<attribute key="device.variant" value="TMS320C66XX.TCI6636K2H"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_9.projectspec">
					<filter.ref ref.id="filter_161193544387300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_TCI6636K2H"/>
							<attribute key="device.variant" value="TMS320C66XX.TCI6636K2H"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_11.projectspec">
					<filter.ref ref.id="filter_161193544387300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_TCI6636K2H"/>
							<attribute key="device.variant" value="TMS320C66XX.TCI6636K2H"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_12.projectspec">
					<filter.ref ref.id="filter_161193544387300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_TCI6636K2H"/>
							<attribute key="device.variant" value="TMS320C66XX.TCI6636K2H"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_13.projectspec">
					<filter.ref ref.id="filter_161193544387300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_TCI6636K2H"/>
							<attribute key="device.variant" value="TMS320C66XX.TCI6636K2H"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_10.projectspec">
					<filter.ref ref.id="filter_161193544387300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_TCI6636K2H"/>
							<attribute key="device.variant" value="TMS320C66XX.TCI6636K2H"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="TCI6638K2K" desc="TCI6638K2K" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_161193544977200">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>TCI6638K2K</tag>
					<tag>TMS320C66XX</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_0.projectspec">
					<filter.ref ref.id="filter_161193544977200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_TCI6638K2K"/>
							<attribute key="device.variant" value="TMS320C66XX.TCI6638K2K"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_1.projectspec">
					<filter.ref ref.id="filter_161193544977200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_TCI6638K2K"/>
							<attribute key="device.variant" value="TMS320C66XX.TCI6638K2K"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_161193545066800">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>TCI6638K2K</tag>
					<tag>TMS320C66XX</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_14.projectspec">
					<filter.ref ref.id="filter_161193545066800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_TCI6638K2K"/>
							<attribute key="device.variant" value="TMS320C66XX.TCI6638K2K"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_3.projectspec">
					<filter.ref ref.id="filter_161193545066800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_TCI6638K2K"/>
							<attribute key="device.variant" value="TMS320C66XX.TCI6638K2K"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_4.projectspec">
					<filter.ref ref.id="filter_161193545066800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_TCI6638K2K"/>
							<attribute key="device.variant" value="TMS320C66XX.TCI6638K2K"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_5.projectspec">
					<filter.ref ref.id="filter_161193545066800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_TCI6638K2K"/>
							<attribute key="device.variant" value="TMS320C66XX.TCI6638K2K"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_6.projectspec">
					<filter.ref ref.id="filter_161193545066800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_TCI6638K2K"/>
							<attribute key="device.variant" value="TMS320C66XX.TCI6638K2K"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_7.projectspec">
					<filter.ref ref.id="filter_161193545066800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_TCI6638K2K"/>
							<attribute key="device.variant" value="TMS320C66XX.TCI6638K2K"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_8.projectspec">
					<filter.ref ref.id="filter_161193545066800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_TCI6638K2K"/>
							<attribute key="device.variant" value="TMS320C66XX.TCI6638K2K"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_9.projectspec">
					<filter.ref ref.id="filter_161193545066800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_TCI6638K2K"/>
							<attribute key="device.variant" value="TMS320C66XX.TCI6638K2K"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_11.projectspec">
					<filter.ref ref.id="filter_161193545066800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_TCI6638K2K"/>
							<attribute key="device.variant" value="TMS320C66XX.TCI6638K2K"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_12.projectspec">
					<filter.ref ref.id="filter_161193545066800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_TCI6638K2K"/>
							<attribute key="device.variant" value="TMS320C66XX.TCI6638K2K"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_13.projectspec">
					<filter.ref ref.id="filter_161193545066800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_TCI6638K2K"/>
							<attribute key="device.variant" value="TMS320C66XX.TCI6638K2K"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_10.projectspec">
					<filter.ref ref.id="filter_161193545066800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_TCI6638K2K"/>
							<attribute key="device.variant" value="TMS320C66XX.TCI6638K2K"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
		</contents>
		<contents name="TMS320C67XX" desc="TMS320C67XX" icon="plugin://icons/obj16/devices.png">
			<contents name="DA804/DA803/DA802" desc="DA804/DA803/DA802" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_161193546931600">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>DA804/DA803/DA802</tag>
					<tag>TMS320C67XX</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_0.projectspec">
					<filter.ref ref.id="filter_161193546931600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_DA804DA803DA802"/>
							<attribute key="device.variant" value="TMS320C67XX.DA804/DA803/DA802"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_1.projectspec">
					<filter.ref ref.id="filter_161193546931600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_DA804DA803DA802"/>
							<attribute key="device.variant" value="TMS320C67XX.DA804/DA803/DA802"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_161193547019700">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>DA804/DA803/DA802</tag>
					<tag>TMS320C67XX</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_14.projectspec">
					<filter.ref ref.id="filter_161193547019700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_DA804DA803DA802"/>
							<attribute key="device.variant" value="TMS320C67XX.DA804/DA803/DA802"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_3.projectspec">
					<filter.ref ref.id="filter_161193547019700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_DA804DA803DA802"/>
							<attribute key="device.variant" value="TMS320C67XX.DA804/DA803/DA802"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_4.projectspec">
					<filter.ref ref.id="filter_161193547019700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_DA804DA803DA802"/>
							<attribute key="device.variant" value="TMS320C67XX.DA804/DA803/DA802"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_5.projectspec">
					<filter.ref ref.id="filter_161193547019700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_DA804DA803DA802"/>
							<attribute key="device.variant" value="TMS320C67XX.DA804/DA803/DA802"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_6.projectspec">
					<filter.ref ref.id="filter_161193547019700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_DA804DA803DA802"/>
							<attribute key="device.variant" value="TMS320C67XX.DA804/DA803/DA802"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_7.projectspec">
					<filter.ref ref.id="filter_161193547019700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_DA804DA803DA802"/>
							<attribute key="device.variant" value="TMS320C67XX.DA804/DA803/DA802"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_8.projectspec">
					<filter.ref ref.id="filter_161193547019700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_DA804DA803DA802"/>
							<attribute key="device.variant" value="TMS320C67XX.DA804/DA803/DA802"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_9.projectspec">
					<filter.ref ref.id="filter_161193547019700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_DA804DA803DA802"/>
							<attribute key="device.variant" value="TMS320C67XX.DA804/DA803/DA802"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_11.projectspec">
					<filter.ref ref.id="filter_161193547019700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_DA804DA803DA802"/>
							<attribute key="device.variant" value="TMS320C67XX.DA804/DA803/DA802"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_12.projectspec">
					<filter.ref ref.id="filter_161193547019700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_DA804DA803DA802"/>
							<attribute key="device.variant" value="TMS320C67XX.DA804/DA803/DA802"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_13.projectspec">
					<filter.ref ref.id="filter_161193547019700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_DA804DA803DA802"/>
							<attribute key="device.variant" value="TMS320C67XX.DA804/DA803/DA802"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_10.projectspec">
					<filter.ref ref.id="filter_161193547019700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_DA804DA803DA802"/>
							<attribute key="device.variant" value="TMS320C67XX.DA804/DA803/DA802"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="DA810/DA80x" desc="DA810/DA80x" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_161193547599300">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>DA810/DA80x</tag>
					<tag>TMS320C67XX</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_0.projectspec">
					<filter.ref ref.id="filter_161193547599300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_DA810DA80x"/>
							<attribute key="device.variant" value="TMS320C67XX.DA810/DA80x"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_1.projectspec">
					<filter.ref ref.id="filter_161193547599300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_DA810DA80x"/>
							<attribute key="device.variant" value="TMS320C67XX.DA810/DA80x"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_161193547683800">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>DA810/DA80x</tag>
					<tag>TMS320C67XX</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_14.projectspec">
					<filter.ref ref.id="filter_161193547683800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_DA810DA80x"/>
							<attribute key="device.variant" value="TMS320C67XX.DA810/DA80x"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_3.projectspec">
					<filter.ref ref.id="filter_161193547683800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_DA810DA80x"/>
							<attribute key="device.variant" value="TMS320C67XX.DA810/DA80x"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_4.projectspec">
					<filter.ref ref.id="filter_161193547683800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_DA810DA80x"/>
							<attribute key="device.variant" value="TMS320C67XX.DA810/DA80x"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_5.projectspec">
					<filter.ref ref.id="filter_161193547683800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_DA810DA80x"/>
							<attribute key="device.variant" value="TMS320C67XX.DA810/DA80x"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_6.projectspec">
					<filter.ref ref.id="filter_161193547683800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_DA810DA80x"/>
							<attribute key="device.variant" value="TMS320C67XX.DA810/DA80x"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_7.projectspec">
					<filter.ref ref.id="filter_161193547683800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_DA810DA80x"/>
							<attribute key="device.variant" value="TMS320C67XX.DA810/DA80x"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_8.projectspec">
					<filter.ref ref.id="filter_161193547683800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_DA810DA80x"/>
							<attribute key="device.variant" value="TMS320C67XX.DA810/DA80x"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_9.projectspec">
					<filter.ref ref.id="filter_161193547683800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_DA810DA80x"/>
							<attribute key="device.variant" value="TMS320C67XX.DA810/DA80x"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_11.projectspec">
					<filter.ref ref.id="filter_161193547683800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_DA810DA80x"/>
							<attribute key="device.variant" value="TMS320C67XX.DA810/DA80x"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_12.projectspec">
					<filter.ref ref.id="filter_161193547683800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_DA810DA80x"/>
							<attribute key="device.variant" value="TMS320C67XX.DA810/DA80x"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_13.projectspec">
					<filter.ref ref.id="filter_161193547683800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_DA810DA80x"/>
							<attribute key="device.variant" value="TMS320C67XX.DA810/DA80x"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_10.projectspec">
					<filter.ref ref.id="filter_161193547683800"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_DA810DA80x"/>
							<attribute key="device.variant" value="TMS320C67XX.DA810/DA80x"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="DA830/DA828" desc="DA830/DA828" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_161193548272700">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>DA830/DA828</tag>
					<tag>TMS320C67XX</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_0.projectspec">
					<filter.ref ref.id="filter_161193548272700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_DA830DA828_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.DA830/DA828"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_1.projectspec">
					<filter.ref ref.id="filter_161193548272700"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_DA830DA828_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.DA830/DA828"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_161193548359200">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>DA830/DA828</tag>
					<tag>TMS320C67XX</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_14.projectspec">
					<filter.ref ref.id="filter_161193548359200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_DA830DA828_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.DA830/DA828"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_3.projectspec">
					<filter.ref ref.id="filter_161193548359200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_DA830DA828_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.DA830/DA828"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_4.projectspec">
					<filter.ref ref.id="filter_161193548359200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_DA830DA828_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.DA830/DA828"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_5.projectspec">
					<filter.ref ref.id="filter_161193548359200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_DA830DA828_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.DA830/DA828"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_6.projectspec">
					<filter.ref ref.id="filter_161193548359200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_DA830DA828_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.DA830/DA828"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_7.projectspec">
					<filter.ref ref.id="filter_161193548359200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_DA830DA828_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.DA830/DA828"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_8.projectspec">
					<filter.ref ref.id="filter_161193548359200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_DA830DA828_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.DA830/DA828"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_9.projectspec">
					<filter.ref ref.id="filter_161193548359200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_DA830DA828_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.DA830/DA828"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_11.projectspec">
					<filter.ref ref.id="filter_161193548359200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_DA830DA828_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.DA830/DA828"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_12.projectspec">
					<filter.ref ref.id="filter_161193548359200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_DA830DA828_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.DA830/DA828"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_13.projectspec">
					<filter.ref ref.id="filter_161193548359200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_DA830DA828_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.DA830/DA828"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_10.projectspec">
					<filter.ref ref.id="filter_161193548359200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_DA830DA828_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.DA830/DA828"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="DSKDA830" desc="DSKDA830" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_161193549465400">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>DSKDA830</tag>
					<tag>TMS320C67XX</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_0.projectspec">
					<filter.ref ref.id="filter_161193549465400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_DSKDA830_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.DA830/DA828.DSKDA830"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_1.projectspec">
					<filter.ref ref.id="filter_161193549465400"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_DSKDA830_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.DA830/DA828.DSKDA830"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_161193549552600">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>DSKDA830</tag>
					<tag>TMS320C67XX</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_14.projectspec">
					<filter.ref ref.id="filter_161193549552600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_DSKDA830_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.DA830/DA828.DSKDA830"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_3.projectspec">
					<filter.ref ref.id="filter_161193549552600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_DSKDA830_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.DA830/DA828.DSKDA830"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_4.projectspec">
					<filter.ref ref.id="filter_161193549552600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_DSKDA830_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.DA830/DA828.DSKDA830"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_5.projectspec">
					<filter.ref ref.id="filter_161193549552600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_DSKDA830_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.DA830/DA828.DSKDA830"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_6.projectspec">
					<filter.ref ref.id="filter_161193549552600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_DSKDA830_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.DA830/DA828.DSKDA830"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_7.projectspec">
					<filter.ref ref.id="filter_161193549552600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_DSKDA830_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.DA830/DA828.DSKDA830"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_8.projectspec">
					<filter.ref ref.id="filter_161193549552600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_DSKDA830_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.DA830/DA828.DSKDA830"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_9.projectspec">
					<filter.ref ref.id="filter_161193549552600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_DSKDA830_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.DA830/DA828.DSKDA830"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_11.projectspec">
					<filter.ref ref.id="filter_161193549552600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_DSKDA830_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.DA830/DA828.DSKDA830"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_12.projectspec">
					<filter.ref ref.id="filter_161193549552600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_DSKDA830_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.DA830/DA828.DSKDA830"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_13.projectspec">
					<filter.ref ref.id="filter_161193549552600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_DSKDA830_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.DA830/DA828.DSKDA830"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_10.projectspec">
					<filter.ref ref.id="filter_161193549552600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_DSKDA830_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.DA830/DA828.DSKDA830"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="TI814x" desc="TI814x" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_161193551167900">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>TI814x</tag>
					<tag>TMS320C67XX</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_0.projectspec">
					<filter.ref ref.id="filter_161193551167900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_TI814x_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.TI814x"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_1.projectspec">
					<filter.ref ref.id="filter_161193551167900"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_TI814x_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.TI814x"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_161193551322300">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>TI814x</tag>
					<tag>TMS320C67XX</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_14.projectspec">
					<filter.ref ref.id="filter_161193551322300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_TI814x_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.TI814x"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_3.projectspec">
					<filter.ref ref.id="filter_161193551322300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_TI814x_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.TI814x"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_4.projectspec">
					<filter.ref ref.id="filter_161193551322300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_TI814x_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.TI814x"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_5.projectspec">
					<filter.ref ref.id="filter_161193551322300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_TI814x_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.TI814x"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_6.projectspec">
					<filter.ref ref.id="filter_161193551322300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_TI814x_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.TI814x"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_7.projectspec">
					<filter.ref ref.id="filter_161193551322300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_TI814x_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.TI814x"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_8.projectspec">
					<filter.ref ref.id="filter_161193551322300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_TI814x_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.TI814x"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_9.projectspec">
					<filter.ref ref.id="filter_161193551322300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_TI814x_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.TI814x"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_11.projectspec">
					<filter.ref ref.id="filter_161193551322300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_TI814x_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.TI814x"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_12.projectspec">
					<filter.ref ref.id="filter_161193551322300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_TI814x_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.TI814x"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_13.projectspec">
					<filter.ref ref.id="filter_161193551322300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_TI814x_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.TI814x"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_10.projectspec">
					<filter.ref ref.id="filter_161193551322300"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_TI814x_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.TI814x"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="TI816x" desc="TI816x" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_161193552318600">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>TI816x</tag>
					<tag>TMS320C67XX</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_0.projectspec">
					<filter.ref ref.id="filter_161193552318600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_TI816x_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.TI816x"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\com_ti_rtsc_sysbios_example_1.projectspec">
					<filter.ref ref.id="filter_161193552318600"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_TI816x_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.TI816x"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_161193552461200">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>TI816x</tag>
					<tag>TMS320C67XX</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_14.projectspec">
					<filter.ref ref.id="filter_161193552461200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_TI816x_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.TI816x"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_3.projectspec">
					<filter.ref ref.id="filter_161193552461200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_TI816x_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.TI816x"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_4.projectspec">
					<filter.ref ref.id="filter_161193552461200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_TI816x_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.TI816x"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_5.projectspec">
					<filter.ref ref.id="filter_161193552461200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_TI816x_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.TI816x"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_6.projectspec">
					<filter.ref ref.id="filter_161193552461200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_TI816x_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.TI816x"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_7.projectspec">
					<filter.ref ref.id="filter_161193552461200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_TI816x_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.TI816x"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_8.projectspec">
					<filter.ref ref.id="filter_161193552461200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_TI816x_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.TI816x"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_9.projectspec">
					<filter.ref ref.id="filter_161193552461200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_TI816x_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.TI816x"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_11.projectspec">
					<filter.ref ref.id="filter_161193552461200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_TI816x_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.TI816x"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_12.projectspec">
					<filter.ref ref.id="filter_161193552461200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_TI816x_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.TI816x"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_13.projectspec">
					<filter.ref ref.id="filter_161193552461200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_TI816x_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.TI816x"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\ti\ccs5.5\bios_6_37_03_30\resources\genericExamples\com_ti_rtsc_sysbios_example_10.projectspec">
					<filter.ref ref.id="filter_161193552461200"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_TI816x_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.TI816x"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
		</contents>
	</contents>

</resource.explorer>
